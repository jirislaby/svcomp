/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 19 "include/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 20 "include/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22 "include/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "include/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "include/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "include/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 29 "include/asm-generic/int-ll64.h"
typedef long long __s64;
#line 30 "include/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 43 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 46 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 48 "include/asm-generic/int-ll64.h"
typedef int s32;
#line 49 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 51 "include/asm-generic/int-ll64.h"
typedef long long s64;
#line 52 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 11 "include/asm-generic/types.h"
typedef unsigned short umode_t;
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_mode_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_pid_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_uid_t;
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_gid_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned long __kernel_size_t;
#line 19 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_ssize_t;
#line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_time_t;
#line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_clock_t;
#line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_timer_t;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_clockid_t;
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long long __kernel_loff_t;
#line 41 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_uid_t __kernel_uid32_t;
#line 42 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_gid_t __kernel_gid32_t;
#line 21 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 24 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 26 "include/linux/types.h"
typedef __kernel_mode_t mode_t;
#line 29 "include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 34 "include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 37 "include/linux/types.h"
typedef _Bool bool;
#line 39 "include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 40 "include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 53 "include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 62 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 67 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 77 "include/linux/types.h"
typedef __kernel_time_t time_t;
#line 110 "include/linux/types.h"
typedef __s32 int32_t;
#line 116 "include/linux/types.h"
typedef __u32 uint32_t;
#line 141 "include/linux/types.h"
typedef unsigned long sector_t;
#line 142 "include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 201 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 202 "include/linux/types.h"
typedef unsigned int fmode_t;
#line 214 "include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 214 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 219 "include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 219 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 220 "include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 225
struct hlist_node;
#line 225 "include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 229 "include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 240 "include/linux/types.h"
struct rcu_head {
   struct rcu_head *next ;
   void (*func)(struct rcu_head * ) ;
};
#line 55 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
struct module;
#line 145 "include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 42 "include/linux/dynamic_debug.h"
struct device;
#line 53 "include/linux/dynamic_debug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 71 "include/asm-generic/bug.h"
struct completion;
#line 72
struct pt_regs;
#line 331 "include/linux/kernel.h"
struct pid;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 15 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
union __anonunion_ldv_2017_8 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion_ldv_2017_8 ldv_2017 ;
};
#line 28 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
struct __anonstruct_ldv_2024_10 {
   u32 read ;
   s32 write ;
};
#line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
union __anonunion_arch_rwlock_t_9 {
   s64 lock ;
   struct __anonstruct_ldv_2024_10 ldv_2024 ;
};
#line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
typedef union __anonunion_arch_rwlock_t_9 arch_rwlock_t;
#line 34
struct task_struct;
#line 35
struct lockdep_map;
#line 18 "include/linux/lockdep.h"
struct mm_struct;
#line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 125 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
struct __anonstruct_ldv_2139_12 {
   unsigned int a ;
   unsigned int b ;
};
#line 125 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
struct __anonstruct_ldv_2154_13 {
   u16 limit0 ;
   u16 base0 ;
   unsigned char base1 ;
   unsigned char type : 4 ;
   unsigned char s : 1 ;
   unsigned char dpl : 2 ;
   unsigned char p : 1 ;
   unsigned char limit : 4 ;
   unsigned char avl : 1 ;
   unsigned char l : 1 ;
   unsigned char d : 1 ;
   unsigned char g : 1 ;
   unsigned char base2 ;
};
#line 125 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
union __anonunion_ldv_2155_11 {
   struct __anonstruct_ldv_2139_12 ldv_2139 ;
   struct __anonstruct_ldv_2154_13 ldv_2154 ;
};
#line 125 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
struct desc_struct {
   union __anonunion_ldv_2155_11 ldv_2155 ;
};
#line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 192 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 194 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_15 {
   pgdval_t pgd ;
};
#line 194 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_15 pgd_t;
#line 282
struct page;
#line 282 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 290
struct file;
#line 305
struct seq_file;
#line 337
struct thread_struct;
#line 339
struct cpumask;
#line 301 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 203 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/vm86.h"
union __anonunion_ldv_2787_18 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 203 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_ldv_2787_18 ldv_2787 ;
};
#line 306 "include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[64U] ;
};
#line 13 "include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 636 "include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 233 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
struct jump_label_key;
#line 279 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 297 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_ldv_5174_23 {
   u64 rip ;
   u64 rdp ;
};
#line 297 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_ldv_5180_24 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 297 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union __anonunion_ldv_5181_22 {
   struct __anonstruct_ldv_5174_23 ldv_5174 ;
   struct __anonstruct_ldv_5180_24 ldv_5180 ;
};
#line 297 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union __anonunion_ldv_5190_25 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 297 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_ldv_5181_22 ldv_5181 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_ldv_5190_25 ldv_5190 ;
};
#line 331 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 352 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct ymmh_struct {
   u32 ymmh_space[64U] ;
};
#line 357 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2U] ;
   u64 reserved2[5U] ;
};
#line 363 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
};
#line 369 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 377 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct fpu {
   union thread_xstate *state ;
};
#line 423
struct kmem_cache;
#line 424
struct perf_event;
#line 425 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4U] ;
   unsigned long debugreg6 ;
   unsigned long ptrace_dr7 ;
   unsigned long cr2 ;
   unsigned long trap_no ;
   unsigned long error_code ;
   struct fpu fpu ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
};
#line 23 "include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 55 "include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__)) ;
#line 53 "include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 187 "include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned short class_idx : 13 ;
   unsigned char irq_context : 2 ;
   unsigned char trylock : 1 ;
   unsigned char read : 2 ;
   unsigned char check : 2 ;
   unsigned char hardirqs_off : 1 ;
   unsigned short references : 11 ;
};
#line 552 "include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "include/linux/spinlock_types.h"
struct __anonstruct_ldv_6015_29 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "include/linux/spinlock_types.h"
union __anonunion_ldv_6016_28 {
   struct raw_spinlock rlock ;
   struct __anonstruct_ldv_6015_29 ldv_6015 ;
};
#line 33 "include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_ldv_6016_28 ldv_6016 ;
};
#line 76 "include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_30 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_30 rwlock_t;
#line 23 "include/linux/rwlock_types.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 63 "include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 93 "include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 96 "include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 104
struct dentry;
#line 105
struct user_namespace;
#line 554
struct timespec;
#line 110 "include/linux/seqlock.h"
struct seqcount {
   unsigned int sequence ;
};
#line 121 "include/linux/seqlock.h"
typedef struct seqcount seqcount_t;
#line 233 "include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 312 "include/linux/jiffies.h"
struct rb_node {
   unsigned long rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 108 "include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 98 "include/linux/nodemask.h"
struct __anonstruct_nodemask_t_37 {
   unsigned long bits[16U] ;
};
#line 98 "include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_37 nodemask_t;
#line 508
struct prio_tree_node;
#line 508 "include/linux/nodemask.h"
struct raw_prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
};
#line 19 "include/linux/prio_tree.h"
struct prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
   unsigned long start ;
   unsigned long last ;
};
#line 27 "include/linux/prio_tree.h"
struct prio_tree_root {
   struct prio_tree_node *prio_tree_node ;
   unsigned short index_bits ;
   unsigned short raw ;
};
#line 111
struct rw_semaphore;
#line 112 "include/linux/prio_tree.h"
struct rw_semaphore {
   long count ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 49 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 54 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 665 "include/linux/wait.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_38 {
   void *ldt ;
   int size ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_38 mm_context_t;
#line 26
struct address_space;
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
union __anonunion_ldv_7658_40 {
   unsigned long index ;
   void *freelist ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_ldv_7668_44 {
   unsigned short inuse ;
   unsigned short objects : 15 ;
   unsigned char frozen : 1 ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
union __anonunion_ldv_7669_43 {
   atomic_t _mapcount ;
   struct __anonstruct_ldv_7668_44 ldv_7668 ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_ldv_7671_42 {
   union __anonunion_ldv_7669_43 ldv_7669 ;
   atomic_t _count ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
union __anonunion_ldv_7672_41 {
   unsigned long counters ;
   struct __anonstruct_ldv_7671_42 ldv_7671 ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_ldv_7673_39 {
   union __anonunion_ldv_7658_40 ldv_7658 ;
   union __anonunion_ldv_7672_41 ldv_7672 ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_ldv_7680_46 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
union __anonunion_ldv_7681_45 {
   struct list_head lru ;
   struct __anonstruct_ldv_7680_46 ldv_7680 ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
union __anonunion_ldv_7686_47 {
   unsigned long private ;
   struct kmem_cache *slab ;
   struct page *first_page ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct page {
   unsigned long flags ;
   struct address_space *mapping ;
   struct __anonstruct_ldv_7673_39 ldv_7673 ;
   union __anonunion_ldv_7681_45 ldv_7681 ;
   union __anonunion_ldv_7686_47 ldv_7686 ;
};
#line 193 "include/linux/mm_types.h"
struct __anonstruct_vm_set_49 {
   struct list_head list ;
   void *parent ;
   struct vm_area_struct *head ;
};
#line 193 "include/linux/mm_types.h"
union __anonunion_shared_48 {
   struct __anonstruct_vm_set_49 vm_set ;
   struct raw_prio_tree_node prio_tree_node ;
};
#line 193
struct anon_vma;
#line 193
struct vm_operations_struct;
#line 193
struct mempolicy;
#line 193 "include/linux/mm_types.h"
struct vm_area_struct {
   struct mm_struct *vm_mm ;
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct rb_node vm_rb ;
   union __anonunion_shared_48 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};
#line 256 "include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 262 "include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 275 "include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};
#line 288
struct linux_binfmt;
#line 288
struct mmu_notifier_mm;
#line 288 "include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   void (*unmap_area)(struct mm_struct * , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long task_size ;
   unsigned long cached_hole_size ;
   unsigned long free_area_cache ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long reserved_vm ;
   unsigned long def_flags ;
   unsigned long nr_ptes ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[44U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned int faultstamp ;
   unsigned int token_priority ;
   unsigned int last_interval ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct hlist_head ioctx_list ;
   struct task_struct *owner ;
   struct file *exe_file ;
   unsigned long num_exe_file_vmas ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   pgtable_t pmd_huge_pte ;
   struct cpumask cpumask_allocation ;
};
#line 7 "include/asm-generic/cputime.h"
typedef unsigned long cputime_t;
#line 174 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mpspec.h"
union ktime {
   s64 tv64 ;
};
#line 59 "include/linux/ktime.h"
typedef union ktime ktime_t;
#line 99 "include/linux/debugobjects.h"
struct tvec_base;
#line 100 "include/linux/debugobjects.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 289 "include/linux/timer.h"
struct hrtimer;
#line 290
enum hrtimer_restart;
#line 302
struct work_struct;
#line 45 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 86 "include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
};
#line 46 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 52 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 53 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 311
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 318
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 326
struct wakeup_source;
#line 471 "include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
};
#line 476
struct pm_qos_constraints;
#line 476 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned char can_wakeup : 1 ;
   unsigned char async_suspend : 1 ;
   bool is_prepared ;
   bool is_suspended ;
   bool ignore_children ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned char disable_depth : 3 ;
   unsigned char idle_notification : 1 ;
   unsigned char request_pending : 1 ;
   unsigned char deferred_resume : 1 ;
   unsigned char run_wake : 1 ;
   unsigned char runtime_auto : 1 ;
   unsigned char no_callbacks : 1 ;
   unsigned char irq_safe : 1 ;
   unsigned char use_autosuspend : 1 ;
   unsigned char timer_autosuspends : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   struct pm_subsys_data *subsys_data ;
   struct pm_qos_constraints *constraints ;
};
#line 532 "include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 98 "include/linux/sem.h"
struct sem_undo_list;
#line 98 "include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 107
struct siginfo;
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_140 {
   unsigned long sig[1U] ;
};
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_140 sigset_t;
#line 17 "include/asm-generic/signal-defs.h"
typedef void __signalfn_t(int  );
#line 18 "include/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "include/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 21 "include/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 126 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 173 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 185 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 10 "include/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__kill_142 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__timer_143 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__rt_144 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__sigchld_145 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__sigfault_146 {
   void *_addr ;
   short _addr_lsb ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_147 {
   long _band ;
   int _fd ;
};
#line 11 "include/asm-generic/siginfo.h"
union __anonunion__sifields_141 {
   int _pad[28U] ;
   struct __anonstruct__kill_142 _kill ;
   struct __anonstruct__timer_143 _timer ;
   struct __anonstruct__rt_144 _rt ;
   struct __anonstruct__sigchld_145 _sigchld ;
   struct __anonstruct__sigfault_146 _sigfault ;
   struct __anonstruct__sigpoll_147 _sigpoll ;
};
#line 11 "include/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_141 _sifields ;
};
#line 94 "include/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 14 "include/linux/signal.h"
struct user_struct;
#line 24 "include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 387
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 394
struct pid_namespace;
#line 394 "include/linux/signal.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct rcu_head rcu ;
   struct upid numbers[1U] ;
};
#line 68 "include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 10 "include/linux/seccomp.h"
struct __anonstruct_seccomp_t_150 {
   int mode ;
};
#line 10 "include/linux/seccomp.h"
typedef struct __anonstruct_seccomp_t_150 seccomp_t;
#line 427 "include/linux/rculist.h"
struct plist_head {
   struct list_head node_list ;
};
#line 84 "include/linux/plist.h"
struct plist_node {
   int prio ;
   struct list_head prio_list ;
   struct list_head node_list ;
};
#line 20 "include/linux/rtmutex.h"
struct rt_mutex {
   raw_spinlock_t wait_lock ;
   struct plist_head wait_list ;
   struct task_struct *owner ;
   int save_state ;
   char const   *name ;
   char const   *file ;
   int line ;
   void *magic ;
};
#line 38
struct rt_mutex_waiter;
#line 41 "include/linux/resource.h"
struct rlimit {
   unsigned long rlim_cur ;
   unsigned long rlim_max ;
};
#line 85 "include/linux/resource.h"
struct timerqueue_node {
   struct rb_node node ;
   ktime_t expires ;
};
#line 12 "include/linux/timerqueue.h"
struct timerqueue_head {
   struct rb_root head ;
   struct timerqueue_node *next ;
};
#line 50
struct hrtimer_clock_base;
#line 51
struct hrtimer_cpu_base;
#line 60
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 65 "include/linux/timerqueue.h"
struct hrtimer {
   struct timerqueue_node node ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};
#line 132 "include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   int index ;
   clockid_t clockid ;
   struct timerqueue_head active ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 162 "include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   raw_spinlock_t lock ;
   unsigned long active_bases ;
   ktime_t expires_next ;
   int hres_active ;
   int hang_detected ;
   unsigned long nr_events ;
   unsigned long nr_retries ;
   unsigned long nr_hangs ;
   ktime_t max_hang_time ;
   struct hrtimer_clock_base clock_base[3U] ;
};
#line 452 "include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 45 "include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 835 "include/linux/sysctl.h"
struct nsproxy;
#line 29 "include/linux/key.h"
typedef int32_t key_serial_t;
#line 32 "include/linux/key.h"
typedef uint32_t key_perm_t;
#line 33
struct key;
#line 34
struct signal_struct;
#line 35
struct cred;
#line 36
struct key_type;
#line 38
struct keyring_list;
#line 115
struct key_user;
#line 115 "include/linux/key.h"
union __anonunion_ldv_13811_153 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 115 "include/linux/key.h"
union __anonunion_type_data_154 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
   int reject_error ;
};
#line 115 "include/linux/key.h"
union __anonunion_payload_155 {
   unsigned long value ;
   void *rcudata ;
   void *data ;
   struct keyring_list *subscriptions ;
};
#line 115 "include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   struct rb_node serial_node ;
   struct key_type *type ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_ldv_13811_153 ldv_13811 ;
   uid_t uid ;
   gid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   char *description ;
   union __anonunion_type_data_154 type_data ;
   union __anonunion_payload_155 payload ;
};
#line 310
struct audit_context;
#line 27 "include/linux/selinux.h"
struct inode;
#line 28 "include/linux/selinux.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   gid_t small_block[32U] ;
   gid_t *blocks[0U] ;
};
#line 77 "include/linux/cred.h"
struct thread_group_cred {
   atomic_t usage ;
   pid_t tgid ;
   spinlock_t lock ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct rcu_head rcu ;
};
#line 91 "include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   uid_t uid ;
   gid_t gid ;
   uid_t suid ;
   gid_t sgid ;
   uid_t euid ;
   gid_t egid ;
   uid_t fsuid ;
   gid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   struct thread_group_cred *tgcred ;
   void *security ;
   struct user_struct *user ;
   struct user_namespace *user_ns ;
   struct group_info *group_info ;
   struct rcu_head rcu ;
};
#line 264
struct llist_node;
#line 65 "include/linux/llist.h"
struct llist_node {
   struct llist_node *next ;
};
#line 186
struct futex_pi_state;
#line 187
struct robust_list_head;
#line 188
struct bio_list;
#line 189
struct fs_struct;
#line 190
struct perf_event_context;
#line 191
struct blk_plug;
#line 150 "include/linux/sched.h"
struct cfs_rq;
#line 44 "include/linux/aio_abi.h"
struct io_event {
   __u64 data ;
   __u64 obj ;
   __s64 res ;
   __s64 res2 ;
};
#line 106 "include/linux/aio_abi.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 54 "include/linux/uio.h"
struct kioctx;
#line 55 "include/linux/uio.h"
union __anonunion_ki_obj_156 {
   void *user ;
   struct task_struct *tsk ;
};
#line 55
struct eventfd_ctx;
#line 55 "include/linux/uio.h"
struct kiocb {
   struct list_head ki_run_list ;
   unsigned long ki_flags ;
   int ki_users ;
   unsigned int ki_key ;
   struct file *ki_filp ;
   struct kioctx *ki_ctx ;
   int (*ki_cancel)(struct kiocb * , struct io_event * ) ;
   ssize_t (*ki_retry)(struct kiocb * ) ;
   void (*ki_dtor)(struct kiocb * ) ;
   union __anonunion_ki_obj_156 ki_obj ;
   __u64 ki_user_data ;
   loff_t ki_pos ;
   void *private ;
   unsigned short ki_opcode ;
   size_t ki_nbytes ;
   char *ki_buf ;
   size_t ki_left ;
   struct iovec ki_inline_vec ;
   struct iovec *ki_iovec ;
   unsigned long ki_nr_segs ;
   unsigned long ki_cur_seg ;
   struct list_head ki_list ;
   struct list_head ki_batch ;
   struct eventfd_ctx *ki_eventfd ;
};
#line 162 "include/linux/aio.h"
struct aio_ring_info {
   unsigned long mmap_base ;
   unsigned long mmap_size ;
   struct page **ring_pages ;
   spinlock_t ring_lock ;
   long nr_pages ;
   unsigned int nr ;
   unsigned int tail ;
   struct page *internal_pages[8U] ;
};
#line 178 "include/linux/aio.h"
struct kioctx {
   atomic_t users ;
   int dead ;
   struct mm_struct *mm ;
   unsigned long user_id ;
   struct hlist_node list ;
   wait_queue_head_t wait ;
   spinlock_t ctx_lock ;
   int reqs_active ;
   struct list_head active_reqs ;
   struct list_head run_list ;
   unsigned int max_reqs ;
   struct aio_ring_info ring_info ;
   struct delayed_work wq ;
   struct rcu_head rcu_head ;
};
#line 404 "include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 447 "include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 455 "include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};
#line 462 "include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 479 "include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   raw_spinlock_t lock ;
};
#line 515
struct autogroup;
#line 516
struct tty_struct;
#line 516
struct taskstats;
#line 516
struct tty_audit_buf;
#line 516 "include/linux/sched.h"
struct signal_struct {
   atomic_t sigcnt ;
   atomic_t live ;
   int nr_threads ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2U] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   struct autogroup *autogroup ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   cputime_t prev_utime ;
   cputime_t prev_stime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   struct rw_semaphore threadgroup_fork_lock ;
   int oom_adj ;
   int oom_score_adj ;
   int oom_score_adj_min ;
   struct mutex cred_guard_mutex ;
};
#line 683 "include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t files ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t fanotify_listeners ;
   atomic_long_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   uid_t uid ;
   struct user_namespace *user_ns ;
   atomic_long_t locked_vm ;
};
#line 728
struct backing_dev_info;
#line 729
struct reclaim_state;
#line 730 "include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
};
#line 744 "include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 1037
struct io_context;
#line 1059
struct pipe_inode_info;
#line 1061
struct rq;
#line 1062 "include/linux/sched.h"
struct sched_class {
   struct sched_class  const  *next ;
   void (*enqueue_task)(struct rq * , struct task_struct * , int  ) ;
   void (*dequeue_task)(struct rq * , struct task_struct * , int  ) ;
   void (*yield_task)(struct rq * ) ;
   bool (*yield_to_task)(struct rq * , struct task_struct * , bool  ) ;
   void (*check_preempt_curr)(struct rq * , struct task_struct * , int  ) ;
   struct task_struct *(*pick_next_task)(struct rq * ) ;
   void (*put_prev_task)(struct rq * , struct task_struct * ) ;
   int (*select_task_rq)(struct task_struct * , int  , int  ) ;
   void (*pre_schedule)(struct rq * , struct task_struct * ) ;
   void (*post_schedule)(struct rq * ) ;
   void (*task_waking)(struct task_struct * ) ;
   void (*task_woken)(struct rq * , struct task_struct * ) ;
   void (*set_cpus_allowed)(struct task_struct * , struct cpumask  const  * ) ;
   void (*rq_online)(struct rq * ) ;
   void (*rq_offline)(struct rq * ) ;
   void (*set_curr_task)(struct rq * ) ;
   void (*task_tick)(struct rq * , struct task_struct * , int  ) ;
   void (*task_fork)(struct task_struct * ) ;
   void (*switched_from)(struct rq * , struct task_struct * ) ;
   void (*switched_to)(struct rq * , struct task_struct * ) ;
   void (*prio_changed)(struct rq * , struct task_struct * , int  ) ;
   unsigned int (*get_rr_interval)(struct rq * , struct task_struct * ) ;
   void (*task_move_group)(struct task_struct * , int  ) ;
};
#line 1127 "include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   unsigned long inv_weight ;
};
#line 1132 "include/linux/sched.h"
struct sched_statistics {
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
};
#line 1167 "include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 nr_migrations ;
   struct sched_statistics statistics ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
};
#line 1193
struct rt_rq;
#line 1193 "include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned int time_slice ;
   int nr_cpus_allowed ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1217
struct mem_cgroup;
#line 1217 "include/linux/sched.h"
struct memcg_batch_info {
   int do_batch ;
   struct mem_cgroup *memcg ;
   unsigned long nr_pages ;
   unsigned long memsw_nr_pages ;
};
#line 1571
struct files_struct;
#line 1571
struct irqaction;
#line 1571
struct css_set;
#line 1571
struct compat_robust_list_head;
#line 1571 "include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   struct llist_node wake_entry ;
   int on_cpu ;
   int on_rq ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct hlist_head preempt_notifiers ;
   unsigned char fpu_counter ;
   unsigned int policy ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   unsigned char brk_randomized : 1 ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int jobctl ;
   unsigned int personality ;
   unsigned char did_exec : 1 ;
   unsigned char in_execve : 1 ;
   unsigned char in_iowait : 1 ;
   unsigned char sched_reset_on_fork : 1 ;
   unsigned char sched_contributes_to_load : 1 ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   cputime_t prev_utime ;
   cputime_t prev_stime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   struct cred *replacement_session_keyring ;
   char comm[16U] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void * ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct audit_context *audit_context ;
   uid_t loginuid ;
   unsigned int sessionid ;
   seccomp_t seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   struct irqaction *irqaction ;
   raw_spinlock_t pi_lock ;
   struct plist_head pi_waiters ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio_list *bio_list ;
   struct blk_plug *plug ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   int mems_allowed_change_disable ;
   int cpuset_mem_spread_rotor ;
   int cpuset_slab_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp[2U] ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   short pref_node_fork ;
   struct rcu_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   int nr_dirtied ;
   int nr_dirtied_pause ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   struct list_head *scm_work_list ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   struct memcg_batch_info memcg_batch ;
   atomic_t ptrace_bp_refcnt ;
};
#line 215 "include/linux/mod_devicetable.h"
struct of_device_id {
   char name[32U] ;
   char type[32U] ;
   char compatible[128U] ;
   void *data ;
};
#line 544
struct sock;
#line 545
struct kobject;
#line 546
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 552 "include/linux/mod_devicetable.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 57 "include/linux/kobject_ns.h"
struct attribute {
   char const   *name ;
   mode_t mode ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 33 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 62 "include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 98 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct kobject * , struct attribute  const  * ) ;
};
#line 117
struct sysfs_dirent;
#line 182 "include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 49 "include/linux/kobject.h"
struct kset;
#line 49
struct kobj_type;
#line 49 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned char state_initialized : 1 ;
   unsigned char state_in_sysfs : 1 ;
   unsigned char state_add_uevent_sent : 1 ;
   unsigned char state_remove_uevent_sent : 1 ;
   unsigned char uevent_suppress : 1 ;
};
#line 107 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 115 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 122 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 139 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 217
struct klist_node;
#line 37 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 67
struct dma_map_ops;
#line 67 "include/linux/klist.h"
struct dev_archdata {
   void *acpi_handle ;
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct device_private;
#line 18
struct device_driver;
#line 19
struct driver_private;
#line 20
struct class;
#line 21
struct subsys_private;
#line 22
struct bus_type;
#line 23
struct device_node;
#line 24
struct iommu_ops;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 51 "include/linux/device.h"
struct device_attribute;
#line 51
struct driver_attribute;
#line 51 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
};
#line 160 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 225 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 255
struct class_attribute;
#line 255 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct bin_attribute *dev_bin_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , mode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 312
struct device_type;
#line 351 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct class * , struct class_attribute  const  * ) ;
};
#line 404 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , mode_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 431 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 492 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 501
struct dma_coherent_mem;
#line 501 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   dev_t devt ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
};
#line 613 "include/linux/device.h"
struct wakeup_source {
   char *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long hit_count ;
   unsigned char active : 1 ;
};
#line 28 "include/linux/of.h"
typedef u32 phandle;
#line 30 "include/linux/of.h"
struct property {
   char *name ;
   int length ;
   void *value ;
   struct property *next ;
   unsigned long _flags ;
   unsigned int unique_id ;
};
#line 39
struct proc_dir_entry;
#line 39 "include/linux/of.h"
struct device_node {
   char const   *name ;
   char const   *type ;
   phandle phandle ;
   char *full_name ;
   struct property *properties ;
   struct property *deadprops ;
   struct device_node *parent ;
   struct device_node *child ;
   struct device_node *sibling ;
   struct device_node *next ;
   struct device_node *allnext ;
   struct proc_dir_entry *pde ;
   struct kref kref ;
   unsigned long _flags ;
   void *data ;
};
#line 40 "include/linux/i2c.h"
struct i2c_msg;
#line 41
struct i2c_algorithm;
#line 42
struct i2c_adapter;
#line 45
union i2c_smbus_data;
#line 335 "include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter * , struct i2c_msg * , int  ) ;
   int (*smbus_xfer)(struct i2c_adapter * , u16  , unsigned short  , char  , u8  ,
                     int  , union i2c_smbus_data * ) ;
   u32 (*functionality)(struct i2c_adapter * ) ;
};
#line 367 "include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int class ;
   struct i2c_algorithm  const  *algo ;
   void *algo_data ;
   struct rt_mutex bus_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
   struct mutex userspace_clients_lock ;
   struct list_head userspace_clients ;
};
#line 485 "include/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 537 "include/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 112 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   uid_t uid ;
   gid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 27 "include/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 28 "include/linux/elf.h"
typedef __u16 Elf64_Half;
#line 32 "include/linux/elf.h"
typedef __u32 Elf64_Word;
#line 33 "include/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 202 "include/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 210 "include/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 445
struct kernel_param;
#line 446 "include/linux/elf.h"
struct kernel_param_ops {
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 49 "include/linux/moduleparam.h"
struct kparam_string;
#line 49
struct kparam_array;
#line 49 "include/linux/moduleparam.h"
union __anonunion_ldv_17703_163 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 49 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   u16 flags ;
   union __anonunion_ldv_17703_163 ldv_17703 ;
};
#line 64 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 70 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 429 "include/linux/moduleparam.h"
struct jump_label_key {
   atomic_t enabled ;
};
#line 105 "include/linux/jump_label.h"
struct tracepoint;
#line 106 "include/linux/jump_label.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};
#line 29 "include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   struct jump_label_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 86 "include/linux/tracepoint.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 27 "include/linux/export.h"
struct mod_arch_specific {

};
#line 36 "include/linux/module.h"
struct module_param_attrs;
#line 36 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 45 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 71
struct exception_table_entry;
#line 200
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2
} ;
#line 206 "include/linux/module.h"
struct module_ref {
   unsigned int incs ;
   unsigned int decs ;
};
#line 354
struct module_sect_attrs;
#line 354
struct module_notes_attrs;
#line 354
struct ftrace_event_call;
#line 354 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   struct list_head source_list ;
   struct list_head target_list ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 123 "include/linux/kmemleak.h"
struct kmem_cache_cpu {
   void **freelist ;
   unsigned long tid ;
   struct page *page ;
   struct page *partial ;
   int node ;
   unsigned int stat[24U] ;
};
#line 52 "include/linux/slub_def.h"
struct kmem_cache_node {
   spinlock_t list_lock ;
   unsigned long nr_partial ;
   struct list_head partial ;
   atomic_long_t nr_slabs ;
   atomic_long_t total_objects ;
   struct list_head full ;
};
#line 63 "include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 73 "include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   unsigned long min_partial ;
   int size ;
   int objsize ;
   int offset ;
   int cpu_partial ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   int reserved ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 355 "include/linux/slab.h"
enum fe_type {
    FE_QPSK = 0,
    FE_QAM = 1,
    FE_OFDM = 2,
    FE_ATSC = 3
} ;
#line 36 "include/linux/dvb/frontend.h"
typedef enum fe_type fe_type_t;
#line 37
enum fe_caps {
    FE_IS_STUPID = 0,
    FE_CAN_INVERSION_AUTO = 1,
    FE_CAN_FEC_1_2 = 2,
    FE_CAN_FEC_2_3 = 4,
    FE_CAN_FEC_3_4 = 8,
    FE_CAN_FEC_4_5 = 16,
    FE_CAN_FEC_5_6 = 32,
    FE_CAN_FEC_6_7 = 64,
    FE_CAN_FEC_7_8 = 128,
    FE_CAN_FEC_8_9 = 256,
    FE_CAN_FEC_AUTO = 512,
    FE_CAN_QPSK = 1024,
    FE_CAN_QAM_16 = 2048,
    FE_CAN_QAM_32 = 4096,
    FE_CAN_QAM_64 = 8192,
    FE_CAN_QAM_128 = 16384,
    FE_CAN_QAM_256 = 32768,
    FE_CAN_QAM_AUTO = 65536,
    FE_CAN_TRANSMISSION_MODE_AUTO = 131072,
    FE_CAN_BANDWIDTH_AUTO = 262144,
    FE_CAN_GUARD_INTERVAL_AUTO = 524288,
    FE_CAN_HIERARCHY_AUTO = 1048576,
    FE_CAN_8VSB = 2097152,
    FE_CAN_16VSB = 4194304,
    FE_HAS_EXTENDED_CAPS = 8388608,
    FE_CAN_TURBO_FEC = 134217728,
    FE_CAN_2G_MODULATION = 268435456,
    FE_NEEDS_BENDING = 536870912,
    FE_CAN_RECOVER = 1073741824,
    FE_CAN_MUTE_TS = 2147483648L
} ;
#line 70 "include/linux/dvb/frontend.h"
typedef enum fe_caps fe_caps_t;
#line 71 "include/linux/dvb/frontend.h"
struct dvb_frontend_info {
   char name[128U] ;
   fe_type_t type ;
   __u32 frequency_min ;
   __u32 frequency_max ;
   __u32 frequency_stepsize ;
   __u32 frequency_tolerance ;
   __u32 symbol_rate_min ;
   __u32 symbol_rate_max ;
   __u32 symbol_rate_tolerance ;
   __u32 notifier_delay ;
   fe_caps_t caps ;
};
#line 86 "include/linux/dvb/frontend.h"
struct dvb_diseqc_master_cmd {
   __u8 msg[6U] ;
   __u8 msg_len ;
};
#line 96 "include/linux/dvb/frontend.h"
struct dvb_diseqc_slave_reply {
   __u8 msg[4U] ;
   __u8 msg_len ;
   int timeout ;
};
#line 103
enum fe_sec_voltage {
    SEC_VOLTAGE_13 = 0,
    SEC_VOLTAGE_18 = 1,
    SEC_VOLTAGE_OFF = 2
} ;
#line 109 "include/linux/dvb/frontend.h"
typedef enum fe_sec_voltage fe_sec_voltage_t;
#line 110
enum fe_sec_tone_mode {
    SEC_TONE_ON = 0,
    SEC_TONE_OFF = 1
} ;
#line 115 "include/linux/dvb/frontend.h"
typedef enum fe_sec_tone_mode fe_sec_tone_mode_t;
#line 116
enum fe_sec_mini_cmd {
    SEC_MINI_A = 0,
    SEC_MINI_B = 1
} ;
#line 121 "include/linux/dvb/frontend.h"
typedef enum fe_sec_mini_cmd fe_sec_mini_cmd_t;
#line 122
enum fe_status {
    FE_HAS_SIGNAL = 1,
    FE_HAS_CARRIER = 2,
    FE_HAS_VITERBI = 4,
    FE_HAS_SYNC = 8,
    FE_HAS_LOCK = 16,
    FE_TIMEDOUT = 32,
    FE_REINIT = 64
} ;
#line 132 "include/linux/dvb/frontend.h"
typedef enum fe_status fe_status_t;
#line 133
enum fe_spectral_inversion {
    INVERSION_OFF = 0,
    INVERSION_ON = 1,
    INVERSION_AUTO = 2
} ;
#line 139 "include/linux/dvb/frontend.h"
typedef enum fe_spectral_inversion fe_spectral_inversion_t;
#line 140
enum fe_code_rate {
    FEC_NONE = 0,
    FEC_1_2 = 1,
    FEC_2_3 = 2,
    FEC_3_4 = 3,
    FEC_4_5 = 4,
    FEC_5_6 = 5,
    FEC_6_7 = 6,
    FEC_7_8 = 7,
    FEC_8_9 = 8,
    FEC_AUTO = 9,
    FEC_3_5 = 10,
    FEC_9_10 = 11
} ;
#line 155 "include/linux/dvb/frontend.h"
typedef enum fe_code_rate fe_code_rate_t;
#line 156
enum fe_modulation {
    QPSK = 0,
    QAM_16 = 1,
    QAM_32 = 2,
    QAM_64 = 3,
    QAM_128 = 4,
    QAM_256 = 5,
    QAM_AUTO = 6,
    VSB_8 = 7,
    VSB_16 = 8,
    PSK_8 = 9,
    APSK_16 = 10,
    APSK_32 = 11,
    DQPSK = 12
} ;
#line 172 "include/linux/dvb/frontend.h"
typedef enum fe_modulation fe_modulation_t;
#line 173
enum fe_transmit_mode {
    TRANSMISSION_MODE_2K = 0,
    TRANSMISSION_MODE_8K = 1,
    TRANSMISSION_MODE_AUTO = 2,
    TRANSMISSION_MODE_4K = 3,
    TRANSMISSION_MODE_1K = 4,
    TRANSMISSION_MODE_16K = 5,
    TRANSMISSION_MODE_32K = 6
} ;
#line 182 "include/linux/dvb/frontend.h"
typedef enum fe_transmit_mode fe_transmit_mode_t;
#line 183
enum fe_bandwidth {
    BANDWIDTH_8_MHZ = 0,
    BANDWIDTH_7_MHZ = 1,
    BANDWIDTH_6_MHZ = 2,
    BANDWIDTH_AUTO = 3,
    BANDWIDTH_5_MHZ = 4,
    BANDWIDTH_10_MHZ = 5,
    BANDWIDTH_1_712_MHZ = 6
} ;
#line 192 "include/linux/dvb/frontend.h"
typedef enum fe_bandwidth fe_bandwidth_t;
#line 193
enum fe_guard_interval {
    GUARD_INTERVAL_1_32 = 0,
    GUARD_INTERVAL_1_16 = 1,
    GUARD_INTERVAL_1_8 = 2,
    GUARD_INTERVAL_1_4 = 3,
    GUARD_INTERVAL_AUTO = 4,
    GUARD_INTERVAL_1_128 = 5,
    GUARD_INTERVAL_19_128 = 6,
    GUARD_INTERVAL_19_256 = 7
} ;
#line 204 "include/linux/dvb/frontend.h"
typedef enum fe_guard_interval fe_guard_interval_t;
#line 205
enum fe_hierarchy {
    HIERARCHY_NONE = 0,
    HIERARCHY_1 = 1,
    HIERARCHY_2 = 2,
    HIERARCHY_4 = 3,
    HIERARCHY_AUTO = 4
} ;
#line 213 "include/linux/dvb/frontend.h"
typedef enum fe_hierarchy fe_hierarchy_t;
#line 214 "include/linux/dvb/frontend.h"
struct dvb_qpsk_parameters {
   __u32 symbol_rate ;
   fe_code_rate_t fec_inner ;
};
#line 220 "include/linux/dvb/frontend.h"
struct dvb_qam_parameters {
   __u32 symbol_rate ;
   fe_code_rate_t fec_inner ;
   fe_modulation_t modulation ;
};
#line 226 "include/linux/dvb/frontend.h"
struct dvb_vsb_parameters {
   fe_modulation_t modulation ;
};
#line 230 "include/linux/dvb/frontend.h"
struct dvb_ofdm_parameters {
   fe_bandwidth_t bandwidth ;
   fe_code_rate_t code_rate_HP ;
   fe_code_rate_t code_rate_LP ;
   fe_modulation_t constellation ;
   fe_transmit_mode_t transmission_mode ;
   fe_guard_interval_t guard_interval ;
   fe_hierarchy_t hierarchy_information ;
};
#line 240 "include/linux/dvb/frontend.h"
union __anonunion_u_164 {
   struct dvb_qpsk_parameters qpsk ;
   struct dvb_qam_parameters qam ;
   struct dvb_ofdm_parameters ofdm ;
   struct dvb_vsb_parameters vsb ;
};
#line 240 "include/linux/dvb/frontend.h"
struct dvb_frontend_parameters {
   __u32 frequency ;
   fe_spectral_inversion_t inversion ;
   union __anonunion_u_164 u ;
};
#line 259
enum fe_pilot {
    PILOT_ON = 0,
    PILOT_OFF = 1,
    PILOT_AUTO = 2
} ;
#line 327 "include/linux/dvb/frontend.h"
typedef enum fe_pilot fe_pilot_t;
#line 328
enum fe_rolloff {
    ROLLOFF_35 = 0,
    ROLLOFF_20 = 1,
    ROLLOFF_25 = 2,
    ROLLOFF_AUTO = 3
} ;
#line 334 "include/linux/dvb/frontend.h"
typedef enum fe_rolloff fe_rolloff_t;
#line 335
enum fe_delivery_system {
    SYS_UNDEFINED = 0,
    SYS_DVBC_ANNEX_A = 1,
    SYS_DVBC_ANNEX_B = 2,
    SYS_DVBT = 3,
    SYS_DSS = 4,
    SYS_DVBS = 5,
    SYS_DVBS2 = 6,
    SYS_DVBH = 7,
    SYS_ISDBT = 8,
    SYS_ISDBS = 9,
    SYS_ISDBC = 10,
    SYS_ATSC = 11,
    SYS_ATSCMH = 12,
    SYS_DMBTH = 13,
    SYS_CMMB = 14,
    SYS_DAB = 15,
    SYS_DVBT2 = 16,
    SYS_TURBO = 17,
    SYS_DVBC_ANNEX_C = 18
} ;
#line 356 "include/linux/dvb/frontend.h"
typedef enum fe_delivery_system fe_delivery_system_t;
#line 372 "include/linux/dvb/frontend.h"
struct __anonstruct_buffer_166 {
   __u8 data[32U] ;
   __u32 len ;
   __u32 reserved1[3U] ;
   void *reserved2 ;
};
#line 372 "include/linux/dvb/frontend.h"
union __anonunion_u_165 {
   __u32 data ;
   struct __anonstruct_buffer_166 buffer ;
};
#line 372 "include/linux/dvb/frontend.h"
struct dtv_property {
   __u32 cmd ;
   __u32 reserved[3U] ;
   union __anonunion_u_165 u ;
   int result ;
};
#line 39 "include/asm-generic/poll.h"
struct block_device;
#line 92 "include/linux/bit_spinlock.h"
struct hlist_bl_node;
#line 92 "include/linux/bit_spinlock.h"
struct hlist_bl_head {
   struct hlist_bl_node *first ;
};
#line 36 "include/linux/list_bl.h"
struct hlist_bl_node {
   struct hlist_bl_node *next ;
   struct hlist_bl_node **pprev ;
};
#line 114 "include/linux/rculist_bl.h"
struct nameidata;
#line 115
struct path;
#line 116
struct vfsmount;
#line 117 "include/linux/rculist_bl.h"
struct qstr {
   unsigned int hash ;
   unsigned int len ;
   unsigned char const   *name ;
};
#line 100 "include/linux/dcache.h"
struct dentry_operations;
#line 100
struct super_block;
#line 100 "include/linux/dcache.h"
union __anonunion_d_u_167 {
   struct list_head d_child ;
   struct rcu_head d_rcu ;
};
#line 100 "include/linux/dcache.h"
struct dentry {
   unsigned int d_flags ;
   seqcount_t d_seq ;
   struct hlist_bl_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct inode *d_inode ;
   unsigned char d_iname[32U] ;
   unsigned int d_count ;
   spinlock_t d_lock ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   unsigned long d_time ;
   void *d_fsdata ;
   struct list_head d_lru ;
   union __anonunion_d_u_167 d_u ;
   struct list_head d_subdirs ;
   struct list_head d_alias ;
};
#line 151 "include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , struct nameidata * ) ;
   int (*d_hash)(struct dentry  const  * , struct inode  const  * , struct qstr * ) ;
   int (*d_compare)(struct dentry  const  * , struct inode  const  * , struct dentry  const  * ,
                    struct inode  const  * , unsigned int  , char const   * , struct qstr  const  * ) ;
   int (*d_delete)(struct dentry  const  * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_prune)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
   struct vfsmount *(*d_automount)(struct path * ) ;
   int (*d_manage)(struct dentry * , bool  ) ;
};
#line 427 "include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 59 "include/linux/radix-tree.h"
struct radix_tree_node;
#line 59 "include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 45 "include/linux/semaphore.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "include/linux/fiemap.h"
struct shrink_control {
   gfp_t gfp_mask ;
   unsigned long nr_to_scan ;
};
#line 14 "include/linux/shrinker.h"
struct shrinker {
   int (*shrink)(struct shrinker * , struct shrink_control * ) ;
   int seeks ;
   long batch ;
   struct list_head list ;
   atomic_long_t nr_in_batch ;
};
#line 43
struct export_operations;
#line 45
struct poll_table_struct;
#line 46
struct kstatfs;
#line 428 "include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   uid_t ia_uid ;
   gid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 119 "include/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 152 "include/linux/quota.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 75 "include/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 150 "include/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 151 "include/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 165
struct dquot;
#line 185 "include/linux/quota.h"
typedef __kernel_uid32_t qid_t;
#line 186 "include/linux/quota.h"
typedef long long qsize_t;
#line 189 "include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 211
struct quota_format_type;
#line 212 "include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 271 "include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   unsigned int dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   short dq_type ;
   struct mem_dqblk dq_dqb ;
};
#line 299 "include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 310 "include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
};
#line 324 "include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , struct path * ) ;
   int (*quota_on_meta)(struct super_block * , int  , int  ) ;
   int (*quota_off)(struct super_block * , int  ) ;
   int (*quota_sync)(struct super_block * , int  , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
   int (*set_dqblk)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
};
#line 340 "include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 386 "include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops  const  *ops[2U] ;
};
#line 417
struct writeback_control;
#line 578 "include/linux/fs.h"
union __anonunion_arg_169 {
   char *buf ;
   void *data ;
};
#line 578 "include/linux/fs.h"
struct __anonstruct_read_descriptor_t_168 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_169 arg ;
   int error ;
};
#line 578 "include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_168 read_descriptor_t;
#line 581 "include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned long  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   void (*freepage)(struct page * ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  * , loff_t  ,
                        unsigned long  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , read_descriptor_t * , unsigned long  ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
};
#line 632 "include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct prio_tree_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   struct mutex i_mmap_mutex ;
   unsigned long nrpages ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   struct address_space *assoc_mapping ;
};
#line 654
struct hd_struct;
#line 654
struct gendisk;
#line 654 "include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   int bd_openers ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_claiming ;
   void *bd_holder ;
   int bd_holders ;
   bool bd_write_holder ;
   struct list_head bd_holder_disks ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 725
struct posix_acl;
#line 726
struct inode_operations;
#line 726 "include/linux/fs.h"
union __anonunion_ldv_20115_170 {
   unsigned int const   i_nlink ;
   unsigned int __i_nlink ;
};
#line 726 "include/linux/fs.h"
union __anonunion_ldv_20134_171 {
   struct list_head i_dentry ;
   struct rcu_head i_rcu ;
};
#line 726
struct file_operations;
#line 726
struct file_lock;
#line 726
struct cdev;
#line 726 "include/linux/fs.h"
union __anonunion_ldv_20152_172 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 726 "include/linux/fs.h"
struct inode {
   umode_t i_mode ;
   unsigned short i_opflags ;
   uid_t i_uid ;
   gid_t i_gid ;
   unsigned int i_flags ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   struct inode_operations  const  *i_op ;
   struct super_block *i_sb ;
   struct address_space *i_mapping ;
   void *i_security ;
   unsigned long i_ino ;
   union __anonunion_ldv_20115_170 ldv_20115 ;
   dev_t i_rdev ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   spinlock_t i_lock ;
   unsigned short i_bytes ;
   blkcnt_t i_blocks ;
   loff_t i_size ;
   unsigned long i_state ;
   struct mutex i_mutex ;
   unsigned long dirtied_when ;
   struct hlist_node i_hash ;
   struct list_head i_wb_list ;
   struct list_head i_lru ;
   struct list_head i_sb_list ;
   union __anonunion_ldv_20134_171 ldv_20134 ;
   atomic_t i_count ;
   unsigned int i_blkbits ;
   u64 i_version ;
   atomic_t i_dio_count ;
   atomic_t i_writecount ;
   struct file_operations  const  *i_fop ;
   struct file_lock *i_flock ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion_ldv_20152_172 ldv_20152 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_marks ;
   atomic_t i_readcount ;
   void *i_private ;
};
#line 929 "include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   uid_t uid ;
   uid_t euid ;
   int signum ;
};
#line 937 "include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 960 "include/linux/fs.h"
union __anonunion_f_u_173 {
   struct list_head fu_list ;
   struct rcu_head fu_rcuhead ;
};
#line 960 "include/linux/fs.h"
struct file {
   union __anonunion_f_u_173 f_u ;
   struct path f_path ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   int f_sb_list_cpu ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct address_space *f_mapping ;
   unsigned long f_mnt_write_state ;
};
#line 1098 "include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 1099 "include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 1104 "include/linux/fs.h"
struct lock_manager_operations {
   int (*lm_compare_owner)(struct file_lock * , struct file_lock * ) ;
   void (*lm_notify)(struct file_lock * ) ;
   int (*lm_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*lm_release_private)(struct file_lock * ) ;
   void (*lm_break)(struct file_lock * ) ;
   int (*lm_change)(struct file_lock ** , int  ) ;
};
#line 165 "include/linux/nfs.h"
struct nlm_lockowner;
#line 166 "include/linux/nfs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 18 "include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 19 "include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 23
struct fasync_struct;
#line 23 "include/linux/nfs_fs_i.h"
struct __anonstruct_afs_175 {
   struct list_head link ;
   int state ;
};
#line 23 "include/linux/nfs_fs_i.h"
union __anonunion_fl_u_174 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_175 afs ;
};
#line 23 "include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned int fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   unsigned long fl_downgrade_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_174 fl_u ;
};
#line 1207 "include/linux/fs.h"
struct fasync_struct {
   spinlock_t fa_lock ;
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
   struct rcu_head fa_rcu ;
};
#line 1399
struct file_system_type;
#line 1399
struct super_operations;
#line 1399
struct xattr_handler;
#line 1399
struct mtd_info;
#line 1399 "include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_dirt ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   struct mutex s_lock ;
   int s_count ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler  const  **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_bl_head s_anon ;
   struct list_head *s_files ;
   struct list_head s_dentry_lru ;
   int s_nr_dentry_unused ;
   spinlock_t s_inode_lru_lock ;
   struct list_head s_inode_lru ;
   int s_nr_inodes_unused ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct list_head s_instances ;
   struct quota_info s_dquot ;
   int s_frozen ;
   wait_queue_head_t s_wait_unfrozen ;
   char s_id[32U] ;
   u8 s_uuid[16U] ;
   void *s_fs_info ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
   struct dentry_operations  const  *s_d_op ;
   int cleancache_poolid ;
   struct shrinker s_shrink ;
};
#line 1537 "include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1576 "include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*readdir)(struct file * , void * , int (*)(void * , char const   * , int  ,
                                                   loff_t  , u64  , unsigned int  ) ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , loff_t  , loff_t  , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
   long (*fallocate)(struct file * , int  , loff_t  , loff_t  ) ;
};
#line 1611 "include/linux/fs.h"
struct inode_operations {
   struct dentry *(*lookup)(struct inode * , struct dentry * , struct nameidata * ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   int (*permission)(struct inode * , int  ) ;
   struct posix_acl *(*get_acl)(struct inode * , int  ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , int  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , int  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   void (*truncate)(struct inode * ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   void (*truncate_range)(struct inode * , loff_t  , loff_t  ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
};
#line 1656 "include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * , int  ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   int (*drop_inode)(struct inode * ) ;
   void (*evict_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   void (*write_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct vfsmount * ) ;
   int (*show_devname)(struct seq_file * , struct vfsmount * ) ;
   int (*show_path)(struct seq_file * , struct vfsmount * ) ;
   int (*show_stats)(struct seq_file * , struct vfsmount * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
   int (*nr_cached_objects)(struct super_block * ) ;
   void (*free_cached_objects)(struct super_block * , int  ) ;
};
#line 1858 "include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   struct dentry *(*mount)(struct file_system_type * , int  , char const   * , void * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct list_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key s_vfs_rename_key ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
};
#line 2704 "include/linux/fs.h"
struct exception_table_entry {
   unsigned long insn ;
   unsigned long fixup ;
};
#line 34 "include/linux/poll.h"
struct poll_table_struct {
   void (*qproc)(struct file * , wait_queue_head_t * , struct poll_table_struct * ) ;
   unsigned long key ;
};
#line 140
struct dvb_frontend;
#line 141
struct dvb_device;
#line 141 "include/linux/poll.h"
struct dvb_adapter {
   int num ;
   struct list_head list_head ;
   struct list_head device_list ;
   char const   *name ;
   u8 proposed_mac[6U] ;
   void *priv ;
   struct device *device ;
   struct module *module ;
   int mfe_shared ;
   struct dvb_device *mfe_dvbdev ;
   struct mutex mfe_lock ;
   int (*fe_ioctl_override)(struct dvb_frontend * , unsigned int  , void * , unsigned int  ) ;
};
#line 99 "drivers/media/dvb/dvb-core/dvbdev.h"
struct dvb_device {
   struct list_head list_head ;
   struct file_operations  const  *fops ;
   struct dvb_adapter *adapter ;
   int type ;
   int minor ;
   u32 id ;
   int readers ;
   int writers ;
   int users ;
   wait_queue_head_t wait_queue ;
   int (*kernel_ioctl)(struct file * , unsigned int  , void * ) ;
   void *priv ;
};
#line 148 "drivers/media/dvb/dvb-core/dvbdev.h"
struct dvb_frontend_tune_settings {
   int min_delay_ms ;
   int step_size ;
   int max_drift ;
   struct dvb_frontend_parameters parameters ;
};
#line 57 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_tuner_info {
   char name[128U] ;
   u32 frequency_min ;
   u32 frequency_max ;
   u32 frequency_step ;
   u32 bandwidth_min ;
   u32 bandwidth_max ;
   u32 bandwidth_step ;
};
#line 71 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct analog_parameters {
   unsigned int frequency ;
   unsigned int mode ;
   unsigned int audmode ;
   u64 std ;
};
#line 114
enum tuner_param {
    DVBFE_TUNER_FREQUENCY = 1,
    DVBFE_TUNER_TUNERSTEP = 2,
    DVBFE_TUNER_IFFREQ = 4,
    DVBFE_TUNER_BANDWIDTH = 8,
    DVBFE_TUNER_REFCLOCK = 16,
    DVBFE_TUNER_IQSENSE = 32,
    DVBFE_TUNER_DUMMY = (-0x7FFFFFFF-1)
} ;
#line 124
enum dvbfe_algo {
    DVBFE_ALGO_HW = 1,
    DVBFE_ALGO_SW = 2,
    DVBFE_ALGO_CUSTOM = 4,
    DVBFE_ALGO_RECOVERY = (-0x7FFFFFFF-1)
} ;
#line 131 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct tuner_state {
   u32 frequency ;
   u32 tunerstep ;
   u32 ifreq ;
   u32 bandwidth ;
   u32 iqsense ;
   u32 refclock ;
};
#line 165
enum dvbfe_search {
    DVBFE_ALGO_SEARCH_SUCCESS = 1,
    DVBFE_ALGO_SEARCH_ASLEEP = 2,
    DVBFE_ALGO_SEARCH_FAILED = 4,
    DVBFE_ALGO_SEARCH_INVALID = 8,
    DVBFE_ALGO_SEARCH_AGAIN = 16,
    DVBFE_ALGO_SEARCH_ERROR = (-0x7FFFFFFF-1)
} ;
#line 174 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_tuner_ops {
   struct dvb_tuner_info info ;
   int (*release)(struct dvb_frontend * ) ;
   int (*init)(struct dvb_frontend * ) ;
   int (*sleep)(struct dvb_frontend * ) ;
   int (*set_params)(struct dvb_frontend * ) ;
   int (*set_analog_params)(struct dvb_frontend * , struct analog_parameters * ) ;
   int (*calc_regs)(struct dvb_frontend * , u8 * , int  ) ;
   int (*set_config)(struct dvb_frontend * , void * ) ;
   int (*get_frequency)(struct dvb_frontend * , u32 * ) ;
   int (*get_bandwidth)(struct dvb_frontend * , u32 * ) ;
   int (*get_if_frequency)(struct dvb_frontend * , u32 * ) ;
   int (*get_status)(struct dvb_frontend * , u32 * ) ;
   int (*get_rf_strength)(struct dvb_frontend * , u16 * ) ;
   int (*set_frequency)(struct dvb_frontend * , u32  ) ;
   int (*set_bandwidth)(struct dvb_frontend * , u32  ) ;
   int (*set_state)(struct dvb_frontend * , enum tuner_param  , struct tuner_state * ) ;
   int (*get_state)(struct dvb_frontend * , enum tuner_param  , struct tuner_state * ) ;
};
#line 237 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct analog_demod_info {
   char *name ;
};
#line 241 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct analog_demod_ops {
   struct analog_demod_info info ;
   void (*set_params)(struct dvb_frontend * , struct analog_parameters * ) ;
   int (*has_signal)(struct dvb_frontend * ) ;
   int (*get_afc)(struct dvb_frontend * ) ;
   void (*tuner_status)(struct dvb_frontend * ) ;
   void (*standby)(struct dvb_frontend * ) ;
   void (*release)(struct dvb_frontend * ) ;
   int (*i2c_gate_ctrl)(struct dvb_frontend * , int  ) ;
   int (*set_config)(struct dvb_frontend * , void * ) ;
};
#line 258
struct dtv_frontend_properties;
#line 259 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_frontend_ops {
   struct dvb_frontend_info info ;
   u8 delsys[8U] ;
   void (*release)(struct dvb_frontend * ) ;
   void (*release_sec)(struct dvb_frontend * ) ;
   int (*init)(struct dvb_frontend * ) ;
   int (*sleep)(struct dvb_frontend * ) ;
   int (*write)(struct dvb_frontend * , u8 const   * , int  ) ;
   int (*tune)(struct dvb_frontend * , struct dvb_frontend_parameters * , unsigned int  ,
               unsigned int * , fe_status_t * ) ;
   enum dvbfe_algo (*get_frontend_algo)(struct dvb_frontend * ) ;
   int (*set_frontend_legacy)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   int (*set_frontend)(struct dvb_frontend * ) ;
   int (*get_tune_settings)(struct dvb_frontend * , struct dvb_frontend_tune_settings * ) ;
   int (*get_frontend_legacy)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   int (*get_frontend)(struct dvb_frontend * , struct dtv_frontend_properties * ) ;
   int (*read_status)(struct dvb_frontend * , fe_status_t * ) ;
   int (*read_ber)(struct dvb_frontend * , u32 * ) ;
   int (*read_signal_strength)(struct dvb_frontend * , u16 * ) ;
   int (*read_snr)(struct dvb_frontend * , u16 * ) ;
   int (*read_ucblocks)(struct dvb_frontend * , u32 * ) ;
   int (*diseqc_reset_overload)(struct dvb_frontend * ) ;
   int (*diseqc_send_master_cmd)(struct dvb_frontend * , struct dvb_diseqc_master_cmd * ) ;
   int (*diseqc_recv_slave_reply)(struct dvb_frontend * , struct dvb_diseqc_slave_reply * ) ;
   int (*diseqc_send_burst)(struct dvb_frontend * , fe_sec_mini_cmd_t  ) ;
   int (*set_tone)(struct dvb_frontend * , fe_sec_tone_mode_t  ) ;
   int (*set_voltage)(struct dvb_frontend * , fe_sec_voltage_t  ) ;
   int (*enable_high_lnb_voltage)(struct dvb_frontend * , long  ) ;
   int (*dishnetwork_send_legacy_command)(struct dvb_frontend * , unsigned long  ) ;
   int (*i2c_gate_ctrl)(struct dvb_frontend * , int  ) ;
   int (*ts_bus_ctrl)(struct dvb_frontend * , int  ) ;
   enum dvbfe_search (*search)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   int (*track)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   struct dvb_tuner_ops tuner_ops ;
   struct analog_demod_ops analog_ops ;
   int (*set_property)(struct dvb_frontend * , struct dtv_property * ) ;
   int (*get_property)(struct dvb_frontend * , struct dtv_property * ) ;
};
#line 332 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct __anonstruct_layer_177 {
   u8 segment_count ;
   fe_code_rate_t fec ;
   fe_modulation_t modulation ;
   u8 interleaving ;
};
#line 332 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dtv_frontend_properties {
   u32 state ;
   u32 frequency ;
   fe_modulation_t modulation ;
   fe_sec_voltage_t voltage ;
   fe_sec_tone_mode_t sectone ;
   fe_spectral_inversion_t inversion ;
   fe_code_rate_t fec_inner ;
   fe_transmit_mode_t transmission_mode ;
   u32 bandwidth_hz ;
   fe_guard_interval_t guard_interval ;
   fe_hierarchy_t hierarchy ;
   u32 symbol_rate ;
   fe_code_rate_t code_rate_HP ;
   fe_code_rate_t code_rate_LP ;
   fe_pilot_t pilot ;
   fe_rolloff_t rolloff ;
   fe_delivery_system_t delivery_system ;
   u8 isdbt_partial_reception ;
   u8 isdbt_sb_mode ;
   u8 isdbt_sb_subchannel ;
   u32 isdbt_sb_segment_idx ;
   u32 isdbt_sb_segment_count ;
   u8 isdbt_layer_enabled ;
   struct __anonstruct_layer_177 layer[3U] ;
   u32 isdbs_ts_id ;
   u32 dvbt2_plp_id ;
};
#line 378 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_frontend {
   struct dvb_frontend_ops ops ;
   struct dvb_adapter *dvb ;
   void *demodulator_priv ;
   void *tuner_priv ;
   void *frontend_priv ;
   void *sec_priv ;
   void *analog_demod_priv ;
   struct dtv_frontend_properties dtv_property_cache ;
   int (*callback)(void * , int  , int  , int  ) ;
   int id ;
};
#line 57 "drivers/media/dvb/dvb-core/dvb_math.h"
struct cxd2820r_config {
   u8 i2c_address ;
   u8 ts_mode ;
   bool if_agc_polarity ;
   bool spec_inv ;
   u8 gpio_dvbt[3U] ;
   u8 gpio_dvbt2[3U] ;
   u8 gpio_dvbc[3U] ;
};
#line 48 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/frontends/cxd2820r_priv.h"
struct cxd2820r_priv {
   struct i2c_adapter *i2c ;
   struct dvb_frontend fe ;
   struct cxd2820r_config cfg ;
   bool ber_running ;
   u8 bank[2U] ;
   u8 gpio[3U] ;
   fe_delivery_system_t delivery_system ;
   bool last_tune_failed ;
};
#line 1055 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
typedef int ldv_func_ret_type___0;
#line 290 "include/linux/timer.h"
enum hrtimer_restart;
#line 79 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/frontends/cxd2820r.h"
struct reg_val_mask {
   u32 reg ;
   u8 val ;
   u8 mask ;
};
#line 290 "include/linux/timer.h"
enum hrtimer_restart;
#line 290
enum hrtimer_restart;
#line 1 "<compiler builtins>"
void *__builtin_memcpy(void * , void const   * , unsigned long  ) ;
#line 1
void *__builtin_alloca(unsigned long  ) ;
#line 101 "include/linux/printk.h"
extern int printk(char const   *  , ...) ;
#line 34 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/string_64.h"
extern void *__memcpy(void * , void const   * , size_t  ) ;
#line 60
extern int memcmp(void const   * , void const   * , size_t  ) ;
#line 15 "include/linux/math64.h"
__inline static u64 div_u64_rem(u64 dividend , u32 divisor , u32 *remainder ) 
{ 


  {
#line 17
  *remainder = (u32 )(dividend % (u64 )divisor);
#line 18
  return (dividend / (u64 )divisor);
}
}
#line 78 "include/linux/math64.h"
__inline static u64 div_u64(u64 dividend , u32 divisor ) 
{ 
  u32 remainder ;
  u64 tmp ;

  {
#line 81
  tmp = div_u64_rem(dividend, divisor, & remainder);
#line 81
  return (tmp);
}
}
#line 168 "include/linux/mutex.h"
extern int mutex_trylock(struct mutex * ) ;
#line 171
int ldv_mutex_trylock_2(struct mutex *ldv_func_arg1 ) ;
#line 173
extern void mutex_unlock(struct mutex * ) ;
#line 176
void ldv_mutex_unlock_3(struct mutex *ldv_func_arg1 ) ;
#line 7 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
extern void mutex_lock(struct mutex * ) ;
#line 10
void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) ;
#line 15
void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) ;
#line 16
int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) ;
#line 19
void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) ;
#line 68 "include/linux/i2c.h"
extern int i2c_transfer(struct i2c_adapter * , struct i2c_msg * , int  ) ;
#line 46 "include/linux/delay.h"
extern void msleep(unsigned int  ) ;
#line 161 "include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 218 "include/linux/slub_def.h"
extern void *__kmalloc(size_t  , gfp_t  ) ;
#line 265 "include/linux/slub_def.h"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp___2 ;

  {
#line 280
  tmp___2 = __kmalloc(size, flags);
#line 280
  return (tmp___2);
}
}
#line 338 "include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 340
  tmp = kmalloc(size, flags | 32768U);
#line 340
  return (tmp);
}
}
#line 78 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/frontends/cxd2820r.h"
struct dvb_frontend *cxd2820r_attach(struct cxd2820r_config  const  *cfg , struct i2c_adapter *i2c ,
                                     struct dvb_frontend *fe ) ;
#line 65 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/frontends/cxd2820r_priv.h"
int cxd2820r_debug  ;
#line 67
int cxd2820r_gpio(struct dvb_frontend *fe ) ;
#line 69
int cxd2820r_wr_reg_mask(struct cxd2820r_priv *priv , u32 reg , u8 val , u8 mask ) ;
#line 72
int cxd2820r_wr_regs(struct cxd2820r_priv *priv , u32 reginfo , u8 *val , int len ) ;
#line 75
u32 cxd2820r_div_u64_round_closest(u64 dividend , u32 divisor ) ;
#line 80
int cxd2820r_rd_regs(struct cxd2820r_priv *priv , u32 reginfo , u8 *val , int len ) ;
#line 83
int cxd2820r_wr_reg(struct cxd2820r_priv *priv , u32 reg , u8 val ) ;
#line 85
int cxd2820r_rd_reg(struct cxd2820r_priv *priv , u32 reg , u8 *val ) ;
#line 89
int cxd2820r_get_frontend_c(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) ;
#line 92
int cxd2820r_set_frontend_c(struct dvb_frontend *fe , struct dvb_frontend_parameters *params ) ;
#line 95
int cxd2820r_read_status_c(struct dvb_frontend *fe , fe_status_t *status ) ;
#line 97
int cxd2820r_read_ber_c(struct dvb_frontend *fe , u32 *ber ) ;
#line 99
int cxd2820r_read_signal_strength_c(struct dvb_frontend *fe , u16 *strength ) ;
#line 101
int cxd2820r_read_snr_c(struct dvb_frontend *fe , u16 *snr ) ;
#line 103
int cxd2820r_read_ucblocks_c(struct dvb_frontend *fe , u32 *ucblocks ) ;
#line 105
int cxd2820r_init_c(struct dvb_frontend *fe ) ;
#line 107
int cxd2820r_sleep_c(struct dvb_frontend *fe ) ;
#line 109
int cxd2820r_get_tune_settings_c(struct dvb_frontend *fe , struct dvb_frontend_tune_settings *s ) ;
#line 114
int cxd2820r_get_frontend_t(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) ;
#line 117
int cxd2820r_set_frontend_t(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) ;
#line 120
int cxd2820r_read_status_t(struct dvb_frontend *fe , fe_status_t *status ) ;
#line 122
int cxd2820r_read_ber_t(struct dvb_frontend *fe , u32 *ber ) ;
#line 124
int cxd2820r_read_signal_strength_t(struct dvb_frontend *fe , u16 *strength ) ;
#line 126
int cxd2820r_read_snr_t(struct dvb_frontend *fe , u16 *snr ) ;
#line 128
int cxd2820r_read_ucblocks_t(struct dvb_frontend *fe , u32 *ucblocks ) ;
#line 130
int cxd2820r_init_t(struct dvb_frontend *fe ) ;
#line 132
int cxd2820r_sleep_t(struct dvb_frontend *fe ) ;
#line 134
int cxd2820r_get_tune_settings_t(struct dvb_frontend *fe , struct dvb_frontend_tune_settings *s ) ;
#line 139
int cxd2820r_get_frontend_t2(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) ;
#line 142
int cxd2820r_set_frontend_t2(struct dvb_frontend *fe , struct dvb_frontend_parameters *params ) ;
#line 145
int cxd2820r_read_status_t2(struct dvb_frontend *fe , fe_status_t *status ) ;
#line 147
int cxd2820r_read_ber_t2(struct dvb_frontend *fe , u32 *ber ) ;
#line 149
int cxd2820r_read_signal_strength_t2(struct dvb_frontend *fe , u16 *strength ) ;
#line 151
int cxd2820r_read_snr_t2(struct dvb_frontend *fe , u16 *snr ) ;
#line 153
int cxd2820r_read_ucblocks_t2(struct dvb_frontend *fe , u32 *ucblocks ) ;
#line 157
int cxd2820r_sleep_t2(struct dvb_frontend *fe ) ;
#line 159
int cxd2820r_get_tune_settings_t2(struct dvb_frontend *fe , struct dvb_frontend_tune_settings *s ) ;
#line 45 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_wr_regs_i2c(struct cxd2820r_priv *priv , u8 i2c , u8 reg , u8 *val ,
                                int len ) 
{ 
  int ret ;
  u8 *buf ;
  unsigned long __lengthofbuf ;
  void *tmp ;
  struct i2c_msg msg[1U] ;
  size_t __len ;
  void *__ret ;

  {
#line 49
  __lengthofbuf = (unsigned long )((long )(len + 1) + 0L);
#line 49
  tmp = __builtin_alloca(sizeof(*buf) * __lengthofbuf);
#line 49
  buf = (u8 *)tmp;
#line 50
  msg[0].addr = (unsigned short )i2c;
#line 50
  msg[0].flags = 0U;
#line 50
  msg[0].len = (unsigned short )(len + 1);
#line 50
  msg[0].buf = (__u8 *)(& buf);
#line 59
  *(buf + 0) = reg;
#line 60
  __len = (size_t )len;
#line 60
  __ret = __builtin_memcpy((void *)(& buf) + 1U, (void const   *)val, __len);
#line 62
  ret = i2c_transfer(priv->i2c, (struct i2c_msg *)(& msg), 1);
#line 63
  if (ret == 1) {
#line 64
    ret = 0;
  } else {
#line 66
    printk("<4>cxd2820r: i2c wr failed ret:%d reg:%02x len:%d\n", ret, (int )reg,
           len);
#line 67
    ret = -121;
  }
#line 69
  return (ret);
}
}
#line 73 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_rd_regs_i2c(struct cxd2820r_priv *priv , u8 i2c , u8 reg , u8 *val ,
                                int len ) 
{ 
  int ret ;
  u8 *buf ;
  unsigned long __lengthofbuf ;
  void *tmp ;
  struct i2c_msg msg[2U] ;
  size_t __len ;
  void *__ret ;

  {
#line 77
  __lengthofbuf = (unsigned long )((long )len + 0L);
#line 77
  tmp = __builtin_alloca(sizeof(*buf) * __lengthofbuf);
#line 77
  buf = (u8 *)tmp;
#line 78
  msg[0].addr = (unsigned short )i2c;
#line 78
  msg[0].flags = 0U;
#line 78
  msg[0].len = 1U;
#line 78
  msg[0].buf = & reg;
#line 78
  msg[1].addr = (unsigned short )i2c;
#line 78
  msg[1].flags = 1U;
#line 78
  msg[1].len = (unsigned short )len;
#line 78
  msg[1].buf = (__u8 *)(& buf);
#line 92
  ret = i2c_transfer(priv->i2c, (struct i2c_msg *)(& msg), 2);
#line 93
  if (ret == 2) {
#line 94
    __len = (size_t )len;
#line 94
    __ret = __builtin_memcpy((void *)val, (void const   *)(& buf), __len);
#line 95
    ret = 0;
  } else {
#line 97
    printk("<4>cxd2820r: i2c rd failed ret:%d reg:%02x len:%d\n", ret, (int )reg,
           len);
#line 98
    ret = -121;
  }
#line 101
  return (ret);
}
}
#line 105 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
int cxd2820r_wr_regs(struct cxd2820r_priv *priv , u32 reginfo , u8 *val , int len ) 
{ 
  int ret ;
  u8 i2c_addr ;
  u8 reg ;
  u8 bank ;
  u8 i2c ;
  int tmp ;

  {
#line 110
  reg = (u8 )reginfo;
#line 111
  bank = (u8 )(reginfo >> 8);
#line 112
  i2c = (unsigned int )((u8 )(reginfo >> 16)) & 1U;
#line 115
  if ((unsigned int )i2c != 0U) {
#line 116
    i2c_addr = (u8 )((unsigned int )priv->cfg.i2c_address | 2U);
  } else {
#line 118
    i2c_addr = priv->cfg.i2c_address;
  }
#line 121
  if ((int )priv->bank[(int )i2c] != (int )bank) {
#line 122
    ret = cxd2820r_wr_regs_i2c(priv, (int )i2c_addr, 0, & bank, 1);
#line 123
    if (ret != 0) {
#line 124
      return (ret);
    } else {

    }
#line 125
    priv->bank[(int )i2c] = bank;
  } else {

  }
#line 127
  tmp = cxd2820r_wr_regs_i2c(priv, (int )i2c_addr, (int )reg, val, len);
#line 127
  return (tmp);
}
}
#line 131 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
int cxd2820r_rd_regs(struct cxd2820r_priv *priv , u32 reginfo , u8 *val , int len ) 
{ 
  int ret ;
  u8 i2c_addr ;
  u8 reg ;
  u8 bank ;
  u8 i2c ;
  int tmp ;

  {
#line 136
  reg = (u8 )reginfo;
#line 137
  bank = (u8 )(reginfo >> 8);
#line 138
  i2c = (unsigned int )((u8 )(reginfo >> 16)) & 1U;
#line 141
  if ((unsigned int )i2c != 0U) {
#line 142
    i2c_addr = (u8 )((unsigned int )priv->cfg.i2c_address | 2U);
  } else {
#line 144
    i2c_addr = priv->cfg.i2c_address;
  }
#line 147
  if ((int )priv->bank[(int )i2c] != (int )bank) {
#line 148
    ret = cxd2820r_wr_regs_i2c(priv, (int )i2c_addr, 0, & bank, 1);
#line 149
    if (ret != 0) {
#line 150
      return (ret);
    } else {

    }
#line 151
    priv->bank[(int )i2c] = bank;
  } else {

  }
#line 153
  tmp = cxd2820r_rd_regs_i2c(priv, (int )i2c_addr, (int )reg, val, len);
#line 153
  return (tmp);
}
}
#line 157 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
int cxd2820r_wr_reg(struct cxd2820r_priv *priv , u32 reg , u8 val ) 
{ 
  int tmp ;

  {
#line 159
  tmp = cxd2820r_wr_regs(priv, reg, & val, 1);
#line 159
  return (tmp);
}
}
#line 163 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
int cxd2820r_rd_reg(struct cxd2820r_priv *priv , u32 reg , u8 *val ) 
{ 
  int tmp ;

  {
#line 165
  tmp = cxd2820r_rd_regs(priv, reg, val, 1);
#line 165
  return (tmp);
}
}
#line 169 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
int cxd2820r_wr_reg_mask(struct cxd2820r_priv *priv , u32 reg , u8 val , u8 mask ) 
{ 
  int ret ;
  u8 tmp ;
  int tmp___0 ;

  {
#line 176
  if ((unsigned int )mask != 255U) {
#line 177
    ret = cxd2820r_rd_reg(priv, reg, & tmp);
#line 178
    if (ret != 0) {
#line 179
      return (ret);
    } else {

    }
#line 181
    val = (u8 )((int )val & (int )mask);
#line 182
    tmp = (u8 )(~ ((int )((signed char )mask)) & (int )((signed char )tmp));
#line 183
    val = (u8 )((int )val | (int )tmp);
  } else {

  }
#line 186
  tmp___0 = cxd2820r_wr_reg(priv, reg, (int )val);
#line 186
  return (tmp___0);
}
}
#line 189 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
int cxd2820r_gpio(struct dvb_frontend *fe ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  int i ;
  u8 *gpio ;
  u8 tmp0 ;
  u8 tmp1 ;
  int tmp ;
  size_t __len ;
  void *__ret ;

  {
#line 191
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 194
  if (cxd2820r_debug != 0) {
#line 194
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_gpio", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 196
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 198
  gpio = (u8 *)(& priv->cfg.gpio_dvbt);
#line 199
  goto ldv_23064;
  case 16U: 
#line 201
  gpio = (u8 *)(& priv->cfg.gpio_dvbt2);
#line 202
  goto ldv_23064;
  case 1U: 
#line 204
  gpio = (u8 *)(& priv->cfg.gpio_dvbc);
#line 205
  goto ldv_23064;
  default: 
#line 207
  ret = -22;
#line 208
  goto error;
  }
  ldv_23064: 
#line 212
  tmp = memcmp((void const   *)gpio, (void const   *)(& priv->gpio), 3UL);
#line 212
  if (tmp == 0) {
#line 213
    return (0);
  } else {

  }
#line 215
  tmp0 = 0U;
#line 216
  tmp1 = 0U;
#line 217
  i = 0;
#line 217
  goto ldv_23070;
  ldv_23069: ;
#line 219
  if ((int )*(gpio + (unsigned long )i) & 1) {
#line 220
    tmp0 = (u8 )((int )((signed char )(128 >> i * 2)) | (int )((signed char )tmp0));
  } else {
#line 222
    tmp0 = (u8 )((int )((signed char )(64 >> i * 2)) | (int )((signed char )tmp0));
  }
#line 225
  if (((int )*(gpio + (unsigned long )i) & 2) != 0) {
#line 226
    tmp1 = (u8 )((int )((signed char )(1 << (i + 3))) | (int )((signed char )tmp1));
  } else {
#line 228
    tmp1 = tmp1;
  }
#line 231
  if (((int )*(gpio + (unsigned long )i) & 4) != 0) {
#line 232
    tmp1 = (u8 )((int )((signed char )(1 << i)) | (int )((signed char )tmp1));
  } else {
#line 234
    tmp1 = tmp1;
  }
#line 236
  if (cxd2820r_debug != 0) {
#line 236
    printk("<6>cxd2820r: %s: GPIO i=%d %02x %02x\n", "cxd2820r_gpio", i, (int )tmp0,
           (int )tmp1);
  } else {

  }
#line 217
  i = i + 1;
  ldv_23070: ;
#line 217
  if ((unsigned int )i <= 2U) {
#line 218
    goto ldv_23069;
  } else {

  }

#line 239
  if (cxd2820r_debug != 0) {
#line 239
    printk("<6>cxd2820r: %s: wr gpio=%02x %02x\n", "cxd2820r_gpio", (int )tmp0, (int )tmp1);
  } else {

  }
#line 242
  ret = cxd2820r_wr_reg_mask(priv, 137U, (int )tmp0, 252);
#line 243
  if (ret != 0) {
#line 244
    goto error;
  } else {

  }
#line 247
  ret = cxd2820r_wr_reg_mask(priv, 142U, (int )tmp1, 63);
#line 248
  if (ret != 0) {
#line 249
    goto error;
  } else {

  }
#line 251
  __len = 3UL;
#line 251
  if (__len > 63UL) {
#line 251
    __ret = __memcpy((void *)(& priv->gpio), (void const   *)gpio, __len);
  } else {
#line 251
    __ret = __builtin_memcpy((void *)(& priv->gpio), (void const   *)gpio, __len);
  }
#line 253
  return (ret);
  error: ;
#line 255
  if (cxd2820r_debug != 0) {
#line 255
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_gpio", ret);
  } else {

  }
#line 256
  return (ret);
}
}
#line 260 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
u32 cxd2820r_div_u64_round_closest(u64 dividend , u32 divisor ) 
{ 
  u64 tmp ;

  {
#line 262
  tmp = div_u64((u64 )(divisor / 2U) + dividend, divisor);
#line 262
  return ((u32 )tmp);
}
}
#line 265 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_set_frontend(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) 
{ 
  struct dtv_frontend_properties *c ;
  int ret ;

  {
#line 268
  c = & fe->dtv_property_cache;
#line 271
  if (cxd2820r_debug != 0) {
#line 271
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_set_frontend", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 272
  switch ((unsigned int )c->delivery_system) {
  case 3U: 
#line 274
  ret = cxd2820r_init_t(fe);
#line 275
  if (ret < 0) {
#line 276
    goto err;
  } else {

  }
#line 277
  ret = cxd2820r_set_frontend_t(fe, p);
#line 278
  if (ret < 0) {
#line 279
    goto err;
  } else {

  }
#line 280
  goto ldv_23088;
  case 16U: 
#line 282
  ret = cxd2820r_init_t(fe);
#line 283
  if (ret < 0) {
#line 284
    goto err;
  } else {

  }
#line 285
  ret = cxd2820r_set_frontend_t2(fe, p);
#line 286
  if (ret < 0) {
#line 287
    goto err;
  } else {

  }
#line 288
  goto ldv_23088;
  case 1U: 
#line 290
  ret = cxd2820r_init_c(fe);
#line 291
  if (ret < 0) {
#line 292
    goto err;
  } else {

  }
#line 293
  ret = cxd2820r_set_frontend_c(fe, p);
#line 294
  if (ret < 0) {
#line 295
    goto err;
  } else {

  }
#line 296
  goto ldv_23088;
  default: ;
#line 298
  if (cxd2820r_debug != 0) {
#line 298
    printk("<6>cxd2820r: %s: error state=%d\n", "cxd2820r_set_frontend", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 299
  ret = -22;
#line 300
  goto ldv_23088;
  }
  ldv_23088: ;
  err: ;
#line 303
  return (ret);
}
}
#line 305 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_read_status(struct dvb_frontend *fe , fe_status_t *status ) 
{ 
  int ret ;

  {
#line 309
  if (cxd2820r_debug != 0) {
#line 309
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_read_status", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 310
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 312
  ret = cxd2820r_read_status_t(fe, status);
#line 313
  goto ldv_23099;
  case 16U: 
#line 315
  ret = cxd2820r_read_status_t2(fe, status);
#line 316
  goto ldv_23099;
  case 1U: 
#line 318
  ret = cxd2820r_read_status_c(fe, status);
#line 319
  goto ldv_23099;
  default: 
#line 321
  ret = -22;
#line 322
  goto ldv_23099;
  }
  ldv_23099: ;
#line 324
  return (ret);
}
}
#line 327 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_get_frontend(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) 
{ 
  int ret ;

  {
#line 332
  if (cxd2820r_debug != 0) {
#line 332
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_get_frontend", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 333
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 335
  ret = cxd2820r_get_frontend_t(fe, p);
#line 336
  goto ldv_23110;
  case 16U: 
#line 338
  ret = cxd2820r_get_frontend_t2(fe, p);
#line 339
  goto ldv_23110;
  case 1U: 
#line 341
  ret = cxd2820r_get_frontend_c(fe, p);
#line 342
  goto ldv_23110;
  default: 
#line 344
  ret = -22;
#line 345
  goto ldv_23110;
  }
  ldv_23110: ;
#line 347
  return (ret);
}
}
#line 350 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_read_ber(struct dvb_frontend *fe , u32 *ber ) 
{ 
  int ret ;

  {
#line 354
  if (cxd2820r_debug != 0) {
#line 354
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_read_ber", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 355
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 357
  ret = cxd2820r_read_ber_t(fe, ber);
#line 358
  goto ldv_23121;
  case 16U: 
#line 360
  ret = cxd2820r_read_ber_t2(fe, ber);
#line 361
  goto ldv_23121;
  case 1U: 
#line 363
  ret = cxd2820r_read_ber_c(fe, ber);
#line 364
  goto ldv_23121;
  default: 
#line 366
  ret = -22;
#line 367
  goto ldv_23121;
  }
  ldv_23121: ;
#line 369
  return (ret);
}
}
#line 372 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_read_signal_strength(struct dvb_frontend *fe , u16 *strength ) 
{ 
  int ret ;

  {
#line 376
  if (cxd2820r_debug != 0) {
#line 376
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_read_signal_strength", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 377
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 379
  ret = cxd2820r_read_signal_strength_t(fe, strength);
#line 380
  goto ldv_23132;
  case 16U: 
#line 382
  ret = cxd2820r_read_signal_strength_t2(fe, strength);
#line 383
  goto ldv_23132;
  case 1U: 
#line 385
  ret = cxd2820r_read_signal_strength_c(fe, strength);
#line 386
  goto ldv_23132;
  default: 
#line 388
  ret = -22;
#line 389
  goto ldv_23132;
  }
  ldv_23132: ;
#line 391
  return (ret);
}
}
#line 394 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_read_snr(struct dvb_frontend *fe , u16 *snr ) 
{ 
  int ret ;

  {
#line 398
  if (cxd2820r_debug != 0) {
#line 398
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_read_snr", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 399
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 401
  ret = cxd2820r_read_snr_t(fe, snr);
#line 402
  goto ldv_23143;
  case 16U: 
#line 404
  ret = cxd2820r_read_snr_t2(fe, snr);
#line 405
  goto ldv_23143;
  case 1U: 
#line 407
  ret = cxd2820r_read_snr_c(fe, snr);
#line 408
  goto ldv_23143;
  default: 
#line 410
  ret = -22;
#line 411
  goto ldv_23143;
  }
  ldv_23143: ;
#line 413
  return (ret);
}
}
#line 416 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_read_ucblocks(struct dvb_frontend *fe , u32 *ucblocks ) 
{ 
  int ret ;

  {
#line 420
  if (cxd2820r_debug != 0) {
#line 420
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_read_ucblocks", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 421
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 423
  ret = cxd2820r_read_ucblocks_t(fe, ucblocks);
#line 424
  goto ldv_23154;
  case 16U: 
#line 426
  ret = cxd2820r_read_ucblocks_t2(fe, ucblocks);
#line 427
  goto ldv_23154;
  case 1U: 
#line 429
  ret = cxd2820r_read_ucblocks_c(fe, ucblocks);
#line 430
  goto ldv_23154;
  default: 
#line 432
  ret = -22;
#line 433
  goto ldv_23154;
  }
  ldv_23154: ;
#line 435
  return (ret);
}
}
#line 438 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_init(struct dvb_frontend *fe ) 
{ 


  {
#line 440
  return (0);
}
}
#line 443 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_sleep(struct dvb_frontend *fe ) 
{ 
  int ret ;

  {
#line 447
  if (cxd2820r_debug != 0) {
#line 447
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_sleep", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 448
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 450
  ret = cxd2820r_sleep_t(fe);
#line 451
  goto ldv_23167;
  case 16U: 
#line 453
  ret = cxd2820r_sleep_t2(fe);
#line 454
  goto ldv_23167;
  case 1U: 
#line 456
  ret = cxd2820r_sleep_c(fe);
#line 457
  goto ldv_23167;
  default: 
#line 459
  ret = -22;
#line 460
  goto ldv_23167;
  }
  ldv_23167: ;
#line 462
  return (ret);
}
}
#line 465 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_get_tune_settings(struct dvb_frontend *fe , struct dvb_frontend_tune_settings *s ) 
{ 
  int ret ;

  {
#line 470
  if (cxd2820r_debug != 0) {
#line 470
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_get_tune_settings", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 471
  switch ((unsigned int )fe->dtv_property_cache.delivery_system) {
  case 3U: 
#line 473
  ret = cxd2820r_get_tune_settings_t(fe, s);
#line 474
  goto ldv_23178;
  case 16U: 
#line 476
  ret = cxd2820r_get_tune_settings_t2(fe, s);
#line 477
  goto ldv_23178;
  case 1U: 
#line 479
  ret = cxd2820r_get_tune_settings_c(fe, s);
#line 480
  goto ldv_23178;
  default: 
#line 482
  ret = -22;
#line 483
  goto ldv_23178;
  }
  ldv_23178: ;
#line 485
  return (ret);
}
}
#line 488 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static enum dvbfe_search cxd2820r_search(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) 
{ 
  struct cxd2820r_priv *priv ;
  struct dtv_frontend_properties *c ;
  int ret ;
  int i ;
  fe_status_t status ;

  {
#line 491
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 492
  c = & fe->dtv_property_cache;
#line 494
  status = 0;
#line 495
  if (cxd2820r_debug != 0) {
#line 495
    printk("<6>cxd2820r: %s: delsys=%d\n", "cxd2820r_search", (unsigned int )fe->dtv_property_cache.delivery_system);
  } else {

  }
#line 498
  if ((int )priv->last_tune_failed && (unsigned int )priv->delivery_system != 1U) {
#line 499
    if ((unsigned int )priv->delivery_system == 3U) {
#line 500
      c->delivery_system = SYS_DVBT2;
    } else {
#line 502
      c->delivery_system = SYS_DVBT;
    }
  } else {

  }
#line 506
  ret = cxd2820r_set_frontend(fe, p);
#line 507
  if (ret != 0) {
#line 508
    goto error;
  } else {

  }
#line 512
  switch ((unsigned int )priv->delivery_system) {
  case 3U: 
#line 514
  i = 20;
#line 515
  goto ldv_23194;
  case 16U: 
#line 517
  i = 40;
#line 518
  goto ldv_23194;
  case 0U: ;
  default: 
#line 521
  i = 0;
#line 522
  goto ldv_23194;
  }
  ldv_23194: ;
#line 526
  goto ldv_23200;
  ldv_23199: ;
#line 527
  if (cxd2820r_debug != 0) {
#line 527
    printk("<6>cxd2820r: %s: LOOP=%d\n", "cxd2820r_search", i);
  } else {

  }
#line 528
  msleep(50U);
#line 529
  ret = cxd2820r_read_status(fe, & status);
#line 530
  if (ret != 0) {
#line 531
    goto error;
  } else {

  }
#line 533
  if ((int )status & 1) {
#line 534
    goto ldv_23198;
  } else {

  }
#line 526
  i = i - 1;
  ldv_23200: ;
#line 526
  if (i > 0) {
#line 527
    goto ldv_23199;
  } else {

  }
  ldv_23198: ;
#line 538
  if ((unsigned int )status != 0U) {
#line 539
    priv->last_tune_failed = 0;
#line 540
    return (DVBFE_ALGO_SEARCH_SUCCESS);
  } else {
#line 542
    priv->last_tune_failed = 1;
#line 543
    return (DVBFE_ALGO_SEARCH_AGAIN);
  }
  error: ;
#line 547
  if (cxd2820r_debug != 0) {
#line 547
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_search", ret);
  } else {

  }
#line 548
  return (DVBFE_ALGO_SEARCH_ERROR);
}
}
#line 551 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_get_frontend_algo(struct dvb_frontend *fe ) 
{ 


  {
#line 553
  return (4);
}
}
#line 556 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static void cxd2820r_release(struct dvb_frontend *fe ) 
{ 
  struct cxd2820r_priv *priv ;

  {
#line 558
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 559
  if (cxd2820r_debug != 0) {
#line 559
    printk("<6>cxd2820r: %s\n", "cxd2820r_release");
  } else {

  }
#line 561
  kfree((void const   *)priv);
#line 562
  return;
}
}
#line 565 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_i2c_gate_ctrl(struct dvb_frontend *fe , int enable ) 
{ 
  struct cxd2820r_priv *priv ;
  int tmp ;

  {
#line 567
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 568
  if (cxd2820r_debug != 0) {
#line 568
    printk("<6>cxd2820r: %s: %d\n", "cxd2820r_i2c_gate_ctrl", enable);
  } else {

  }
#line 571
  tmp = cxd2820r_wr_reg_mask(priv, 219U, enable != 0, 1);
#line 571
  return (tmp);
}
}
#line 574 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static int cxd2820r_get_property(struct dvb_frontend *fe , struct dtv_property *p ) 
{ 


  {
#line 576
  if (cxd2820r_debug != 0) {
#line 576
    printk("<6>cxd2820r: %s()\n\n", "cxd2820r_get_property");
  } else {

  }
#line 578
  switch (p->cmd) {
  case (__u32 )44: 
#line 580
  p->u.buffer.data[0] = 3U;
#line 581
  p->u.buffer.data[1] = 16U;
#line 582
  p->u.buffer.data[2] = 1U;
#line 583
  p->u.buffer.len = 3U;
#line 584
  goto ldv_23221;
  default: ;
#line 586
  goto ldv_23221;
  }
  ldv_23221: ;
#line 588
  return (0);
}
}
#line 591 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
static struct dvb_frontend_ops  const  cxd2820r_ops  = 
#line 591
     {{{'S', 'o', 'n', 'y', ' ', 'C', 'X', 'D', '2', '8', '2', '0', 'R', ' ', '(', 'D',
      'V', 'B', '-', 'T', '/', 'T', '2', ')', '\000'}, FE_OFDM, 0U, 0U, 0U, 0U, 0U,
     0U, 0U, 0U, 2417733294U}, {(unsigned char)0, (unsigned char)0, (unsigned char)0,
                                (unsigned char)0, (unsigned char)0, (unsigned char)0,
                                (unsigned char)0, (unsigned char)0}, & cxd2820r_release,
    0, & cxd2820r_init, & cxd2820r_sleep, 0, 0, (enum dvbfe_algo (*)(struct dvb_frontend * ))(& cxd2820r_get_frontend_algo),
    0, 0, & cxd2820r_get_tune_settings, & cxd2820r_get_frontend, 0, & cxd2820r_read_status,
    & cxd2820r_read_ber, & cxd2820r_read_signal_strength, & cxd2820r_read_snr, & cxd2820r_read_ucblocks,
    0, 0, 0, 0, 0, 0, 0, 0, & cxd2820r_i2c_gate_ctrl, 0, & cxd2820r_search, 0, {{{(char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0,
                                                                                  (char)0},
                                                                                 0U,
                                                                                 0U,
                                                                                 0U,
                                                                                 0U,
                                                                                 0U,
                                                                                 0U},
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0,
                                                                                0},
    {{0}, 0, 0, 0, 0, 0, 0, 0, 0}, 0, & cxd2820r_get_property};
#line 636 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
struct dvb_frontend *cxd2820r_attach(struct cxd2820r_config  const  *cfg , struct i2c_adapter *i2c ,
                                     struct dvb_frontend *fe ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 tmp ;
  void *tmp___0 ;
  size_t __len ;
  void *__ret ;
  u8 tmp___1 ;
  size_t __len___0 ;
  void *__ret___0 ;

  {
#line 640
  priv = 0;
#line 644
  tmp___0 = kzalloc(1024UL, 208U);
#line 644
  priv = (struct cxd2820r_priv *)tmp___0;
#line 645
  if ((unsigned long )priv == (unsigned long )((struct cxd2820r_priv *)0)) {
#line 646
    goto error;
  } else {

  }
#line 648
  priv->i2c = i2c;
#line 649
  __len = 13UL;
#line 649
  if (__len > 63UL) {
#line 649
    __ret = __memcpy((void *)(& priv->cfg), (void const   *)cfg, __len);
  } else {
#line 649
    __ret = __builtin_memcpy((void *)(& priv->cfg), (void const   *)cfg, __len);
  }
#line 651
  tmp___1 = 255U;
#line 651
  priv->bank[1] = tmp___1;
#line 651
  priv->bank[0] = tmp___1;
#line 652
  ret = cxd2820r_rd_reg(priv, 253U, & tmp);
#line 653
  if (cxd2820r_debug != 0) {
#line 653
    printk("<6>cxd2820r: %s: chip id=%02x\n", "cxd2820r_attach", (int )tmp);
  } else {

  }
#line 654
  if (ret != 0 || (unsigned int )tmp != 225U) {
#line 655
    goto error;
  } else {

  }
#line 657
  __len___0 = 776UL;
#line 657
  if (__len___0 > 63UL) {
#line 657
    __ret___0 = __memcpy((void *)(& priv->fe.ops), (void const   *)(& cxd2820r_ops),
                         __len___0);
  } else {
#line 657
    __ret___0 = __builtin_memcpy((void *)(& priv->fe.ops), (void const   *)(& cxd2820r_ops),
                                 __len___0);
  }
#line 658
  priv->fe.demodulator_priv = (void *)priv;
#line 659
  return (& priv->fe);
  error: 
#line 661
  kfree((void const   *)priv);
#line 662
  return (0);
}
}
#line 686
void ldv_check_final_state(void) ;
#line 695
void ldv_initialize(void) ;
#line 698
extern void ldv_handler_precall(void) ;
#line 701
extern int nondet_int(void) ;
#line 704 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
int LDV_IN_INTERRUPT  ;
#line 707 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
void main(void) 
{ 
  struct dvb_frontend *var_group1 ;
  struct dvb_frontend_tune_settings *var_group2 ;
  int var_cxd2820r_i2c_gate_ctrl_22_p1 ;
  struct dvb_frontend_parameters *var_group3 ;
  fe_status_t *var_cxd2820r_read_status_10_p1 ;
  u16 *var_cxd2820r_read_snr_14_p1 ;
  u32 *var_cxd2820r_read_ber_12_p1 ;
  u32 *var_cxd2820r_read_ucblocks_15_p1 ;
  u16 *var_cxd2820r_read_signal_strength_13_p1 ;
  struct dtv_property *var_group4 ;
  int ldv_s_cxd2820r_ops_dvb_frontend_ops ;
  int tmp ;
  int tmp___0 ;

  {
#line 779
  ldv_s_cxd2820r_ops_dvb_frontend_ops = 0;
#line 769
  LDV_IN_INTERRUPT = 1;
#line 778
  ldv_initialize();
#line 783
  goto ldv_23295;
  ldv_23294: 
#line 787
  tmp = nondet_int();
#line 787
  switch (tmp) {
  case 0: ;
#line 792
  if (ldv_s_cxd2820r_ops_dvb_frontend_ops == 0) {
#line 797
    ldv_handler_precall();
#line 798
    cxd2820r_release(var_group1);
#line 799
    ldv_s_cxd2820r_ops_dvb_frontend_ops = 0;
  } else {

  }
#line 805
  goto ldv_23279;
  case 1: 
#line 814
  ldv_handler_precall();
#line 815
  cxd2820r_init(var_group1);
#line 822
  goto ldv_23279;
  case 2: 
#line 831
  ldv_handler_precall();
#line 832
  cxd2820r_sleep(var_group1);
#line 839
  goto ldv_23279;
  case 3: 
#line 848
  ldv_handler_precall();
#line 849
  cxd2820r_get_tune_settings(var_group1, var_group2);
#line 856
  goto ldv_23279;
  case 4: 
#line 865
  ldv_handler_precall();
#line 866
  cxd2820r_i2c_gate_ctrl(var_group1, var_cxd2820r_i2c_gate_ctrl_22_p1);
#line 873
  goto ldv_23279;
  case 5: 
#line 882
  ldv_handler_precall();
#line 883
  cxd2820r_get_frontend(var_group1, var_group3);
#line 890
  goto ldv_23279;
  case 6: 
#line 899
  ldv_handler_precall();
#line 900
  cxd2820r_get_frontend_algo(var_group1);
#line 907
  goto ldv_23279;
  case 7: 
#line 916
  ldv_handler_precall();
#line 917
  cxd2820r_search(var_group1, var_group3);
#line 924
  goto ldv_23279;
  case 8: 
#line 933
  ldv_handler_precall();
#line 934
  cxd2820r_read_status(var_group1, var_cxd2820r_read_status_10_p1);
#line 941
  goto ldv_23279;
  case 9: 
#line 950
  ldv_handler_precall();
#line 951
  cxd2820r_read_snr(var_group1, var_cxd2820r_read_snr_14_p1);
#line 958
  goto ldv_23279;
  case 10: 
#line 967
  ldv_handler_precall();
#line 968
  cxd2820r_read_ber(var_group1, var_cxd2820r_read_ber_12_p1);
#line 975
  goto ldv_23279;
  case 11: 
#line 984
  ldv_handler_precall();
#line 985
  cxd2820r_read_ucblocks(var_group1, var_cxd2820r_read_ucblocks_15_p1);
#line 992
  goto ldv_23279;
  case 12: 
#line 1001
  ldv_handler_precall();
#line 1002
  cxd2820r_read_signal_strength(var_group1, var_cxd2820r_read_signal_strength_13_p1);
#line 1009
  goto ldv_23279;
  case 13: 
#line 1018
  ldv_handler_precall();
#line 1019
  cxd2820r_get_property(var_group1, var_group4);
#line 1026
  goto ldv_23279;
  default: ;
#line 1027
  goto ldv_23279;
  }
  ldv_23279: ;
  ldv_23295: 
#line 783
  tmp___0 = nondet_int();
#line 783
  if (tmp___0 != 0 || ldv_s_cxd2820r_ops_dvb_frontend_ops != 0) {
#line 785
    goto ldv_23294;
  } else {

  }


#line 1036
  ldv_check_final_state();
#line 1039
  return;
}
}
#line 1043 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 1048
  ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
#line 1050
  mutex_lock(ldv_func_arg1);
#line 1051
  return;
}
}
#line 1053 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
int ldv_mutex_trylock_2(struct mutex *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___0 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 1058
  tmp = mutex_trylock(ldv_func_arg1);
#line 1058
  ldv_func_res = tmp;
#line 1060
  tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
#line 1060
  return (tmp___0);
#line 1062
  return (ldv_func_res);
}
}
#line 1065 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_core.c.prepared"
void ldv_mutex_unlock_3(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 1070
  ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
#line 1072
  mutex_unlock(ldv_func_arg1);
#line 1073
  return;
}
}
#line 171 "include/linux/mutex.h"
int ldv_mutex_trylock_8(struct mutex *ldv_func_arg1 ) ;
#line 176
void ldv_mutex_unlock_9(struct mutex *ldv_func_arg1 ) ;
#line 10 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
void ldv_mutex_lock_7(struct mutex *ldv_func_arg1 ) ;
#line 40 "drivers/media/dvb/dvb-core/dvb_math.h"
extern unsigned int intlog2(u32  ) ;
#line 39 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_set_frontend_c(struct dvb_frontend *fe , struct dvb_frontend_parameters *params ) 
{ 
  struct cxd2820r_priv *priv ;
  struct dtv_frontend_properties *c ;
  int ret ;
  int i ;
  u8 buf[2U] ;
  u32 if_freq ;
  u16 if_ctl ;
  u64 num ;
  struct reg_val_mask tab[13U] ;
  u32 tmp ;

  {
#line 42
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 43
  c = & fe->dtv_property_cache;
#line 49
  tab[0].reg = 128U;
#line 49
  tab[0].val = 1U;
#line 49
  tab[0].mask = 255U;
#line 49
  tab[1].reg = 129U;
#line 49
  tab[1].val = 5U;
#line 49
  tab[1].mask = 255U;
#line 49
  tab[2].reg = 133U;
#line 49
  tab[2].val = 7U;
#line 49
  tab[2].mask = 255U;
#line 49
  tab[3].reg = 136U;
#line 49
  tab[3].val = 1U;
#line 49
  tab[3].mask = 255U;
#line 49
  tab[4].reg = 130U;
#line 49
  tab[4].val = 32U;
#line 49
  tab[4].mask = 96U;
#line 49
  tab[5].reg = 65898U;
#line 49
  tab[5].val = 72U;
#line 49
  tab[5].mask = 255U;
#line 49
  tab[6].reg = 65701U;
#line 49
  tab[6].val = 0U;
#line 49
  tab[6].mask = 1U;
#line 49
  tab[7].reg = 65568U;
#line 49
  tab[7].val = 6U;
#line 49
  tab[7].mask = 7U;
#line 49
  tab[8].reg = 65625U;
#line 49
  tab[8].val = 80U;
#line 49
  tab[8].mask = 255U;
#line 49
  tab[9].reg = 65671U;
#line 49
  tab[9].val = 12U;
#line 49
  tab[9].mask = 60U;
#line 49
  tab[10].reg = 65675U;
#line 49
  tab[10].val = 7U;
#line 49
  tab[10].mask = 255U;
#line 49
  tab[11].reg = 65567U;
#line 49
  tab[11].val = (int )((unsigned char )priv->cfg.if_agc_polarity) << 7U;
#line 49
  tab[11].mask = 128U;
#line 49
  tab[12].reg = 65648U;
#line 49
  tab[12].val = priv->cfg.ts_mode;
#line 49
  tab[12].mask = 255U;
#line 66
  if (cxd2820r_debug != 0) {
#line 66
    printk("<6>cxd2820r: %s: RF=%d SR=%d\n", "cxd2820r_set_frontend_c", c->frequency,
           c->symbol_rate);
  } else {

  }
#line 69
  ret = cxd2820r_gpio(fe);
#line 70
  if (ret != 0) {
#line 71
    goto error;
  } else {

  }
#line 74
  if ((unsigned long )fe->ops.tuner_ops.set_params != (unsigned long )((int (*)(struct dvb_frontend * ))0)) {
#line 75
    (*(fe->ops.tuner_ops.set_params))(fe);
  } else {

  }
#line 77
  if ((unsigned int )priv->delivery_system != 1U) {
#line 78
    i = 0;
#line 78
    goto ldv_22992;
    ldv_22991: 
#line 79
    ret = cxd2820r_wr_reg_mask(priv, tab[i].reg, (int )tab[i].val, (int )tab[i].mask);
#line 81
    if (ret != 0) {
#line 82
      goto error;
    } else {

    }
#line 78
    i = i + 1;
    ldv_22992: ;
#line 78
    if ((unsigned int )i <= 12U) {
#line 79
      goto ldv_22991;
    } else {

    }

  } else {

  }
#line 86
  priv->delivery_system = SYS_DVBC_ANNEX_A;
#line 87
  priv->ber_running = 0;
#line 90
  if ((unsigned long )fe->ops.tuner_ops.get_if_frequency != (unsigned long )((int (*)(struct dvb_frontend * ,
                                                                                      u32 * ))0)) {
#line 91
    ret = (*(fe->ops.tuner_ops.get_if_frequency))(fe, & if_freq);
#line 92
    if (ret != 0) {
#line 93
      goto error;
    } else {

    }
  } else {
#line 95
    if_freq = 0U;
  }
#line 97
  if (cxd2820r_debug != 0) {
#line 97
    printk("<6>cxd2820r: %s: if_freq=%d\n", "cxd2820r_set_frontend_c", if_freq);
  } else {

  }
#line 99
  num = (u64 )(if_freq / 1000U);
#line 100
  num = num * 16384ULL;
#line 101
  tmp = cxd2820r_div_u64_round_closest(num, 41000U);
#line 101
  if_ctl = (u16 )tmp;
#line 102
  buf[0] = (unsigned int )((u8 )((int )if_ctl >> 8)) & 63U;
#line 103
  buf[1] = (u8 )if_ctl;
#line 105
  ret = cxd2820r_wr_regs(priv, 65602U, (u8 *)(& buf), 2);
#line 106
  if (ret != 0) {
#line 107
    goto error;
  } else {

  }
#line 109
  ret = cxd2820r_wr_reg(priv, 255U, 8);
#line 110
  if (ret != 0) {
#line 111
    goto error;
  } else {

  }
#line 113
  ret = cxd2820r_wr_reg(priv, 254U, 1);
#line 114
  if (ret != 0) {
#line 115
    goto error;
  } else {

  }
#line 117
  return (ret);
  error: ;
#line 119
  if (cxd2820r_debug != 0) {
#line 119
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_set_frontend_c", ret);
  } else {

  }
#line 120
  return (ret);
}
}
#line 123 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_get_frontend_c(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) 
{ 
  struct cxd2820r_priv *priv ;
  struct dtv_frontend_properties *c ;
  int ret ;
  u8 buf[2U] ;

  {
#line 126
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 127
  c = & fe->dtv_property_cache;
#line 131
  ret = cxd2820r_rd_regs(priv, 65562U, (u8 *)(& buf), 2);
#line 132
  if (ret != 0) {
#line 133
    goto error;
  } else {

  }
#line 135
  c->symbol_rate = (u32 )(((((int )buf[0] & 15) << 8) | (int )buf[1]) * 2500);
#line 137
  ret = cxd2820r_rd_reg(priv, 65561U, (u8 *)(& buf));
#line 138
  if (ret != 0) {
#line 139
    goto error;
  } else {

  }
#line 141
  switch ((int )buf[0] & 3) {
  case 0: 
#line 143
  c->modulation = QAM_16;
#line 144
  goto ldv_23004;
  case 1: 
#line 146
  c->modulation = QAM_32;
#line 147
  goto ldv_23004;
  case 2: 
#line 149
  c->modulation = QAM_64;
#line 150
  goto ldv_23004;
  case 3: 
#line 152
  c->modulation = QAM_128;
#line 153
  goto ldv_23004;
  case 4: 
#line 155
  c->modulation = QAM_256;
#line 156
  goto ldv_23004;
  }
  ldv_23004: ;
#line 159
  switch (((int )buf[0] >> 7) & 1) {
  case 0: 
#line 161
  c->inversion = INVERSION_OFF;
#line 162
  goto ldv_23010;
  case 1: 
#line 164
  c->inversion = INVERSION_ON;
#line 165
  goto ldv_23010;
  }
  ldv_23010: ;
#line 168
  return (ret);
  error: ;
#line 170
  if (cxd2820r_debug != 0) {
#line 170
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_get_frontend_c", ret);
  } else {

  }
#line 171
  return (ret);
}
}
#line 174 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_read_ber_c(struct dvb_frontend *fe , u32 *ber ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[3U] ;
  u8 start_ber ;

  {
#line 176
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 178
  start_ber = 0U;
#line 179
  *ber = 0U;
#line 181
  if ((int )priv->ber_running) {
#line 182
    ret = cxd2820r_rd_regs(priv, 65654U, (u8 *)(& buf), 3);
#line 183
    if (ret != 0) {
#line 184
      goto error;
    } else {

    }
#line 186
    if (((int )buf[2] >> 7) & 1 || ((int )buf[2] >> 4) & 1) {
#line 187
      *ber = (u32 )(((((int )buf[2] & 15) << 16) | ((int )buf[1] << 8)) | (int )buf[0]);
#line 188
      start_ber = 1U;
    } else {

    }
  } else {
#line 191
    priv->ber_running = 1;
#line 192
    start_ber = 1U;
  }
#line 195
  if ((unsigned int )start_ber != 0U) {
#line 197
    ret = cxd2820r_wr_reg(priv, 65657U, 1);
#line 198
    if (ret != 0) {
#line 199
      goto error;
    } else {

    }
  } else {

  }
#line 202
  return (ret);
  error: ;
#line 204
  if (cxd2820r_debug != 0) {
#line 204
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_ber_c", ret);
  } else {

  }
#line 205
  return (ret);
}
}
#line 208 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_read_signal_strength_c(struct dvb_frontend *fe , u16 *strength ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[2U] ;
  u16 tmp ;

  {
#line 211
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 216
  ret = cxd2820r_rd_regs(priv, 65609U, (u8 *)(& buf), 2);
#line 217
  if (ret != 0) {
#line 218
    goto error;
  } else {

  }
#line 220
  tmp = (u16 )((int )((short )(((int )buf[0] & 3) << 8)) | (int )((short )buf[1]));
#line 221
  tmp = (unsigned int )(~ ((int )tmp)) & 1023U;
#line 223
  if ((unsigned int )tmp == 512U) {
#line 225
    tmp = 0U;
  } else
#line 226
  if ((unsigned int )tmp > 350U) {
#line 227
    tmp = 350U;
  } else {

  }
#line 230
  *strength = (u16 )(((int )tmp * 65535) / 350);
#line 232
  return (ret);
  error: ;
#line 234
  if (cxd2820r_debug != 0) {
#line 234
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_signal_strength_c", ret);
  } else {

  }
#line 235
  return (ret);
}
}
#line 238 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_read_snr_c(struct dvb_frontend *fe , u16 *snr ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 tmp ;
  unsigned int A ;
  unsigned int B ;
  unsigned int tmp___0 ;

  {
#line 240
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 246
  ret = cxd2820r_rd_reg(priv, 65561U, & tmp);
#line 247
  if (ret != 0) {
#line 248
    goto error;
  } else {

  }
#line 250
  if ((int )tmp & 1) {
#line 251
    A = 875U;
#line 252
    B = 650U;
  } else {
#line 254
    A = 950U;
#line 255
    B = 760U;
  }
#line 258
  ret = cxd2820r_rd_reg(priv, 65613U, & tmp);
#line 259
  if (ret != 0) {
#line 260
    goto error;
  } else {

  }
#line 263
  if ((unsigned int )tmp != 0U) {
#line 264
    tmp___0 = intlog2(B / (unsigned int )tmp);
#line 264
    *snr = (u16 )(((tmp___0 >> 5) * A) / 7563870U);
  } else {
#line 267
    *snr = 0U;
  }
#line 269
  return (ret);
  error: ;
#line 271
  if (cxd2820r_debug != 0) {
#line 271
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_snr_c", ret);
  } else {

  }
#line 272
  return (ret);
}
}
#line 275 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_read_ucblocks_c(struct dvb_frontend *fe , u32 *ucblocks ) 
{ 


  {
#line 277
  *ucblocks = 0U;
#line 279
  return (0);
}
}
#line 282 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_read_status_c(struct dvb_frontend *fe , fe_status_t *status ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[2U] ;

  {
#line 284
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 287
  *status = 0;
#line 289
  ret = cxd2820r_rd_regs(priv, 65672U, (u8 *)(& buf), 2);
#line 290
  if (ret != 0) {
#line 291
    goto error;
  } else {

  }
#line 293
  if ((int )buf[0] & 1) {
#line 294
    *status = (fe_status_t )((unsigned int )*status | 15U);
#line 297
    if (((int )buf[1] >> 3) & 1) {
#line 298
      *status = (fe_status_t )((unsigned int )*status | 31U);
    } else {

    }
  } else {

  }
#line 303
  if (cxd2820r_debug != 0) {
#line 303
    printk("<6>cxd2820r: %s: lock=%02x %02x\n", "cxd2820r_read_status_c", (int )buf[0],
           (int )buf[1]);
  } else {

  }
#line 305
  return (ret);
  error: ;
#line 307
  if (cxd2820r_debug != 0) {
#line 307
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_status_c", ret);
  } else {

  }
#line 308
  return (ret);
}
}
#line 311 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_init_c(struct dvb_frontend *fe ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;

  {
#line 313
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 316
  ret = cxd2820r_wr_reg(priv, 133U, 7);
#line 317
  if (ret != 0) {
#line 318
    goto error;
  } else {

  }
#line 320
  return (ret);
  error: ;
#line 322
  if (cxd2820r_debug != 0) {
#line 322
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_init_c", ret);
  } else {

  }
#line 323
  return (ret);
}
}
#line 326 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_sleep_c(struct dvb_frontend *fe ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  int i ;
  struct reg_val_mask tab[5U] ;

  {
#line 328
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 330
  tab[0].reg = 255U;
#line 330
  tab[0].val = 31U;
#line 330
  tab[0].mask = 255U;
#line 330
  tab[1].reg = 133U;
#line 330
  tab[1].val = 0U;
#line 330
  tab[1].mask = 255U;
#line 330
  tab[2].reg = 136U;
#line 330
  tab[2].val = 1U;
#line 330
  tab[2].mask = 255U;
#line 330
  tab[3].reg = 129U;
#line 330
  tab[3].val = 0U;
#line 330
  tab[3].mask = 255U;
#line 330
  tab[4].reg = 128U;
#line 330
  tab[4].val = 0U;
#line 330
  tab[4].mask = 255U;
#line 338
  if (cxd2820r_debug != 0) {
#line 338
    printk("<6>cxd2820r: %s\n", "cxd2820r_sleep_c");
  } else {

  }
#line 340
  priv->delivery_system = SYS_UNDEFINED;
#line 342
  i = 0;
#line 342
  goto ldv_23076;
  ldv_23075: 
#line 343
  ret = cxd2820r_wr_reg_mask(priv, tab[i].reg, (int )tab[i].val, (int )tab[i].mask);
#line 345
  if (ret != 0) {
#line 346
    goto error;
  } else {

  }
#line 342
  i = i + 1;
  ldv_23076: ;
#line 342
  if ((unsigned int )i <= 4U) {
#line 343
    goto ldv_23075;
  } else {

  }

#line 349
  return (ret);
  error: ;
#line 351
  if (cxd2820r_debug != 0) {
#line 351
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_sleep_c", ret);
  } else {

  }
#line 352
  return (ret);
}
}
#line 355 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int cxd2820r_get_tune_settings_c(struct dvb_frontend *fe , struct dvb_frontend_tune_settings *s ) 
{ 


  {
#line 358
  s->min_delay_ms = 500;
#line 359
  s->step_size = 0;
#line 360
  s->max_drift = 0;
#line 362
  return (0);
}
}
#line 365 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
void ldv_mutex_lock_7(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 370
  ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
#line 372
  mutex_lock(ldv_func_arg1);
#line 373
  return;
}
}
#line 375 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
int ldv_mutex_trylock_8(struct mutex *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___0 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 380
  tmp = mutex_trylock(ldv_func_arg1);
#line 380
  ldv_func_res = tmp;
#line 382
  tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
#line 382
  return (tmp___0);
#line 384
  return (ldv_func_res);
}
}
#line 387 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_c.c.prepared"
void ldv_mutex_unlock_9(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 392
  ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
#line 394
  mutex_unlock(ldv_func_arg1);
#line 395
  return;
}
}
#line 171 "include/linux/mutex.h"
int ldv_mutex_trylock_14(struct mutex *ldv_func_arg1 ) ;
#line 176
void ldv_mutex_unlock_15(struct mutex *ldv_func_arg1 ) ;
#line 10 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
void ldv_mutex_lock_13(struct mutex *ldv_func_arg1 ) ;
#line 56 "drivers/media/dvb/dvb-core/dvb_math.h"
extern unsigned int intlog10(u32  ) ;
#line 39 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_set_frontend_t(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) 
{ 
  struct cxd2820r_priv *priv ;
  struct dtv_frontend_properties *c ;
  int ret ;
  int i ;
  int bw_i ;
  u32 if_freq ;
  u32 if_ctl ;
  u64 num ;
  u8 buf[3U] ;
  u8 bw_param ;
  u8 bw_params1[3U][5U] ;
  u8 bw_params2[3U][2U] ;
  struct reg_val_mask tab[11U] ;

  {
#line 42
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 43
  c = & fe->dtv_property_cache;
#line 48
  bw_params1[0][0] = 23U;
#line 48
  bw_params1[0][1] = 234U;
#line 48
  bw_params1[0][2] = 170U;
#line 48
  bw_params1[0][3] = 170U;
#line 48
  bw_params1[0][4] = 170U;
#line 48
  bw_params1[1][0] = 20U;
#line 48
  bw_params1[1][1] = 128U;
#line 48
  bw_params1[1][2] = 0U;
#line 48
  bw_params1[1][3] = 0U;
#line 48
  bw_params1[1][4] = 0U;
#line 48
  bw_params1[2][0] = 17U;
#line 48
  bw_params1[2][1] = 240U;
#line 48
  bw_params1[2][2] = 0U;
#line 48
  bw_params1[2][3] = 0U;
#line 48
  bw_params1[2][4] = 0U;
#line 53
  bw_params2[0][0] = 31U;
#line 53
  bw_params2[0][1] = 220U;
#line 53
  bw_params2[1][0] = 18U;
#line 53
  bw_params2[1][1] = 248U;
#line 53
  bw_params2[2][0] = 1U;
#line 53
  bw_params2[2][1] = 224U;
#line 58
  tab[0].reg = 128U;
#line 58
  tab[0].val = 0U;
#line 58
  tab[0].mask = 255U;
#line 58
  tab[1].reg = 129U;
#line 58
  tab[1].val = 3U;
#line 58
  tab[1].mask = 255U;
#line 58
  tab[2].reg = 133U;
#line 58
  tab[2].val = 7U;
#line 58
  tab[2].mask = 255U;
#line 58
  tab[3].reg = 136U;
#line 58
  tab[3].val = 1U;
#line 58
  tab[3].mask = 255U;
#line 58
  tab[4].reg = 112U;
#line 58
  tab[4].val = priv->cfg.ts_mode;
#line 58
  tab[4].mask = 255U;
#line 58
  tab[5].reg = 203U;
#line 58
  tab[5].val = (int )((unsigned char )priv->cfg.if_agc_polarity) << 6U;
#line 58
  tab[5].mask = 64U;
#line 58
  tab[6].reg = 165U;
#line 58
  tab[6].val = 0U;
#line 58
  tab[6].mask = 1U;
#line 58
  tab[7].reg = 130U;
#line 58
  tab[7].val = 32U;
#line 58
  tab[7].mask = 96U;
#line 58
  tab[8].reg = 194U;
#line 58
  tab[8].val = 195U;
#line 58
  tab[8].mask = 255U;
#line 58
  tab[9].reg = 362U;
#line 58
  tab[9].val = 80U;
#line 58
  tab[9].mask = 255U;
#line 58
  tab[10].reg = 1063U;
#line 58
  tab[10].val = 65U;
#line 58
  tab[10].mask = 255U;
#line 73
  if (cxd2820r_debug != 0) {
#line 73
    printk("<6>cxd2820r: %s: RF=%d BW=%d\n", "cxd2820r_set_frontend_t", c->frequency,
           c->bandwidth_hz);
  } else {

  }
#line 75
  switch (c->bandwidth_hz) {
  case (u32 )6000000: 
#line 77
  bw_i = 0;
#line 78
  bw_param = 2U;
#line 79
  goto ldv_22993;
  case (u32 )7000000: 
#line 81
  bw_i = 1;
#line 82
  bw_param = 1U;
#line 83
  goto ldv_22993;
  case (u32 )8000000: 
#line 85
  bw_i = 2;
#line 86
  bw_param = 0U;
#line 87
  goto ldv_22993;
  default: ;
#line 89
  return (-22);
  }
  ldv_22993: 
#line 93
  ret = cxd2820r_gpio(fe);
#line 94
  if (ret != 0) {
#line 95
    goto error;
  } else {

  }
#line 98
  if ((unsigned long )fe->ops.tuner_ops.set_params != (unsigned long )((int (*)(struct dvb_frontend * ))0)) {
#line 99
    (*(fe->ops.tuner_ops.set_params))(fe);
  } else {

  }
#line 101
  if ((unsigned int )priv->delivery_system != 3U) {
#line 102
    i = 0;
#line 102
    goto ldv_23001;
    ldv_23000: 
#line 103
    ret = cxd2820r_wr_reg_mask(priv, tab[i].reg, (int )tab[i].val, (int )tab[i].mask);
#line 105
    if (ret != 0) {
#line 106
      goto error;
    } else {

    }
#line 102
    i = i + 1;
    ldv_23001: ;
#line 102
    if ((unsigned int )i <= 10U) {
#line 103
      goto ldv_23000;
    } else {

    }

  } else {

  }
#line 110
  priv->delivery_system = SYS_DVBT;
#line 111
  priv->ber_running = 0;
#line 114
  if ((unsigned long )fe->ops.tuner_ops.get_if_frequency != (unsigned long )((int (*)(struct dvb_frontend * ,
                                                                                      u32 * ))0)) {
#line 115
    ret = (*(fe->ops.tuner_ops.get_if_frequency))(fe, & if_freq);
#line 116
    if (ret != 0) {
#line 117
      goto error;
    } else {

    }
  } else {
#line 119
    if_freq = 0U;
  }
#line 121
  if (cxd2820r_debug != 0) {
#line 121
    printk("<6>cxd2820r: %s: if_freq=%d\n", "cxd2820r_set_frontend_t", if_freq);
  } else {

  }
#line 123
  num = (u64 )(if_freq / 1000U);
#line 124
  num = num * 16777216ULL;
#line 125
  if_ctl = cxd2820r_div_u64_round_closest(num, 41000U);
#line 126
  buf[0] = (u8 )(if_ctl >> 16);
#line 127
  buf[1] = (u8 )(if_ctl >> 8);
#line 128
  buf[2] = (u8 )if_ctl;
#line 130
  ret = cxd2820r_wr_regs(priv, 182U, (u8 *)(& buf), 3);
#line 131
  if (ret != 0) {
#line 132
    goto error;
  } else {

  }
#line 134
  ret = cxd2820r_wr_regs(priv, 159U, (u8 *)(& bw_params1) + (unsigned long )bw_i,
                         5);
#line 135
  if (ret != 0) {
#line 136
    goto error;
  } else {

  }
#line 138
  ret = cxd2820r_wr_reg_mask(priv, 215U, (int )bw_param << 6U, 192);
#line 139
  if (ret != 0) {
#line 140
    goto error;
  } else {

  }
#line 142
  ret = cxd2820r_wr_regs(priv, 217U, (u8 *)(& bw_params2) + (unsigned long )bw_i,
                         2);
#line 143
  if (ret != 0) {
#line 144
    goto error;
  } else {

  }
#line 146
  ret = cxd2820r_wr_reg(priv, 255U, 8);
#line 147
  if (ret != 0) {
#line 148
    goto error;
  } else {

  }
#line 150
  ret = cxd2820r_wr_reg(priv, 254U, 1);
#line 151
  if (ret != 0) {
#line 152
    goto error;
  } else {

  }
#line 154
  return (ret);
  error: ;
#line 156
  if (cxd2820r_debug != 0) {
#line 156
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_set_frontend_t", ret);
  } else {

  }
#line 157
  return (ret);
}
}
#line 160 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_get_frontend_t(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) 
{ 
  struct cxd2820r_priv *priv ;
  struct dtv_frontend_properties *c ;
  int ret ;
  u8 buf[2U] ;

  {
#line 163
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 164
  c = & fe->dtv_property_cache;
#line 168
  ret = cxd2820r_rd_regs(priv, 47U, (u8 *)(& buf), 2);
#line 169
  if (ret != 0) {
#line 170
    goto error;
  } else {

  }
#line 172
  switch (((int )buf[0] >> 6) & 3) {
  case 0: 
#line 174
  c->modulation = QPSK;
#line 175
  goto ldv_23013;
  case 1: 
#line 177
  c->modulation = QAM_16;
#line 178
  goto ldv_23013;
  case 2: 
#line 180
  c->modulation = QAM_64;
#line 181
  goto ldv_23013;
  }
  ldv_23013: ;
#line 184
  switch (((int )buf[1] >> 1) & 3) {
  case 0: 
#line 186
  c->transmission_mode = TRANSMISSION_MODE_2K;
#line 187
  goto ldv_23017;
  case 1: 
#line 189
  c->transmission_mode = TRANSMISSION_MODE_8K;
#line 190
  goto ldv_23017;
  }
  ldv_23017: ;
#line 193
  switch (((int )buf[1] >> 3) & 3) {
  case 0: 
#line 195
  c->guard_interval = GUARD_INTERVAL_1_32;
#line 196
  goto ldv_23020;
  case 1: 
#line 198
  c->guard_interval = GUARD_INTERVAL_1_16;
#line 199
  goto ldv_23020;
  case 2: 
#line 201
  c->guard_interval = GUARD_INTERVAL_1_8;
#line 202
  goto ldv_23020;
  case 3: 
#line 204
  c->guard_interval = GUARD_INTERVAL_1_4;
#line 205
  goto ldv_23020;
  }
  ldv_23020: ;
#line 208
  switch (((int )buf[0] >> 3) & 7) {
  case 0: 
#line 210
  c->hierarchy = HIERARCHY_NONE;
#line 211
  goto ldv_23025;
  case 1: 
#line 213
  c->hierarchy = HIERARCHY_1;
#line 214
  goto ldv_23025;
  case 2: 
#line 216
  c->hierarchy = HIERARCHY_2;
#line 217
  goto ldv_23025;
  case 3: 
#line 219
  c->hierarchy = HIERARCHY_4;
#line 220
  goto ldv_23025;
  }
  ldv_23025: ;
#line 223
  switch ((int )buf[0] & 7) {
  case 0: 
#line 225
  c->code_rate_HP = FEC_1_2;
#line 226
  goto ldv_23030;
  case 1: 
#line 228
  c->code_rate_HP = FEC_2_3;
#line 229
  goto ldv_23030;
  case 2: 
#line 231
  c->code_rate_HP = FEC_3_4;
#line 232
  goto ldv_23030;
  case 3: 
#line 234
  c->code_rate_HP = FEC_5_6;
#line 235
  goto ldv_23030;
  case 4: 
#line 237
  c->code_rate_HP = FEC_7_8;
#line 238
  goto ldv_23030;
  }
  ldv_23030: ;
#line 241
  switch (((int )buf[1] >> 5) & 7) {
  case 0: 
#line 243
  c->code_rate_LP = FEC_1_2;
#line 244
  goto ldv_23036;
  case 1: 
#line 246
  c->code_rate_LP = FEC_2_3;
#line 247
  goto ldv_23036;
  case 2: 
#line 249
  c->code_rate_LP = FEC_3_4;
#line 250
  goto ldv_23036;
  case 3: 
#line 252
  c->code_rate_LP = FEC_5_6;
#line 253
  goto ldv_23036;
  case 4: 
#line 255
  c->code_rate_LP = FEC_7_8;
#line 256
  goto ldv_23036;
  }
  ldv_23036: 
#line 259
  ret = cxd2820r_rd_reg(priv, 1990U, (u8 *)(& buf));
#line 260
  if (ret != 0) {
#line 261
    goto error;
  } else {

  }
#line 263
  switch ((int )buf[0] & 1) {
  case 0: 
#line 265
  c->inversion = INVERSION_OFF;
#line 266
  goto ldv_23042;
  case 1: 
#line 268
  c->inversion = INVERSION_ON;
#line 269
  goto ldv_23042;
  }
  ldv_23042: ;
#line 272
  return (ret);
  error: ;
#line 274
  if (cxd2820r_debug != 0) {
#line 274
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_get_frontend_t", ret);
  } else {

  }
#line 275
  return (ret);
}
}
#line 278 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_read_ber_t(struct dvb_frontend *fe , u32 *ber ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[3U] ;
  u8 start_ber ;

  {
#line 280
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 282
  start_ber = 0U;
#line 283
  *ber = 0U;
#line 285
  if ((int )priv->ber_running) {
#line 286
    ret = cxd2820r_rd_regs(priv, 118U, (u8 *)(& buf), 3);
#line 287
    if (ret != 0) {
#line 288
      goto error;
    } else {

    }
#line 290
    if (((int )buf[2] >> 7) & 1 || ((int )buf[2] >> 4) & 1) {
#line 291
      *ber = (u32 )(((((int )buf[2] & 15) << 16) | ((int )buf[1] << 8)) | (int )buf[0]);
#line 292
      start_ber = 1U;
    } else {

    }
  } else {
#line 295
    priv->ber_running = 1;
#line 296
    start_ber = 1U;
  }
#line 299
  if ((unsigned int )start_ber != 0U) {
#line 301
    ret = cxd2820r_wr_reg(priv, 121U, 1);
#line 302
    if (ret != 0) {
#line 303
      goto error;
    } else {

    }
  } else {

  }
#line 306
  return (ret);
  error: ;
#line 308
  if (cxd2820r_debug != 0) {
#line 308
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_ber_t", ret);
  } else {

  }
#line 309
  return (ret);
}
}
#line 312 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_read_signal_strength_t(struct dvb_frontend *fe , u16 *strength ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[2U] ;
  u16 tmp ;

  {
#line 315
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 320
  ret = cxd2820r_rd_regs(priv, 38U, (u8 *)(& buf), 2);
#line 321
  if (ret != 0) {
#line 322
    goto error;
  } else {

  }
#line 324
  tmp = (u16 )((int )((short )(((int )buf[0] & 15) << 8)) | (int )((short )buf[1]));
#line 325
  tmp = (unsigned int )(~ ((int )tmp)) & 4095U;
#line 328
  *strength = (u16 )(((int )tmp * 65535) / 4095);
#line 330
  return (ret);
  error: ;
#line 332
  if (cxd2820r_debug != 0) {
#line 332
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_signal_strength_t", ret);
  } else {

  }
#line 333
  return (ret);
}
}
#line 336 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_read_snr_t(struct dvb_frontend *fe , u16 *snr ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[2U] ;
  u16 tmp ;
  unsigned int tmp___0 ;

  {
#line 338
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 344
  ret = cxd2820r_rd_regs(priv, 40U, (u8 *)(& buf), 2);
#line 345
  if (ret != 0) {
#line 346
    goto error;
  } else {

  }
#line 348
  tmp = (u16 )((int )((short )(((int )buf[0] & 31) << 8)) | (int )((short )buf[1]));
#line 350
  if ((unsigned int )tmp != 0U) {
#line 351
    tmp___0 = intlog10((u32 )tmp);
#line 351
    *snr = (u16 )((tmp___0 - 15151336U) / 167772U);
  } else {
#line 354
    *snr = 0U;
  }
#line 356
  if (cxd2820r_debug != 0) {
#line 356
    printk("<6>cxd2820r: %s: dBx10=%d val=%04x\n", "cxd2820r_read_snr_t", (int )*snr,
           (int )tmp);
  } else {

  }
#line 358
  return (ret);
  error: ;
#line 360
  if (cxd2820r_debug != 0) {
#line 360
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_snr_t", ret);
  } else {

  }
#line 361
  return (ret);
}
}
#line 364 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_read_ucblocks_t(struct dvb_frontend *fe , u32 *ucblocks ) 
{ 


  {
#line 366
  *ucblocks = 0U;
#line 368
  return (0);
}
}
#line 371 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_read_status_t(struct dvb_frontend *fe , fe_status_t *status ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[4U] ;

  {
#line 373
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 376
  *status = 0;
#line 378
  ret = cxd2820r_rd_reg(priv, 16U, (u8 *)(& buf));
#line 379
  if (ret != 0) {
#line 380
    goto error;
  } else {

  }
#line 382
  if (((int )buf[0] & 7) == 6) {
#line 383
    ret = cxd2820r_rd_reg(priv, 115U, (u8 *)(& buf) + 1UL);
#line 384
    if (ret != 0) {
#line 385
      goto error;
    } else {

    }
#line 387
    if (((int )buf[1] >> 3) & 1) {
#line 388
      *status = (fe_status_t )((unsigned int )*status | 31U);
    } else {
#line 391
      *status = (fe_status_t )((unsigned int )*status | 15U);
    }
  } else {
#line 395
    ret = cxd2820r_rd_reg(priv, 20U, (u8 *)(& buf) + 2UL);
#line 396
    if (ret != 0) {
#line 397
      goto error;
    } else {

    }
#line 399
    if (((int )buf[2] & 15) > 3) {
#line 400
      ret = cxd2820r_rd_reg(priv, 2580U, (u8 *)(& buf) + 3UL);
#line 401
      if (ret != 0) {
#line 402
        goto error;
      } else {

      }
#line 404
      if (((int )buf[3] >> 4) & 1) {
#line 405
        *status = (fe_status_t )((unsigned int )*status | 1U);
      } else {

      }
    } else {

    }
  }
#line 409
  if (cxd2820r_debug != 0) {
#line 409
    printk("<6>cxd2820r: %s: lock=%02x %02x %02x %02x\n", "cxd2820r_read_status_t",
           (int )buf[0], (int )buf[1], (int )buf[2], (int )buf[3]);
  } else {

  }
#line 412
  return (ret);
  error: ;
#line 414
  if (cxd2820r_debug != 0) {
#line 414
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_status_t", ret);
  } else {

  }
#line 415
  return (ret);
}
}
#line 418 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_init_t(struct dvb_frontend *fe ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;

  {
#line 420
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 423
  ret = cxd2820r_wr_reg(priv, 133U, 7);
#line 424
  if (ret != 0) {
#line 425
    goto error;
  } else {

  }
#line 427
  return (ret);
  error: ;
#line 429
  if (cxd2820r_debug != 0) {
#line 429
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_init_t", ret);
  } else {

  }
#line 430
  return (ret);
}
}
#line 433 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_sleep_t(struct dvb_frontend *fe ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  int i ;
  struct reg_val_mask tab[5U] ;

  {
#line 435
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 437
  tab[0].reg = 255U;
#line 437
  tab[0].val = 31U;
#line 437
  tab[0].mask = 255U;
#line 437
  tab[1].reg = 133U;
#line 437
  tab[1].val = 0U;
#line 437
  tab[1].mask = 255U;
#line 437
  tab[2].reg = 136U;
#line 437
  tab[2].val = 1U;
#line 437
  tab[2].mask = 255U;
#line 437
  tab[3].reg = 129U;
#line 437
  tab[3].val = 0U;
#line 437
  tab[3].mask = 255U;
#line 437
  tab[4].reg = 128U;
#line 437
  tab[4].val = 0U;
#line 437
  tab[4].mask = 255U;
#line 445
  if (cxd2820r_debug != 0) {
#line 445
    printk("<6>cxd2820r: %s\n", "cxd2820r_sleep_t");
  } else {

  }
#line 447
  priv->delivery_system = SYS_UNDEFINED;
#line 449
  i = 0;
#line 449
  goto ldv_23107;
  ldv_23106: 
#line 450
  ret = cxd2820r_wr_reg_mask(priv, tab[i].reg, (int )tab[i].val, (int )tab[i].mask);
#line 452
  if (ret != 0) {
#line 453
    goto error;
  } else {

  }
#line 449
  i = i + 1;
  ldv_23107: ;
#line 449
  if ((unsigned int )i <= 4U) {
#line 450
    goto ldv_23106;
  } else {

  }

#line 456
  return (ret);
  error: ;
#line 458
  if (cxd2820r_debug != 0) {
#line 458
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_sleep_t", ret);
  } else {

  }
#line 459
  return (ret);
}
}
#line 462 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int cxd2820r_get_tune_settings_t(struct dvb_frontend *fe , struct dvb_frontend_tune_settings *s ) 
{ 


  {
#line 465
  s->min_delay_ms = 500;
#line 466
  s->step_size = (int )(fe->ops.info.frequency_stepsize * 2U);
#line 467
  s->max_drift = (int )(fe->ops.info.frequency_stepsize * 2U + 1U);
#line 469
  return (0);
}
}
#line 472 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
void ldv_mutex_lock_13(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 477
  ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
#line 479
  mutex_lock(ldv_func_arg1);
#line 480
  return;
}
}
#line 482 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
int ldv_mutex_trylock_14(struct mutex *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___0 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 487
  tmp = mutex_trylock(ldv_func_arg1);
#line 487
  ldv_func_res = tmp;
#line 489
  tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
#line 489
  return (tmp___0);
#line 491
  return (ldv_func_res);
}
}
#line 494 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t.c.prepared"
void ldv_mutex_unlock_15(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 499
  ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
#line 501
  mutex_unlock(ldv_func_arg1);
#line 502
  return;
}
}
#line 171 "include/linux/mutex.h"
int ldv_mutex_trylock_20(struct mutex *ldv_func_arg1 ) ;
#line 176
void ldv_mutex_unlock_21(struct mutex *ldv_func_arg1 ) ;
#line 10 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
void ldv_mutex_lock_19(struct mutex *ldv_func_arg1 ) ;
#line 39 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_set_frontend_t2(struct dvb_frontend *fe , struct dvb_frontend_parameters *params ) 
{ 
  struct cxd2820r_priv *priv ;
  struct dtv_frontend_properties *c ;
  int ret ;
  int i ;
  int bw_i ;
  u32 if_freq ;
  u32 if_ctl ;
  u64 num ;
  u8 buf[3U] ;
  u8 bw_param ;
  u8 bw_params1[4U][5U] ;
  struct reg_val_mask tab[29U] ;

  {
#line 42
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 43
  c = & fe->dtv_property_cache;
#line 48
  bw_params1[0][0] = 28U;
#line 48
  bw_params1[0][1] = 179U;
#line 48
  bw_params1[0][2] = 51U;
#line 48
  bw_params1[0][3] = 51U;
#line 48
  bw_params1[0][4] = 51U;
#line 48
  bw_params1[1][0] = 23U;
#line 48
  bw_params1[1][1] = 234U;
#line 48
  bw_params1[1][2] = 170U;
#line 48
  bw_params1[1][3] = 170U;
#line 48
  bw_params1[1][4] = 170U;
#line 48
  bw_params1[2][0] = 20U;
#line 48
  bw_params1[2][1] = 128U;
#line 48
  bw_params1[2][2] = 0U;
#line 48
  bw_params1[2][3] = 0U;
#line 48
  bw_params1[2][4] = 0U;
#line 48
  bw_params1[3][0] = 17U;
#line 48
  bw_params1[3][1] = 240U;
#line 48
  bw_params1[3][2] = 0U;
#line 48
  bw_params1[3][3] = 0U;
#line 48
  bw_params1[3][4] = 0U;
#line 54
  tab[0].reg = 128U;
#line 54
  tab[0].val = 2U;
#line 54
  tab[0].mask = 255U;
#line 54
  tab[1].reg = 129U;
#line 54
  tab[1].val = 32U;
#line 54
  tab[1].mask = 255U;
#line 54
  tab[2].reg = 133U;
#line 54
  tab[2].val = 7U;
#line 54
  tab[2].mask = 255U;
#line 54
  tab[3].reg = 136U;
#line 54
  tab[3].val = 1U;
#line 54
  tab[3].mask = 255U;
#line 54
  tab[4].reg = 8297U;
#line 54
  tab[4].val = 1U;
#line 54
  tab[4].mask = 255U;
#line 54
  tab[5].reg = 8319U;
#line 54
  tab[5].val = 42U;
#line 54
  tab[5].mask = 255U;
#line 54
  tab[6].reg = 8322U;
#line 54
  tab[6].val = 10U;
#line 54
  tab[6].mask = 255U;
#line 54
  tab[7].reg = 8323U;
#line 54
  tab[7].val = 10U;
#line 54
  tab[7].mask = 255U;
#line 54
  tab[8].reg = 8395U;
#line 54
  tab[8].val = (int )((unsigned char )priv->cfg.if_agc_polarity) << 6U;
#line 54
  tab[8].mask = 64U;
#line 54
  tab[9].reg = 8304U;
#line 54
  tab[9].val = priv->cfg.ts_mode;
#line 54
  tab[9].mask = 255U;
#line 54
  tab[10].reg = 8373U;
#line 54
  tab[10].val = (int )((unsigned char )priv->cfg.spec_inv) << 4U;
#line 54
  tab[10].mask = 16U;
#line 54
  tab[11].reg = 9575U;
#line 54
  tab[11].val = 7U;
#line 54
  tab[11].mask = 15U;
#line 54
  tab[12].reg = 9577U;
#line 54
  tab[12].val = 3U;
#line 54
  tab[12].mask = 3U;
#line 54
  tab[13].reg = 9621U;
#line 54
  tab[13].val = 26U;
#line 54
  tab[13].mask = 255U;
#line 54
  tab[14].reg = 9622U;
#line 54
  tab[14].val = 80U;
#line 54
  tab[14].mask = 255U;
#line 54
  tab[15].reg = 10892U;
#line 54
  tab[15].val = 0U;
#line 54
  tab[15].mask = 255U;
#line 54
  tab[16].reg = 10893U;
#line 54
  tab[16].val = 52U;
#line 54
  tab[16].mask = 255U;
#line 54
  tab[17].reg = 10821U;
#line 54
  tab[17].val = 6U;
#line 54
  tab[17].mask = 7U;
#line 54
  tab[18].reg = 16144U;
#line 54
  tab[18].val = 13U;
#line 54
  tab[18].mask = 255U;
#line 54
  tab[19].reg = 16145U;
#line 54
  tab[19].val = 2U;
#line 54
  tab[19].mask = 255U;
#line 54
  tab[20].reg = 16146U;
#line 54
  tab[20].val = 1U;
#line 54
  tab[20].mask = 255U;
#line 54
  tab[21].reg = 16163U;
#line 54
  tab[21].val = 44U;
#line 54
  tab[21].mask = 255U;
#line 54
  tab[22].reg = 16209U;
#line 54
  tab[22].val = 19U;
#line 54
  tab[22].mask = 255U;
#line 54
  tab[23].reg = 16210U;
#line 54
  tab[23].val = 1U;
#line 54
  tab[23].mask = 255U;
#line 54
  tab[24].reg = 16211U;
#line 54
  tab[24].val = 0U;
#line 54
  tab[24].mask = 255U;
#line 54
  tab[25].reg = 10214U;
#line 54
  tab[25].val = 20U;
#line 54
  tab[25].mask = 255U;
#line 54
  tab[26].reg = 10118U;
#line 54
  tab[26].val = 2U;
#line 54
  tab[26].mask = 7U;
#line 54
  tab[27].reg = 10119U;
#line 54
  tab[27].val = 64U;
#line 54
  tab[27].mask = 224U;
#line 54
  tab[28].reg = 10223U;
#line 54
  tab[28].val = 16U;
#line 54
  tab[28].mask = 24U;
#line 87
  if (cxd2820r_debug != 0) {
#line 87
    printk("<6>cxd2820r: %s: RF=%d BW=%d\n", "cxd2820r_set_frontend_t2", c->frequency,
           c->bandwidth_hz);
  } else {

  }
#line 89
  switch (c->bandwidth_hz) {
  case (u32 )5000000: 
#line 91
  bw_i = 0;
#line 92
  bw_param = 3U;
#line 93
  goto ldv_22992;
  case (u32 )6000000: 
#line 95
  bw_i = 1;
#line 96
  bw_param = 2U;
#line 97
  goto ldv_22992;
  case (u32 )7000000: 
#line 99
  bw_i = 2;
#line 100
  bw_param = 1U;
#line 101
  goto ldv_22992;
  case (u32 )8000000: 
#line 103
  bw_i = 3;
#line 104
  bw_param = 0U;
#line 105
  goto ldv_22992;
  default: ;
#line 107
  return (-22);
  }
  ldv_22992: 
#line 111
  ret = cxd2820r_gpio(fe);
#line 112
  if (ret != 0) {
#line 113
    goto error;
  } else {

  }
#line 116
  if ((unsigned long )fe->ops.tuner_ops.set_params != (unsigned long )((int (*)(struct dvb_frontend * ))0)) {
#line 117
    (*(fe->ops.tuner_ops.set_params))(fe);
  } else {

  }
#line 119
  if ((unsigned int )priv->delivery_system != 16U) {
#line 120
    i = 0;
#line 120
    goto ldv_23001;
    ldv_23000: 
#line 121
    ret = cxd2820r_wr_reg_mask(priv, tab[i].reg, (int )tab[i].val, (int )tab[i].mask);
#line 123
    if (ret != 0) {
#line 124
      goto error;
    } else {

    }
#line 120
    i = i + 1;
    ldv_23001: ;
#line 120
    if ((unsigned int )i <= 28U) {
#line 121
      goto ldv_23000;
    } else {

    }

  } else {

  }
#line 128
  priv->delivery_system = SYS_DVBT2;
#line 131
  if ((unsigned long )fe->ops.tuner_ops.get_if_frequency != (unsigned long )((int (*)(struct dvb_frontend * ,
                                                                                      u32 * ))0)) {
#line 132
    ret = (*(fe->ops.tuner_ops.get_if_frequency))(fe, & if_freq);
#line 133
    if (ret != 0) {
#line 134
      goto error;
    } else {

    }
  } else {
#line 136
    if_freq = 0U;
  }
#line 138
  if (cxd2820r_debug != 0) {
#line 138
    printk("<6>cxd2820r: %s: if_freq=%d\n", "cxd2820r_set_frontend_t2", if_freq);
  } else {

  }
#line 140
  num = (u64 )(if_freq / 1000U);
#line 141
  num = num * 16777216ULL;
#line 142
  if_ctl = cxd2820r_div_u64_round_closest(num, 41000U);
#line 143
  buf[0] = (u8 )(if_ctl >> 16);
#line 144
  buf[1] = (u8 )(if_ctl >> 8);
#line 145
  buf[2] = (u8 )if_ctl;
#line 147
  ret = cxd2820r_wr_regs(priv, 8374U, (u8 *)(& buf), 3);
#line 148
  if (ret != 0) {
#line 149
    goto error;
  } else {

  }
#line 151
  ret = cxd2820r_wr_regs(priv, 8351U, (u8 *)(& bw_params1) + (unsigned long )bw_i,
                         5);
#line 152
  if (ret != 0) {
#line 153
    goto error;
  } else {

  }
#line 155
  ret = cxd2820r_wr_reg_mask(priv, 8407U, (int )bw_param << 6U, 192);
#line 156
  if (ret != 0) {
#line 157
    goto error;
  } else {

  }
#line 159
  ret = cxd2820r_wr_reg(priv, 255U, 8);
#line 160
  if (ret != 0) {
#line 161
    goto error;
  } else {

  }
#line 163
  ret = cxd2820r_wr_reg(priv, 254U, 1);
#line 164
  if (ret != 0) {
#line 165
    goto error;
  } else {

  }
#line 167
  return (ret);
  error: ;
#line 169
  if (cxd2820r_debug != 0) {
#line 169
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_set_frontend_t2", ret);
  } else {

  }
#line 170
  return (ret);
}
}
#line 174 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_get_frontend_t2(struct dvb_frontend *fe , struct dvb_frontend_parameters *p ) 
{ 
  struct cxd2820r_priv *priv ;
  struct dtv_frontend_properties *c ;
  int ret ;
  u8 buf[2U] ;

  {
#line 177
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 178
  c = & fe->dtv_property_cache;
#line 182
  ret = cxd2820r_rd_regs(priv, 8284U, (u8 *)(& buf), 2);
#line 183
  if (ret != 0) {
#line 184
    goto error;
  } else {

  }
#line 186
  switch ((int )buf[0] & 7) {
  case 0: 
#line 188
  c->transmission_mode = TRANSMISSION_MODE_2K;
#line 189
  goto ldv_23013;
  case 1: 
#line 191
  c->transmission_mode = TRANSMISSION_MODE_8K;
#line 192
  goto ldv_23013;
  case 2: 
#line 194
  c->transmission_mode = TRANSMISSION_MODE_4K;
#line 195
  goto ldv_23013;
  case 3: 
#line 197
  c->transmission_mode = TRANSMISSION_MODE_1K;
#line 198
  goto ldv_23013;
  case 4: 
#line 200
  c->transmission_mode = TRANSMISSION_MODE_16K;
#line 201
  goto ldv_23013;
  case 5: 
#line 203
  c->transmission_mode = TRANSMISSION_MODE_32K;
#line 204
  goto ldv_23013;
  }
  ldv_23013: ;
#line 207
  switch (((int )buf[1] >> 4) & 7) {
  case 0: 
#line 209
  c->guard_interval = GUARD_INTERVAL_1_32;
#line 210
  goto ldv_23020;
  case 1: 
#line 212
  c->guard_interval = GUARD_INTERVAL_1_16;
#line 213
  goto ldv_23020;
  case 2: 
#line 215
  c->guard_interval = GUARD_INTERVAL_1_8;
#line 216
  goto ldv_23020;
  case 3: 
#line 218
  c->guard_interval = GUARD_INTERVAL_1_4;
#line 219
  goto ldv_23020;
  case 4: 
#line 221
  c->guard_interval = GUARD_INTERVAL_1_128;
#line 222
  goto ldv_23020;
  case 5: 
#line 224
  c->guard_interval = GUARD_INTERVAL_19_128;
#line 225
  goto ldv_23020;
  case 6: 
#line 227
  c->guard_interval = GUARD_INTERVAL_19_256;
#line 228
  goto ldv_23020;
  }
  ldv_23020: 
#line 231
  ret = cxd2820r_rd_regs(priv, 8795U, (u8 *)(& buf), 2);
#line 232
  if (ret != 0) {
#line 233
    goto error;
  } else {

  }
#line 235
  switch ((int )buf[0] & 7) {
  case 0: 
#line 237
  c->fec_inner = FEC_1_2;
#line 238
  goto ldv_23028;
  case 1: 
#line 240
  c->fec_inner = FEC_3_5;
#line 241
  goto ldv_23028;
  case 2: 
#line 243
  c->fec_inner = FEC_2_3;
#line 244
  goto ldv_23028;
  case 3: 
#line 246
  c->fec_inner = FEC_3_4;
#line 247
  goto ldv_23028;
  case 4: 
#line 249
  c->fec_inner = FEC_4_5;
#line 250
  goto ldv_23028;
  case 5: 
#line 252
  c->fec_inner = FEC_5_6;
#line 253
  goto ldv_23028;
  }
  ldv_23028: ;
#line 256
  switch ((int )buf[1] & 7) {
  case 0: 
#line 258
  c->modulation = QPSK;
#line 259
  goto ldv_23035;
  case 1: 
#line 261
  c->modulation = QAM_16;
#line 262
  goto ldv_23035;
  case 2: 
#line 264
  c->modulation = QAM_64;
#line 265
  goto ldv_23035;
  case 3: 
#line 267
  c->modulation = QAM_256;
#line 268
  goto ldv_23035;
  }
  ldv_23035: 
#line 271
  ret = cxd2820r_rd_reg(priv, 8373U, (u8 *)(& buf));
#line 272
  if (ret != 0) {
#line 273
    goto error;
  } else {

  }
#line 275
  switch (((int )buf[0] >> 4) & 1) {
  case 0: 
#line 277
  c->inversion = INVERSION_OFF;
#line 278
  goto ldv_23040;
  case 1: 
#line 280
  c->inversion = INVERSION_ON;
#line 281
  goto ldv_23040;
  }
  ldv_23040: ;
#line 284
  return (ret);
  error: ;
#line 286
  if (cxd2820r_debug != 0) {
#line 286
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_get_frontend_t2", ret);
  } else {

  }
#line 287
  return (ret);
}
}
#line 290 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_read_status_t2(struct dvb_frontend *fe , fe_status_t *status ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[1U] ;

  {
#line 292
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 295
  *status = 0;
#line 297
  ret = cxd2820r_rd_reg(priv, 8208U, (u8 *)(& buf));
#line 298
  if (ret != 0) {
#line 299
    goto error;
  } else {

  }
#line 301
  if (((int )buf[0] & 7) == 6) {
#line 302
    if (((int )buf[0] >> 5) & 1) {
#line 303
      *status = (fe_status_t )((unsigned int )*status | 31U);
    } else {
#line 306
      *status = (fe_status_t )((unsigned int )*status | 15U);
    }
  } else {

  }
#line 311
  if (cxd2820r_debug != 0) {
#line 311
    printk("<6>cxd2820r: %s: lock=%02x\n", "cxd2820r_read_status_t2", (int )buf[0]);
  } else {

  }
#line 313
  return (ret);
  error: ;
#line 315
  if (cxd2820r_debug != 0) {
#line 315
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_status_t2", ret);
  } else {

  }
#line 316
  return (ret);
}
}
#line 319 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_read_ber_t2(struct dvb_frontend *fe , u32 *ber ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[4U] ;
  unsigned int errbits ;

  {
#line 321
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 325
  *ber = 0U;
#line 328
  ret = cxd2820r_rd_regs(priv, 8249U, (u8 *)(& buf), 4);
#line 329
  if (ret != 0) {
#line 330
    goto error;
  } else {

  }
#line 332
  if (((int )buf[0] >> 4) & 1) {
#line 333
    errbits = (unsigned int )((((((int )buf[0] & 15) << 24) | ((int )buf[1] << 16)) | ((int )buf[2] << 8)) | (int )buf[3]);
#line 336
    if (errbits != 0U) {
#line 337
      *ber = (errbits * 64U) / 16588800U;
    } else {

    }
  } else {

  }
#line 340
  return (ret);
  error: ;
#line 342
  if (cxd2820r_debug != 0) {
#line 342
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_ber_t2", ret);
  } else {

  }
#line 343
  return (ret);
}
}
#line 346 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_read_signal_strength_t2(struct dvb_frontend *fe , u16 *strength ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[2U] ;
  u16 tmp ;

  {
#line 349
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 354
  ret = cxd2820r_rd_regs(priv, 8230U, (u8 *)(& buf), 2);
#line 355
  if (ret != 0) {
#line 356
    goto error;
  } else {

  }
#line 358
  tmp = (u16 )((int )((short )(((int )buf[0] & 15) << 8)) | (int )((short )buf[1]));
#line 359
  tmp = (unsigned int )(~ ((int )tmp)) & 4095U;
#line 362
  *strength = (u16 )(((int )tmp * 65535) / 4095);
#line 364
  return (ret);
  error: ;
#line 366
  if (cxd2820r_debug != 0) {
#line 366
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_signal_strength_t2", ret);
  } else {

  }
#line 367
  return (ret);
}
}
#line 370 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_read_snr_t2(struct dvb_frontend *fe , u16 *snr ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  u8 buf[2U] ;
  u16 tmp ;
  unsigned int tmp___0 ;

  {
#line 372
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 378
  ret = cxd2820r_rd_regs(priv, 8232U, (u8 *)(& buf), 2);
#line 379
  if (ret != 0) {
#line 380
    goto error;
  } else {

  }
#line 382
  tmp = (u16 )((int )((short )(((int )buf[0] & 15) << 8)) | (int )((short )buf[1]));
#line 384
  if ((unsigned int )tmp != 0U) {
#line 385
    tmp___0 = intlog10((u32 )tmp);
#line 385
    *snr = (u16 )((tmp___0 - 15151336U) / 167772U);
  } else {
#line 388
    *snr = 0U;
  }
#line 390
  if (cxd2820r_debug != 0) {
#line 390
    printk("<6>cxd2820r: %s: dBx10=%d val=%04x\n", "cxd2820r_read_snr_t2", (int )*snr,
           (int )tmp);
  } else {

  }
#line 392
  return (ret);
  error: ;
#line 394
  if (cxd2820r_debug != 0) {
#line 394
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_read_snr_t2", ret);
  } else {

  }
#line 395
  return (ret);
}
}
#line 398 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_read_ucblocks_t2(struct dvb_frontend *fe , u32 *ucblocks ) 
{ 


  {
#line 400
  *ucblocks = 0U;
#line 402
  return (0);
}
}
#line 405 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_sleep_t2(struct dvb_frontend *fe ) 
{ 
  struct cxd2820r_priv *priv ;
  int ret ;
  int i ;
  struct reg_val_mask tab[6U] ;

  {
#line 407
  priv = (struct cxd2820r_priv *)fe->demodulator_priv;
#line 409
  tab[0].reg = 255U;
#line 409
  tab[0].val = 31U;
#line 409
  tab[0].mask = 255U;
#line 409
  tab[1].reg = 133U;
#line 409
  tab[1].val = 0U;
#line 409
  tab[1].mask = 255U;
#line 409
  tab[2].reg = 136U;
#line 409
  tab[2].val = 1U;
#line 409
  tab[2].mask = 255U;
#line 409
  tab[3].reg = 8297U;
#line 409
  tab[3].val = 0U;
#line 409
  tab[3].mask = 255U;
#line 409
  tab[4].reg = 129U;
#line 409
  tab[4].val = 0U;
#line 409
  tab[4].mask = 255U;
#line 409
  tab[5].reg = 128U;
#line 409
  tab[5].val = 0U;
#line 409
  tab[5].mask = 255U;
#line 418
  if (cxd2820r_debug != 0) {
#line 418
    printk("<6>cxd2820r: %s\n", "cxd2820r_sleep_t2");
  } else {

  }
#line 420
  i = 0;
#line 420
  goto ldv_23098;
  ldv_23097: 
#line 421
  ret = cxd2820r_wr_reg_mask(priv, tab[i].reg, (int )tab[i].val, (int )tab[i].mask);
#line 423
  if (ret != 0) {
#line 424
    goto error;
  } else {

  }
#line 420
  i = i + 1;
  ldv_23098: ;
#line 420
  if ((unsigned int )i <= 5U) {
#line 421
    goto ldv_23097;
  } else {

  }
#line 427
  priv->delivery_system = SYS_UNDEFINED;
#line 429
  return (ret);
  error: ;
#line 431
  if (cxd2820r_debug != 0) {
#line 431
    printk("<6>cxd2820r: %s: failed:%d\n", "cxd2820r_sleep_t2", ret);
  } else {

  }
#line 432
  return (ret);
}
}
#line 435 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int cxd2820r_get_tune_settings_t2(struct dvb_frontend *fe , struct dvb_frontend_tune_settings *s ) 
{ 


  {
#line 438
  s->min_delay_ms = 1500;
#line 439
  s->step_size = (int )(fe->ops.info.frequency_stepsize * 2U);
#line 440
  s->max_drift = (int )(fe->ops.info.frequency_stepsize * 2U + 1U);
#line 442
  return (0);
}
}
#line 445 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
void ldv_mutex_lock_19(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 450
  ldv_mutex_lock_mutex_of_device(ldv_func_arg1);
#line 452
  mutex_lock(ldv_func_arg1);
#line 453
  return;
}
}
#line 455 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
int ldv_mutex_trylock_20(struct mutex *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___0 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 460
  tmp = mutex_trylock(ldv_func_arg1);
#line 460
  ldv_func_res = tmp;
#line 462
  tmp___0 = ldv_mutex_trylock_mutex_of_device(ldv_func_arg1);
#line 462
  return (tmp___0);
#line 464
  return (ldv_func_res);
}
}
#line 467 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/dscv/ri/32_7a/drivers/media/dvb/frontends/cxd2820r_t2.c.prepared"
void ldv_mutex_unlock_21(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 472
  ldv_mutex_unlock_mutex_of_device(ldv_func_arg1);
#line 474
  mutex_unlock(ldv_func_arg1);
#line 475
  return;
}
}
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
__inline static void ldv_error(void) 
{ 


  {
  LDV_ERROR: 
#line 12
  goto LDV_ERROR;
}
}
#line 25
extern int ldv_undef_int(void) ;
#line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 51
  return (exp);
}
}
#line 8 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
static int ldv_mutex_mutex_of_device  ;
#line 11 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_mutex_lock_interruptible_mutex_of_device(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 16
  if (ldv_mutex_mutex_of_device == 1) {

  } else {
#line 16
    ldv_error();
  }
#line 19
  nondetermined = ldv_undef_int();
#line 22
  if (nondetermined) {
#line 25
    ldv_mutex_mutex_of_device = 2;
#line 27
    return (0);
  } else {
#line 32
    return (-4);
  }
}
}
#line 37 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_mutex_lock_killable_mutex_of_device(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 42
  if (ldv_mutex_mutex_of_device == 1) {

  } else {
#line 42
    ldv_error();
  }
#line 45
  nondetermined = ldv_undef_int();
#line 48
  if (nondetermined) {
#line 51
    ldv_mutex_mutex_of_device = 2;
#line 53
    return (0);
  } else {
#line 58
    return (-4);
  }
}
}
#line 63 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
void ldv_mutex_lock_mutex_of_device(struct mutex *lock ) 
{ 


  {
#line 66
  if (ldv_mutex_mutex_of_device == 1) {

  } else {
#line 66
    ldv_error();
  }
#line 68
  ldv_mutex_mutex_of_device = 2;
#line 69
  return;
}
}
#line 72 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_mutex_trylock_mutex_of_device(struct mutex *lock ) 
{ 
  int is_mutex_held_by_another_thread ;

  {
#line 77
  if (ldv_mutex_mutex_of_device == 1) {

  } else {
#line 77
    ldv_error();
  }
#line 80
  is_mutex_held_by_another_thread = ldv_undef_int();
#line 83
  if (is_mutex_held_by_another_thread) {
#line 86
    return (0);
  } else {
#line 91
    ldv_mutex_mutex_of_device = 2;
#line 93
    return (1);
  }
}
}
#line 98 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_mutex_lock_mutex_of_device(atomic_t *cnt , struct mutex *lock ) 
{ 
  int atomic_value_after_dec ;

  {
#line 103
  if (ldv_mutex_mutex_of_device == 1) {

  } else {
#line 103
    ldv_error();
  }
#line 106
  atomic_value_after_dec = ldv_undef_int();
#line 109
  if (atomic_value_after_dec == 0) {
#line 112
    ldv_mutex_mutex_of_device = 2;
#line 114
    return (1);
  } else {

  }
#line 118
  return (0);
}
}
#line 123 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_mutex_is_locked_mutex_of_device(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 127
  if (ldv_mutex_mutex_of_device == 1) {
#line 130
    nondetermined = ldv_undef_int();
#line 133
    if (nondetermined) {
#line 136
      return (0);
    } else {
#line 141
      return (1);
    }
  } else {
#line 147
    return (1);
  }
}
}
#line 152 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
void ldv_mutex_unlock_mutex_of_device(struct mutex *lock ) 
{ 


  {
#line 155
  if (ldv_mutex_mutex_of_device == 2) {

  } else {
#line 155
    ldv_error();
  }
#line 157
  ldv_mutex_mutex_of_device = 1;
#line 158
  return;
}
}
#line 162 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
void ldv_initialize(void) 
{ 


  {
#line 165
  ldv_mutex_mutex_of_device = 1;
#line 166
  return;
}
}
#line 169 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/frontends/cxd2820r.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/23/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
void ldv_check_final_state(void) 
{ 


  {
#line 172
  if (ldv_mutex_mutex_of_device == 1) {

  } else {
#line 172
    ldv_error();
  }
#line 173
  return;
}
}
