/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 40 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
typedef __builtin_va_list __gnuc_va_list;
#line 102 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
typedef __gnuc_va_list va_list;
#line 58 "include/linux/compiler.h"
struct __anonstruct____missing_field_name_2 {
   unsigned long correct ;
   unsigned long incorrect ;
};
#line 58 "include/linux/compiler.h"
struct __anonstruct____missing_field_name_3 {
   unsigned long miss ;
   unsigned long hit ;
};
#line 58 "include/linux/compiler.h"
union __anonunion____missing_field_name_1 {
   struct __anonstruct____missing_field_name_2 __annonCompField1 ;
   struct __anonstruct____missing_field_name_3 __annonCompField2 ;
   unsigned long miss_hit[2] ;
};
#line 58 "include/linux/compiler.h"
struct ftrace_branch_data {
   char const   *func ;
   char const   *file ;
   unsigned int line ;
   union __anonunion____missing_field_name_1 __annonCompField3 ;
};
#line 17 "include/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 18 "include/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 20 "include/asm-generic/int-ll64.h"
typedef short __s16;
#line 21 "include/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 23 "include/asm-generic/int-ll64.h"
typedef int __s32;
#line 24 "include/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 27 "include/asm-generic/int-ll64.h"
typedef long long __s64;
#line 28 "include/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 40 "include/asm-generic/int-ll64.h"
typedef signed char s8;
#line 41 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 44 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 47 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 49 "include/asm-generic/int-ll64.h"
typedef long long s64;
#line 50 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
typedef unsigned short umode_t;
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_mode_t;
#line 12 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned long __kernel_nlink_t;
#line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_off_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_pid_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_uid_t;
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_gid_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned long __kernel_size_t;
#line 19 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_ssize_t;
#line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_time_t;
#line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_clock_t;
#line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_timer_t;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_clockid_t;
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long long __kernel_loff_t;
#line 41 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_uid_t __kernel_uid32_t;
#line 42 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_gid_t __kernel_gid32_t;
#line 18 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 21 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 23 "include/linux/types.h"
typedef __kernel_mode_t mode_t;
#line 24 "include/linux/types.h"
typedef __kernel_nlink_t nlink_t;
#line 25 "include/linux/types.h"
typedef __kernel_off_t off_t;
#line 26 "include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 31 "include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 36 "include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 37 "include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 50 "include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 59 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 64 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 74 "include/linux/types.h"
typedef __kernel_time_t time_t;
#line 107 "include/linux/types.h"
typedef __s32 int32_t;
#line 113 "include/linux/types.h"
typedef __u32 uint32_t;
#line 138 "include/linux/types.h"
typedef unsigned long sector_t;
#line 139 "include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 179 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 180 "include/linux/types.h"
typedef unsigned int fmode_t;
#line 190 "include/linux/types.h"
struct __anonstruct_atomic_t_7 {
   int volatile   counter ;
};
#line 190 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_7 atomic_t;
#line 195 "include/linux/types.h"
struct __anonstruct_atomic64_t_8 {
   long volatile   counter ;
};
#line 195 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_8 atomic64_t;
#line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
struct module;
#line 10 "include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 114 "include/linux/kernel.h"
struct completion;
#line 115
struct pt_regs;
#line 208
struct pid;
#line 7 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct task_struct;
#line 8
struct mm_struct;
#line 98 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 141 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/math_emu.h"
union __anonunion____missing_field_name_10 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion____missing_field_name_10 __annonCompField4 ;
};
#line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 182 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 182 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 184 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_13 {
   pgdval_t pgd ;
};
#line 184 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_13 pgd_t;
#line 272
struct page;
#line 285
struct file;
#line 302
struct seq_file;
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct __anonstruct____missing_field_name_18 {
   unsigned int a ;
   unsigned int b ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct __anonstruct____missing_field_name_19 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
union __anonunion____missing_field_name_17 {
   struct __anonstruct____missing_field_name_18 __annonCompField6 ;
   struct __anonstruct____missing_field_name_19 __annonCompField7 ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   union __anonunion____missing_field_name_17 __annonCompField8 ;
} __attribute__((__packed__)) ;
#line 144 "include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[((4096UL + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
};
#line 144 "include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 54 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
struct thread_struct;
#line 353
struct raw_spinlock;
#line 34 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ds.h"
struct ds_context;
#line 36
struct bts_tracer;
#line 10 "include/linux/personality.h"
struct exec_domain;
#line 88
struct map_segment;
#line 88 "include/linux/personality.h"
struct exec_domain {
   char const   *name ;
   void (*handler)(int  , struct pt_regs * ) ;
   unsigned char pers_low ;
   unsigned char pers_high ;
   unsigned long *signal_map ;
   unsigned long *signal_invmap ;
   struct map_segment *err_map ;
   struct map_segment *socktype_map ;
   struct map_segment *sockopt_map ;
   struct map_segment *af_map ;
   struct module *module ;
   struct exec_domain *next ;
};
#line 149 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 284 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20] ;
   u32 status ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_28 {
   u64 rip ;
   u64 rdp ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_29 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_27 {
   struct __anonstruct____missing_field_name_28 __annonCompField9 ;
   struct __anonstruct____missing_field_name_29 __annonCompField10 ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_30 {
   u32 padding1[12] ;
   u32 sw_reserved[12] ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_27 __annonCompField11 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32] ;
   u32 xmm_space[64] ;
   u32 padding[12] ;
   union __anonunion____missing_field_name_30 __annonCompField12 ;
} __attribute__((__aligned__(16))) ;
#line 335 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 355 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2] ;
   u64 reserved2[5] ;
} __attribute__((__packed__)) ;
#line 361 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
} __attribute__((__packed__, __aligned__(64))) ;
#line 367 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 405
struct kmem_cache;
#line 410 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long ip ;
   unsigned long fs ;
   unsigned long gs ;
   unsigned long debugreg0 ;
   unsigned long debugreg1 ;
   unsigned long debugreg2 ;
   unsigned long debugreg3 ;
   unsigned long debugreg6 ;
   unsigned long debugreg7 ;
   unsigned long cr2 ;
   unsigned long trap_no ;
   unsigned long error_code ;
   union thread_xstate *xstate ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   unsigned long debugctlmsr ;
   struct ds_context *ds_ctx ;
   unsigned int bts_ovfl_signal ;
};
#line 612 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_32 {
   unsigned long seg ;
};
#line 612 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_32 mm_segment_t;
#line 19 "include/linux/list.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 540
struct hlist_node;
#line 540 "include/linux/list.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 544 "include/linux/list.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 12 "include/linux/thread_info.h"
struct timespec;
#line 13
struct compat_timespec;
#line 18 "include/linux/thread_info.h"
struct __anonstruct____missing_field_name_34 {
   unsigned long arg0 ;
   unsigned long arg1 ;
   unsigned long arg2 ;
   unsigned long arg3 ;
};
#line 18 "include/linux/thread_info.h"
struct __anonstruct_futex_35 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
};
#line 18 "include/linux/thread_info.h"
struct __anonstruct_nanosleep_36 {
   clockid_t index ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};
#line 18
struct pollfd;
#line 18 "include/linux/thread_info.h"
struct __anonstruct_poll_37 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 18 "include/linux/thread_info.h"
union __anonunion____missing_field_name_33 {
   struct __anonstruct____missing_field_name_34 __annonCompField14 ;
   struct __anonstruct_futex_35 futex ;
   struct __anonstruct_nanosleep_36 nanosleep ;
   struct __anonstruct_poll_37 poll ;
};
#line 18 "include/linux/thread_info.h"
struct restart_block {
   long (*fn)(struct restart_block * ) ;
   union __anonunion____missing_field_name_33 __annonCompField15 ;
};
#line 23 "include/asm-generic/atomic.h"
typedef atomic64_t atomic_long_t;
#line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
struct thread_info {
   struct task_struct *task ;
   struct exec_domain *exec_domain ;
   __u32 flags ;
   __u32 status ;
   __u32 cpu ;
   int preempt_count ;
   mm_segment_t addr_limit ;
   struct restart_block restart_block ;
   void *sysenter_return ;
   int uaccess_err ;
};
#line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct raw_spinlock {
   unsigned int slock ;
};
#line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct __anonstruct_raw_rwlock_t_38 {
   unsigned int lock ;
};
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct __anonstruct_raw_rwlock_t_38 raw_rwlock_t;
#line 13 "include/linux/lockdep.h"
struct lockdep_map;
#line 7 "include/linux/stacktrace.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 35 "include/linux/lockdep.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__)) ;
#line 39 "include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8UL] ;
};
#line 48 "include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[1 + 3 * 4] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4] ;
   unsigned long contending_point[4] ;
};
#line 133 "include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 173 "include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned int class_idx : 13 ;
   unsigned int irq_context : 2 ;
   unsigned int trylock : 1 ;
   unsigned int read : 2 ;
   unsigned int check : 2 ;
   unsigned int hardirqs_off : 1 ;
};
#line 20 "include/linux/spinlock_types.h"
struct __anonstruct_spinlock_t_39 {
   raw_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 20 "include/linux/spinlock_types.h"
typedef struct __anonstruct_spinlock_t_39 spinlock_t;
#line 36 "include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_40 {
   raw_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 36 "include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_40 rwlock_t;
#line 14 "include/linux/time.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 62 "include/linux/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   uid_t uid ;
   gid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 28 "include/linux/wait.h"
struct __wait_queue;
#line 28 "include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;
#line 32 "include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *wait , unsigned int mode , int sync , void *key ) ;
   struct list_head task_list ;
};
#line 50 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 54 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 92 "include/linux/nodemask.h"
struct __anonstruct_nodemask_t_42 {
   unsigned long bits[(((unsigned long )(1 << 9) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
};
#line 92 "include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_42 nodemask_t;
#line 48 "include/linux/mutex.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct thread_info *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 69 "include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 17 "include/linux/rwsem.h"
struct rw_semaphore;
#line 31 "include/linux/rwsem-spinlock.h"
struct rw_semaphore {
   __s32 activity ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 50 "include/linux/notifier.h"
struct notifier_block {
   int (*notifier_call)(struct notifier_block * , unsigned long  , void * ) ;
   struct notifier_block *next ;
   int priority ;
};
#line 37 "include/linux/pm.h"
struct device;
#line 39 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 39 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 170 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *dev ) ;
   void (*complete)(struct device *dev ) ;
   int (*suspend)(struct device *dev ) ;
   int (*resume)(struct device *dev ) ;
   int (*freeze)(struct device *dev ) ;
   int (*thaw)(struct device *dev ) ;
   int (*poweroff)(struct device *dev ) ;
   int (*restore)(struct device *dev ) ;
   int (*suspend_noirq)(struct device *dev ) ;
   int (*resume_noirq)(struct device *dev ) ;
   int (*freeze_noirq)(struct device *dev ) ;
   int (*thaw_noirq)(struct device *dev ) ;
   int (*poweroff_noirq)(struct device *dev ) ;
   int (*restore_noirq)(struct device *dev ) ;
};
#line 308
enum dpm_state {
    DPM_INVALID = 0,
    DPM_ON = 1,
    DPM_PREPARING = 2,
    DPM_RESUMING = 3,
    DPM_SUSPENDING = 4,
    DPM_OFF = 5,
    DPM_OFF_IRQ = 6
} ;
#line 318 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int should_wakeup : 1 ;
   enum dpm_state status ;
   struct list_head entry ;
};
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_91 {
   void *ldt ;
   int size ;
   struct mutex lock ;
   void *vdso ;
};
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_91 mm_context_t;
#line 9 "include/linux/gfp.h"
struct vm_area_struct;
#line 45 "include/linux/kmod.h"
struct key;
#line 27 "include/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 28 "include/linux/elf.h"
typedef __u16 Elf64_Half;
#line 32 "include/linux/elf.h"
typedef __u32 Elf64_Word;
#line 33 "include/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 181 "include/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 181 "include/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 20 "include/linux/sysfs.h"
struct kobject;
#line 28 "include/linux/sysfs.h"
struct attribute {
   char const   *name ;
   struct module *owner ;
   mode_t mode ;
};
#line 34 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 77 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 82
struct sysfs_dirent;
#line 21 "include/linux/kref.h"
struct kref {
   atomic_t refcount ;
};
#line 59 "include/linux/kobject.h"
struct kset;
#line 59
struct kobj_type;
#line 59 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 107 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *kobj ) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
};
#line 113 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32] ;
   int envp_idx ;
   char buf[2048] ;
   int buflen ;
};
#line 120 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *kset , struct kobject *kobj ) ;
   char const   *(*name)(struct kset *kset , struct kobject *kobj ) ;
   int (*uevent)(struct kset *kset , struct kobject *kobj , struct kobj_uevent_env *env ) ;
};
#line 154 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
};
#line 32 "include/linux/moduleparam.h"
struct kernel_param;
#line 39
struct kparam_string;
#line 39
struct kparam_array;
#line 39 "include/linux/moduleparam.h"
union __anonunion____missing_field_name_101 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 39 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   unsigned int perm ;
   int (*set)(char const   *val , struct kernel_param *kp ) ;
   int (*get)(char *buffer , struct kernel_param *kp ) ;
   union __anonunion____missing_field_name_101 __annonCompField16 ;
};
#line 52 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 58 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int *num ;
   int (*set)(char const   *val , struct kernel_param *kp ) ;
   int (*get)(char *buffer , struct kernel_param *kp ) ;
   unsigned int elemsize ;
   void *elem ;
};
#line 19 "include/linux/marker.h"
struct marker;
#line 33 "include/linux/marker.h"
typedef void marker_probe_func(void *probe_private , void *call_private , char const   *fmt ,
                               va_list *args );
#line 36 "include/linux/marker.h"
struct marker_probe_closure {
   marker_probe_func *func ;
   void *probe_private ;
};
#line 41 "include/linux/marker.h"
struct marker {
   char const   *name ;
   char const   *format ;
   char state ;
   char ptype ;
   void (*call)(struct marker  const  *mdata , void *call_private  , ...) ;
   struct marker_probe_closure single ;
   struct marker_probe_closure *multi ;
   char const   *tp_name ;
   void *tp_cb ;
} __attribute__((__aligned__(8))) ;
#line 25 "include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 49 "include/linux/rcupdate.h"
struct rcu_head {
   struct rcu_head *next ;
   void (*func)(struct rcu_head *head ) ;
};
#line 21 "include/linux/tracepoint.h"
struct tracepoint;
#line 23 "include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   int state ;
   void **funcs ;
} __attribute__((__aligned__(32))) ;
#line 46 "include/linux/ktime.h"
union ktime {
   s64 tv64 ;
};
#line 59 "include/linux/ktime.h"
typedef union ktime ktime_t;
#line 10 "include/linux/timer.h"
struct tvec_base;
#line 12 "include/linux/timer.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   struct tvec_base *base ;
   void *start_site ;
   char start_comm[16] ;
   int start_pid ;
   struct lockdep_map lockdep_map ;
};
#line 238
struct hrtimer;
#line 239
enum hrtimer_restart;
#line 16 "include/linux/workqueue.h"
struct work_struct;
#line 25 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *work ) ;
   struct lockdep_map lockdep_map ;
};
#line 39 "include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
};
#line 15 "include/linux/slub_def.h"
enum stat_item {
    ALLOC_FASTPATH = 0,
    ALLOC_SLOWPATH = 1,
    FREE_FASTPATH = 2,
    FREE_SLOWPATH = 3,
    FREE_FROZEN = 4,
    FREE_ADD_PARTIAL = 5,
    FREE_REMOVE_PARTIAL = 6,
    ALLOC_FROM_PARTIAL = 7,
    ALLOC_SLAB = 8,
    ALLOC_REFILL = 9,
    FREE_SLAB = 10,
    CPUSLAB_FLUSH = 11,
    DEACTIVATE_FULL = 12,
    DEACTIVATE_EMPTY = 13,
    DEACTIVATE_TO_HEAD = 14,
    DEACTIVATE_TO_TAIL = 15,
    DEACTIVATE_REMOTE_FREES = 16,
    ORDER_FALLBACK = 17,
    NR_SLUB_STAT_ITEMS = 18
} ;
#line 36 "include/linux/slub_def.h"
struct kmem_cache_cpu {
   void **freelist ;
   struct page *page ;
   int node ;
   unsigned int offset ;
   unsigned int objsize ;
   unsigned int stat[NR_SLUB_STAT_ITEMS] ;
};
#line 47 "include/linux/slub_def.h"
struct kmem_cache_node {
   spinlock_t list_lock ;
   unsigned long nr_partial ;
   struct list_head partial ;
   atomic_long_t nr_slabs ;
   atomic_long_t total_objects ;
   struct list_head full ;
};
#line 63 "include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 70 "include/linux/slub_def.h"
struct kmem_cache {
   unsigned long flags ;
   int size ;
   int objsize ;
   int offset ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_node local_node ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   unsigned long min_partial ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1 << 9] ;
   struct kmem_cache_cpu *cpu_slab[4096] ;
};
#line 5 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/module.h"
struct mod_arch_specific {

};
#line 34 "include/linux/module.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 48 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module * , char const   * ,
                    size_t count ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 58
struct module_param_attrs;
#line 58 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 71
struct exception_table_entry;
#line 222
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2
} ;
#line 229
struct module_sect_attrs;
#line 229
struct module_notes_attrs;
#line 229 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[64UL - sizeof(unsigned long )] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   void *percpu ;
   char *args ;
   struct marker *markers ;
   unsigned int num_markers ;
   struct tracepoint *tracepoints ;
   unsigned int num_tracepoints ;
   char const   **trace_bprintk_fmt_start ;
   unsigned int num_trace_bprintk_fmt ;
   struct list_head modules_which_use_me ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   char *refptr ;
};
#line 646
struct device_driver;
#line 19 "include/linux/klist.h"
struct klist_node;
#line 39 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 16 "include/linux/semaphore.h"
struct semaphore {
   spinlock_t lock ;
   unsigned int count ;
   struct list_head wait_list ;
};
#line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct dma_map_ops;
#line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *acpi_handle ;
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 31 "include/linux/device.h"
struct device_private;
#line 33
struct driver_private;
#line 34
struct class;
#line 35
struct class_private;
#line 36
struct bus_type;
#line 37
struct bus_type_private;
#line 39 "include/linux/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type *bus , char *buf ) ;
   ssize_t (*store)(struct bus_type *bus , char const   *buf , size_t count ) ;
};
#line 52
struct device_attribute;
#line 52
struct driver_attribute;
#line 52 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device *dev , struct device_driver *drv ) ;
   int (*uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
   int (*probe)(struct device *dev ) ;
   int (*remove)(struct device *dev ) ;
   void (*shutdown)(struct device *dev ) ;
   int (*suspend)(struct device *dev , pm_message_t state ) ;
   int (*suspend_late)(struct device *dev , pm_message_t state ) ;
   int (*resume_early)(struct device *dev ) ;
   int (*resume)(struct device *dev ) ;
   struct dev_pm_ops *pm ;
   struct bus_type_private *p ;
};
#line 123 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   int (*probe)(struct device *dev ) ;
   int (*remove)(struct device *dev ) ;
   void (*shutdown)(struct device *dev ) ;
   int (*suspend)(struct device *dev , pm_message_t state ) ;
   int (*resume)(struct device *dev ) ;
   struct attribute_group **groups ;
   struct dev_pm_ops *pm ;
   struct driver_private *p ;
};
#line 156 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver *driver , char *buf ) ;
   ssize_t (*store)(struct device_driver *driver , char const   *buf , size_t count ) ;
};
#line 188
struct class_attribute;
#line 188 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
   void (*class_release)(struct class *class ) ;
   void (*dev_release)(struct device *dev ) ;
   int (*suspend)(struct device *dev , pm_message_t state ) ;
   int (*resume)(struct device *dev ) ;
   struct dev_pm_ops *pm ;
   struct class_private *p ;
};
#line 208
struct device_type;
#line 241 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *class , char *buf ) ;
   ssize_t (*store)(struct class *class , char const   *buf , size_t count ) ;
};
#line 288 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
   void (*release)(struct device *dev ) ;
   int (*suspend)(struct device *dev , pm_message_t state ) ;
   int (*resume)(struct device *dev ) ;
   struct dev_pm_ops *pm ;
};
#line 301 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *dev , struct device_attribute *attr , char *buf ) ;
   ssize_t (*store)(struct device *dev , struct device_attribute *attr , char const   *buf ,
                    size_t count ) ;
};
#line 361 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 370
struct dma_coherent_mem;
#line 370 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type *type ;
   struct semaphore sem ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *driver_data ;
   void *platform_data ;
   struct dev_pm_info power ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   dev_t devt ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device *dev ) ;
};
#line 30 "include/linux/backlight.h"
struct backlight_device;
#line 31
struct fb_info;
#line 33 "include/linux/backlight.h"
struct backlight_ops {
   unsigned int options ;
   int (*update_status)(struct backlight_device * ) ;
   int (*get_brightness)(struct backlight_device * ) ;
   int (*check_fb)(struct fb_info * ) ;
};
#line 49 "include/linux/backlight.h"
struct backlight_properties {
   int brightness ;
   int max_brightness ;
   int power ;
   int fb_blank ;
   unsigned int state ;
};
#line 73 "include/linux/backlight.h"
struct backlight_device {
   struct backlight_properties props ;
   struct mutex update_lock ;
   struct mutex ops_lock ;
   struct backlight_ops *ops ;
   struct notifier_block fb_notif ;
   struct device dev ;
};
#line 12 "include/linux/seq_file.h"
struct path;
#line 13
struct inode;
#line 14
struct dentry;
#line 16 "include/linux/seq_file.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations  const  *op ;
   void *private ;
};
#line 29 "include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file *m , loff_t *pos ) ;
   void (*stop)(struct seq_file *m , void *v ) ;
   void *(*next)(struct seq_file *m , void *v , loff_t *pos ) ;
   int (*show)(struct seq_file *m , void *v ) ;
};
#line 95 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   unsigned long insn ;
   unsigned long fixup ;
};
#line 99 "include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2] ;
};
#line 99 "include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 100 "include/linux/rbtree.h"
struct rb_node {
   unsigned long rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(sizeof(long )))) ;
#line 110 "include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 14 "include/linux/prio_tree.h"
struct prio_tree_node;
#line 14 "include/linux/prio_tree.h"
struct raw_prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
};
#line 20 "include/linux/prio_tree.h"
struct prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
   unsigned long start ;
   unsigned long last ;
};
#line 28 "include/linux/prio_tree.h"
struct prio_tree_root {
   struct prio_tree_node *prio_tree_node ;
   unsigned short index_bits ;
   unsigned short raw ;
};
#line 23 "include/linux/mm_types.h"
struct address_space;
#line 28 "include/linux/mm_types.h"
typedef atomic_long_t mm_counter_t;
#line 40 "include/linux/mm_types.h"
struct __anonstruct____missing_field_name_106 {
   u16 inuse ;
   u16 objects ;
};
#line 40 "include/linux/mm_types.h"
union __anonunion____missing_field_name_105 {
   atomic_t _mapcount ;
   struct __anonstruct____missing_field_name_106 __annonCompField17 ;
};
#line 40 "include/linux/mm_types.h"
struct __anonstruct____missing_field_name_108 {
   unsigned long private ;
   struct address_space *mapping ;
};
#line 40 "include/linux/mm_types.h"
union __anonunion____missing_field_name_107 {
   struct __anonstruct____missing_field_name_108 __annonCompField19 ;
   spinlock_t ptl ;
   struct kmem_cache *slab ;
   struct page *first_page ;
};
#line 40 "include/linux/mm_types.h"
union __anonunion____missing_field_name_109 {
   unsigned long index ;
   void *freelist ;
};
#line 40 "include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   atomic_t _count ;
   union __anonunion____missing_field_name_105 __annonCompField18 ;
   union __anonunion____missing_field_name_107 __annonCompField20 ;
   union __anonunion____missing_field_name_109 __annonCompField21 ;
   struct list_head lru ;
};
#line 126 "include/linux/mm_types.h"
struct __anonstruct_vm_set_111 {
   struct list_head list ;
   void *parent ;
   struct vm_area_struct *head ;
};
#line 126 "include/linux/mm_types.h"
union __anonunion_shared_110 {
   struct __anonstruct_vm_set_111 vm_set ;
   struct raw_prio_tree_node prio_tree_node ;
};
#line 126
struct anon_vma;
#line 126
struct vm_operations_struct;
#line 126
struct mempolicy;
#line 126 "include/linux/mm_types.h"
struct vm_area_struct {
   struct mm_struct *vm_mm ;
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct rb_node vm_rb ;
   union __anonunion_shared_110 shared ;
   struct list_head anon_vma_node ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   unsigned long vm_truncate_count ;
   struct mempolicy *vm_policy ;
};
#line 183 "include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 188 "include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 194
struct mmu_notifier_mm;
#line 194 "include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file *filp , unsigned long addr , unsigned long len ,
                                      unsigned long pgoff , unsigned long flags ) ;
   void (*unmap_area)(struct mm_struct *mm , unsigned long addr ) ;
   unsigned long mmap_base ;
   unsigned long task_size ;
   unsigned long cached_hole_size ;
   unsigned long free_area_cache ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   int map_count ;
   struct rw_semaphore mmap_sem ;
   spinlock_t page_table_lock ;
   struct list_head mmlist ;
   mm_counter_t _file_rss ;
   mm_counter_t _anon_rss ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long reserved_vm ;
   unsigned long def_flags ;
   unsigned long nr_ptes ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[2 * ((2 + 19) + 1)] ;
   cpumask_t cpu_vm_mask ;
   mm_context_t context ;
   unsigned int faultstamp ;
   unsigned int token_priority ;
   unsigned int last_interval ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct hlist_head ioctx_list ;
   struct task_struct *owner ;
   struct file *exe_file ;
   unsigned long num_exe_file_vmas ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
};
#line 7 "include/asm-generic/cputime.h"
typedef unsigned long cputime_t;
#line 117 "include/linux/sem.h"
struct sem_undo_list;
#line 130 "include/linux/sem.h"
struct sem_undo_list {
   atomic_t refcnt ;
   spinlock_t lock ;
   struct list_head list_proc ;
};
#line 136 "include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 10 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct siginfo;
#line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_112 {
   unsigned long sig[64 / 64] ;
};
#line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_112 sigset_t;
#line 17 "include/asm-generic/signal.h"
typedef void __signalfn_t(int  );
#line 18 "include/asm-generic/signal.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "include/asm-generic/signal.h"
typedef void __restorefn_t(void);
#line 21 "include/asm-generic/signal.h"
typedef __restorefn_t *__sigrestore_t;
#line 167 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 174 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 7 "include/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 7 "include/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__kill_114 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__timer_115 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[sizeof(__kernel_uid32_t ) - sizeof(int )] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__rt_116 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__sigchld_117 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__sigfault_118 {
   void *_addr ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_119 {
   long _band ;
   int _fd ;
};
#line 40 "include/asm-generic/siginfo.h"
union __anonunion__sifields_113 {
   int _pad[(128UL - 4UL * sizeof(int )) / sizeof(int )] ;
   struct __anonstruct__kill_114 _kill ;
   struct __anonstruct__timer_115 _timer ;
   struct __anonstruct__rt_116 _rt ;
   struct __anonstruct__sigchld_117 _sigchld ;
   struct __anonstruct__sigfault_118 _sigfault ;
   struct __anonstruct__sigpoll_119 _sigpoll ;
};
#line 40 "include/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_113 _sifields ;
};
#line 40 "include/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 14 "include/linux/signal.h"
struct user_struct;
#line 24 "include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 5 "include/linux/path.h"
struct vfsmount;
#line 7 "include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 6 "include/linux/pid.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 50
struct pid_namespace;
#line 50 "include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 57 "include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[PIDTYPE_MAX] ;
   struct rcu_head rcu ;
   struct upid numbers[1] ;
};
#line 69 "include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 97 "include/linux/proportions.h"
struct prop_local_single {
   unsigned long events ;
   unsigned long period ;
   int shift ;
   spinlock_t lock ;
};
#line 10 "include/linux/seccomp.h"
struct __anonstruct_seccomp_t_122 {
   int mode ;
};
#line 10 "include/linux/seccomp.h"
typedef struct __anonstruct_seccomp_t_122 seccomp_t;
#line 80 "include/linux/plist.h"
struct plist_head {
   struct list_head prio_list ;
   struct list_head node_list ;
   spinlock_t *lock ;
};
#line 88 "include/linux/plist.h"
struct plist_node {
   int prio ;
   struct plist_head plist ;
};
#line 38 "include/linux/rtmutex.h"
struct rt_mutex_waiter;
#line 43 "include/linux/resource.h"
struct rlimit {
   unsigned long rlim_cur ;
   unsigned long rlim_max ;
};
#line 26 "include/linux/hrtimer.h"
struct hrtimer_clock_base;
#line 27
struct hrtimer_cpu_base;
#line 40
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 100 "include/linux/hrtimer.h"
struct hrtimer {
   struct rb_node node ;
   ktime_t _expires ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   struct list_head cb_entry ;
   int start_pid ;
   void *start_site ;
   char start_comm[16] ;
};
#line 139 "include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   clockid_t index ;
   struct rb_root active ;
   struct rb_node *first ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 168 "include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   spinlock_t lock ;
   struct hrtimer_clock_base clock_base[2] ;
   ktime_t expires_next ;
   int hres_active ;
   unsigned long nr_events ;
};
#line 11 "include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 18 "include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 948 "include/linux/sysctl.h"
struct nsproxy;
#line 29 "include/linux/key.h"
typedef int32_t key_serial_t;
#line 32 "include/linux/key.h"
typedef uint32_t key_perm_t;
#line 76
struct signal_struct;
#line 77
struct cred;
#line 79
struct key_type;
#line 81
struct keyring_list;
#line 124
struct key_user;
#line 124 "include/linux/key.h"
union __anonunion_type_data_177 {
   struct list_head link ;
   unsigned long x[2] ;
   void *p[2] ;
};
#line 124 "include/linux/key.h"
union __anonunion_payload_178 {
   unsigned long value ;
   void *data ;
   struct keyring_list *subscriptions ;
};
#line 124 "include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   struct rb_node serial_node ;
   struct key_type *type ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   time_t expiry ;
   uid_t uid ;
   gid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   char *description ;
   union __anonunion_type_data_177 type_data ;
   union __anonunion_payload_178 payload ;
};
#line 29 "include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   gid_t small_block[32] ;
   gid_t *blocks[0] ;
};
#line 81 "include/linux/cred.h"
struct thread_group_cred {
   atomic_t usage ;
   pid_t tgid ;
   spinlock_t lock ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct rcu_head rcu ;
};
#line 114 "include/linux/cred.h"
struct cred {
   atomic_t usage ;
   uid_t uid ;
   gid_t gid ;
   uid_t suid ;
   gid_t sgid ;
   uid_t euid ;
   gid_t egid ;
   uid_t fsuid ;
   gid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   struct thread_group_cred *tgcred ;
   void *security ;
   struct user_struct *user ;
   struct group_info *group_info ;
   struct rcu_head rcu ;
};
#line 96 "include/linux/sched.h"
struct futex_pi_state;
#line 97
struct robust_list_head;
#line 98
struct bio;
#line 100
struct fs_struct;
#line 144
struct cfs_rq;
#line 145
struct task_group;
#line 345
struct user_namespace;
#line 58 "include/linux/aio_abi.h"
struct io_event {
   __u64 data ;
   __u64 obj ;
   __s64 res ;
   __s64 res2 ;
};
#line 16 "include/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 15 "include/linux/aio.h"
struct kioctx;
#line 87 "include/linux/aio.h"
union __anonunion_ki_obj_180 {
   void *user ;
   struct task_struct *tsk ;
};
#line 87 "include/linux/aio.h"
struct kiocb {
   struct list_head ki_run_list ;
   unsigned long ki_flags ;
   int ki_users ;
   unsigned int ki_key ;
   struct file *ki_filp ;
   struct kioctx *ki_ctx ;
   int (*ki_cancel)(struct kiocb * , struct io_event * ) ;
   ssize_t (*ki_retry)(struct kiocb * ) ;
   void (*ki_dtor)(struct kiocb * ) ;
   union __anonunion_ki_obj_180 ki_obj ;
   __u64 ki_user_data ;
   wait_queue_t ki_wait ;
   loff_t ki_pos ;
   void *private ;
   unsigned short ki_opcode ;
   size_t ki_nbytes ;
   char *ki_buf ;
   size_t ki_left ;
   struct iovec ki_inline_vec ;
   struct iovec *ki_iovec ;
   unsigned long ki_nr_segs ;
   unsigned long ki_cur_seg ;
   struct list_head ki_list ;
   struct file *ki_eventfd ;
};
#line 167 "include/linux/aio.h"
struct aio_ring_info {
   unsigned long mmap_base ;
   unsigned long mmap_size ;
   struct page **ring_pages ;
   spinlock_t ring_lock ;
   long nr_pages ;
   unsigned int nr ;
   unsigned int tail ;
   struct page *internal_pages[8] ;
};
#line 180 "include/linux/aio.h"
struct kioctx {
   atomic_t users ;
   int dead ;
   struct mm_struct *mm ;
   unsigned long user_id ;
   struct hlist_node list ;
   wait_queue_head_t wait ;
   spinlock_t ctx_lock ;
   int reqs_active ;
   struct list_head active_reqs ;
   struct list_head run_list ;
   unsigned int max_reqs ;
   struct aio_ring_info ring_info ;
   struct delayed_work wq ;
   struct rcu_head rcu_head ;
};
#line 441 "include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 448 "include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 467 "include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 494 "include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   spinlock_t lock ;
};
#line 507
struct tty_struct;
#line 507
struct taskstats;
#line 507
struct tty_audit_buf;
#line 507 "include/linux/sched.h"
struct signal_struct {
   atomic_t count ;
   atomic_t live ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   cputime_t it_prof_expires ;
   cputime_t it_virt_expires ;
   cputime_t it_prof_incr ;
   cputime_t it_virt_incr ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
};
#line 639 "include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t files ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   uid_t uid ;
   struct user_namespace *user_ns ;
   struct task_group *tg ;
   struct kobject kobj ;
   struct work_struct work ;
};
#line 684
struct backing_dev_info;
#line 685
struct reclaim_state;
#line 688 "include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
   unsigned int bkl_count ;
};
#line 704 "include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 749
enum cpu_idle_type {
    CPU_IDLE = 0,
    CPU_NOT_IDLE = 1,
    CPU_NEWLY_IDLE = 2,
    CPU_MAX_IDLE_TYPES = 3
} ;
#line 825 "include/linux/sched.h"
struct sched_group {
   struct sched_group *next ;
   unsigned int __cpu_power ;
   u32 reciprocal_cpu_power ;
   unsigned long cpumask[] ;
};
#line 848
enum sched_domain_level {
    SD_LV_NONE = 0,
    SD_LV_SIBLING = 1,
    SD_LV_MC = 2,
    SD_LV_CPU = 3,
    SD_LV_NODE = 4,
    SD_LV_ALLNODES = 5,
    SD_LV_MAX = 6
} ;
#line 866 "include/linux/sched.h"
struct sched_domain {
   struct sched_domain *parent ;
   struct sched_domain *child ;
   struct sched_group *groups ;
   unsigned long min_interval ;
   unsigned long max_interval ;
   unsigned int busy_factor ;
   unsigned int imbalance_pct ;
   unsigned int cache_nice_tries ;
   unsigned int busy_idx ;
   unsigned int idle_idx ;
   unsigned int newidle_idx ;
   unsigned int wake_idx ;
   unsigned int forkexec_idx ;
   int flags ;
   enum sched_domain_level level ;
   unsigned long last_balance ;
   unsigned int balance_interval ;
   unsigned int nr_balance_failed ;
   u64 last_update ;
   unsigned int lb_count[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_failed[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_balanced[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_imbalance[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_gained[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_hot_gained[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_nobusyg[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_nobusyq[CPU_MAX_IDLE_TYPES] ;
   unsigned int alb_count ;
   unsigned int alb_failed ;
   unsigned int alb_pushed ;
   unsigned int sbe_count ;
   unsigned int sbe_balanced ;
   unsigned int sbe_pushed ;
   unsigned int sbf_count ;
   unsigned int sbf_balanced ;
   unsigned int sbf_pushed ;
   unsigned int ttwu_wake_remote ;
   unsigned int ttwu_move_affine ;
   unsigned int ttwu_move_balance ;
   char *name ;
   unsigned long span[] ;
};
#line 958
struct io_context;
#line 967
struct audit_context;
#line 969
struct pipe_inode_info;
#line 972
struct rq;
#line 975 "include/linux/sched.h"
struct sched_class {
   struct sched_class  const  *next ;
   void (*enqueue_task)(struct rq *rq , struct task_struct *p , int wakeup ) ;
   void (*dequeue_task)(struct rq *rq , struct task_struct *p , int sleep ) ;
   void (*yield_task)(struct rq *rq ) ;
   void (*check_preempt_curr)(struct rq *rq , struct task_struct *p , int sync ) ;
   struct task_struct *(*pick_next_task)(struct rq *rq ) ;
   void (*put_prev_task)(struct rq *rq , struct task_struct *p ) ;
   int (*select_task_rq)(struct task_struct *p , int sync ) ;
   unsigned long (*load_balance)(struct rq *this_rq , int this_cpu , struct rq *busiest ,
                                 unsigned long max_load_move , struct sched_domain *sd ,
                                 enum cpu_idle_type idle , int *all_pinned , int *this_best_prio ) ;
   int (*move_one_task)(struct rq *this_rq , int this_cpu , struct rq *busiest , struct sched_domain *sd ,
                        enum cpu_idle_type idle ) ;
   void (*pre_schedule)(struct rq *this_rq , struct task_struct *task ) ;
   int (*needs_post_schedule)(struct rq *this_rq ) ;
   void (*post_schedule)(struct rq *this_rq ) ;
   void (*task_wake_up)(struct rq *this_rq , struct task_struct *task ) ;
   void (*set_cpus_allowed)(struct task_struct *p , struct cpumask  const  *newmask ) ;
   void (*rq_online)(struct rq *rq ) ;
   void (*rq_offline)(struct rq *rq ) ;
   void (*set_curr_task)(struct rq *rq ) ;
   void (*task_tick)(struct rq *rq , struct task_struct *p , int queued ) ;
   void (*task_new)(struct rq *rq , struct task_struct *p ) ;
   void (*switched_from)(struct rq *this_rq , struct task_struct *task , int running ) ;
   void (*switched_to)(struct rq *this_rq , struct task_struct *task , int running ) ;
   void (*prio_changed)(struct rq *this_rq , struct task_struct *task , int oldprio ,
                        int running ) ;
   void (*moved_group)(struct task_struct *p ) ;
};
#line 1026 "include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   unsigned long inv_weight ;
};
#line 1040 "include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 last_wakeup ;
   u64 avg_overlap ;
   u64 start_runtime ;
   u64 avg_wakeup ;
   u64 nr_migrations ;
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_forced2_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
};
#line 1100
struct rt_rq;
#line 1100 "include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned int time_slice ;
   int nr_cpus_allowed ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1116
struct linux_binfmt;
#line 1116
struct files_struct;
#line 1116
struct irqaction;
#line 1116
struct css_set;
#line 1116
struct compat_robust_list_head;
#line 1116
struct ftrace_ret_stack;
#line 1116 "include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   int lock_depth ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct hlist_head preempt_notifiers ;
   unsigned char fpu_counter ;
   s8 oomkilladj ;
   unsigned int btrace_seq ;
   unsigned int policy ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct linux_binfmt *binfmt ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int personality ;
   unsigned int did_exec : 1 ;
   unsigned int in_execve : 1 ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct bts_tracer *bts ;
   void *bts_buffer ;
   size_t bts_size ;
   struct pid_link pids[PIDTYPE_MAX] ;
   struct list_head thread_group ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   cputime_t prev_utime ;
   cputime_t prev_stime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   struct mutex cred_exec_mutex ;
   char comm[16] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *priv ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct audit_context *audit_context ;
   uid_t loginuid ;
   unsigned int sessionid ;
   seccomp_t seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   struct irqaction *irqaction ;
   spinlock_t pi_lock ;
   struct plist_head pi_waiters ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   int hardirqs_enabled ;
   unsigned long hardirq_enable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_disable_event ;
   int softirqs_enabled ;
   unsigned long softirq_disable_ip ;
   unsigned int softirq_disable_event ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_enable_event ;
   int hardirq_context ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48UL] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio *bio_list ;
   struct bio **bio_tail ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   int cpuset_mems_generation ;
   int cpuset_mem_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct mempolicy *mempolicy ;
   short il_next ;
   atomic_t fs_excl ;
   struct rcu_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   struct prop_local_single dirties ;
   int latency_record_count ;
   struct latency_record latency_record[32] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   struct list_head *scm_work_list ;
   int curr_ret_stack ;
   struct ftrace_ret_stack *ret_stack ;
   unsigned long long ftrace_timestamp ;
   atomic_t trace_overrun ;
   atomic_t tracing_graph_pause ;
   unsigned long trace ;
};
#line 152 "include/acpi/actypes.h"
typedef u64 acpi_size;
#line 153 "include/acpi/actypes.h"
typedef u64 acpi_io_address;
#line 368 "include/acpi/actypes.h"
typedef u32 acpi_status;
#line 370 "include/acpi/actypes.h"
typedef char *acpi_string;
#line 371 "include/acpi/actypes.h"
typedef void *acpi_handle;
#line 399 "include/acpi/actypes.h"
typedef unsigned long long acpi_integer;
#line 562 "include/acpi/actypes.h"
typedef u32 acpi_object_type;
#line 807 "include/acpi/actypes.h"
struct __anonstruct_integer_181 {
   acpi_object_type type ;
   acpi_integer value ;
};
#line 807 "include/acpi/actypes.h"
struct __anonstruct_string_182 {
   acpi_object_type type ;
   u32 length ;
   char *pointer ;
};
#line 807 "include/acpi/actypes.h"
struct __anonstruct_buffer_183 {
   acpi_object_type type ;
   u32 length ;
   u8 *pointer ;
};
#line 807 "include/acpi/actypes.h"
struct __anonstruct_package_184 {
   acpi_object_type type ;
   u32 count ;
   union acpi_object *elements ;
};
#line 807 "include/acpi/actypes.h"
struct __anonstruct_reference_185 {
   acpi_object_type type ;
   acpi_object_type actual_type ;
   acpi_handle handle ;
};
#line 807 "include/acpi/actypes.h"
struct __anonstruct_processor_186 {
   acpi_object_type type ;
   u32 proc_id ;
   acpi_io_address pblk_address ;
   u32 pblk_length ;
};
#line 807 "include/acpi/actypes.h"
struct __anonstruct_power_resource_187 {
   acpi_object_type type ;
   u32 system_level ;
   u32 resource_order ;
};
#line 807 "include/acpi/actypes.h"
union acpi_object {
   acpi_object_type type ;
   struct __anonstruct_integer_181 integer ;
   struct __anonstruct_string_182 string ;
   struct __anonstruct_buffer_183 buffer ;
   struct __anonstruct_package_184 package ;
   struct __anonstruct_reference_185 reference ;
   struct __anonstruct_processor_186 processor ;
   struct __anonstruct_power_resource_187 power_resource ;
};
#line 855 "include/acpi/actypes.h"
struct acpi_object_list {
   u32 count ;
   union acpi_object *pointer ;
};
#line 867 "include/acpi/actypes.h"
struct acpi_buffer {
   acpi_size length ;
   void *pointer ;
};
#line 994 "include/acpi/actypes.h"
struct acpi_compatible_id {
   char value[48] ;
};
#line 998 "include/acpi/actypes.h"
struct acpi_compatible_id_list {
   u32 count ;
   u32 size ;
   struct acpi_compatible_id id[1] ;
};
#line 65 "include/acpi/actbl.h"
#pragma pack(1)
#line 286
#pragma pack()
#line 89 "include/acpi/actbl1.h"
#pragma pack(1)
#line 1340
#pragma pack()
#line 137 "include/acpi/acrestyp.h"
#pragma pack(1)
#line 389
#pragma pack()
#line 37 "include/acpi/acpi_bus.h"
struct acpi_handle_list {
   u32 count ;
   acpi_handle handles[10] ;
};
#line 11 "include/linux/dcache.h"
struct nameidata;
#line 33 "include/linux/dcache.h"
struct qstr {
   unsigned int hash ;
   unsigned int len ;
   unsigned char const   *name ;
};
#line 89 "include/linux/dcache.h"
union __anonunion_d_u_189 {
   struct list_head d_child ;
   struct rcu_head d_rcu ;
};
#line 89
struct dentry_operations;
#line 89
struct super_block;
#line 89 "include/linux/dcache.h"
struct dentry {
   atomic_t d_count ;
   unsigned int d_flags ;
   spinlock_t d_lock ;
   int d_mounted ;
   struct inode *d_inode ;
   struct hlist_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct list_head d_lru ;
   union __anonunion_d_u_189 d_u ;
   struct list_head d_subdirs ;
   struct list_head d_alias ;
   unsigned long d_time ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   void *d_fsdata ;
   unsigned char d_iname[32] ;
};
#line 134 "include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , struct nameidata * ) ;
   int (*d_hash)(struct dentry * , struct qstr * ) ;
   int (*d_compare)(struct dentry * , struct qstr * , struct qstr * ) ;
   int (*d_delete)(struct dentry * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
};
#line 61 "include/linux/radix-tree.h"
struct radix_tree_node;
#line 61 "include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 14 "include/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3] ;
};
#line 321 "include/linux/fs.h"
struct export_operations;
#line 327
struct poll_table_struct;
#line 328
struct kstatfs;
#line 383 "include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   uid_t ia_uid ;
   gid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 106 "include/linux/quota.h"
struct if_dqblk {
   __u64 dqb_bhardlimit ;
   __u64 dqb_bsoftlimit ;
   __u64 dqb_curspace ;
   __u64 dqb_ihardlimit ;
   __u64 dqb_isoftlimit ;
   __u64 dqb_curinodes ;
   __u64 dqb_btime ;
   __u64 dqb_itime ;
   __u32 dqb_valid ;
};
#line 127 "include/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 50 "include/linux/dqblk_xfs.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8] ;
};
#line 137 "include/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 137 "include/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 143 "include/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 17 "include/linux/dqblk_qtree.h"
struct dquot;
#line 182 "include/linux/quota.h"
typedef __kernel_uid32_t qid_t;
#line 183 "include/linux/quota.h"
typedef long long qsize_t;
#line 197 "include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 212
struct quota_format_type;
#line 214 "include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 264 "include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   unsigned int dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   short dq_type ;
   struct mem_dqblk dq_dqb ;
};
#line 284 "include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *sb , int type ) ;
   int (*read_file_info)(struct super_block *sb , int type ) ;
   int (*write_file_info)(struct super_block *sb , int type ) ;
   int (*free_file_info)(struct super_block *sb , int type ) ;
   int (*read_dqblk)(struct dquot *dquot ) ;
   int (*commit_dqblk)(struct dquot *dquot ) ;
   int (*release_dqblk)(struct dquot *dquot ) ;
};
#line 295 "include/linux/quota.h"
struct dquot_operations {
   int (*initialize)(struct inode * , int  ) ;
   int (*drop)(struct inode * ) ;
   int (*alloc_space)(struct inode * , qsize_t  , int  ) ;
   int (*alloc_inode)(struct inode  const  * , qsize_t  ) ;
   int (*free_space)(struct inode * , qsize_t  ) ;
   int (*free_inode)(struct inode  const  * , qsize_t  ) ;
   int (*transfer)(struct inode * , struct iattr * ) ;
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   int (*reserve_space)(struct inode * , qsize_t  , int  ) ;
   int (*claim_space)(struct inode * , qsize_t  ) ;
   void (*release_rsv)(struct inode * , qsize_t  ) ;
   qsize_t (*get_reserved_space)(struct inode * ) ;
};
#line 321 "include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , char * , int  ) ;
   int (*quota_off)(struct super_block * , int  , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
   int (*set_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
   int (*get_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
   int (*set_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
};
#line 335 "include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 379 "include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2] ;
   struct mem_dqinfo info[2] ;
   struct quota_format_ops *ops[2] ;
};
#line 448 "include/linux/fs.h"
struct writeback_control;
#line 491 "include/linux/fs.h"
union __anonunion_arg_195 {
   char *buf ;
   void *data ;
};
#line 491 "include/linux/fs.h"
struct __anonstruct_read_descriptor_t_194 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_195 arg ;
   int error ;
};
#line 491 "include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_194 read_descriptor_t;
#line 504 "include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *page , struct writeback_control *wbc ) ;
   int (*readpage)(struct file * , struct page * ) ;
   void (*sync_page)(struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page *page ) ;
   int (*readpages)(struct file *filp , struct address_space *mapping , struct list_head *pages ,
                    unsigned int nr_pages ) ;
   int (*write_begin)(struct file * , struct address_space *mapping , loff_t pos ,
                      unsigned int len , unsigned int flags , struct page **pagep ,
                      void **fsdata ) ;
   int (*write_end)(struct file * , struct address_space *mapping , loff_t pos , unsigned int len ,
                    unsigned int copied , struct page *page , void *fsdata ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned long  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  *iov , loff_t offset ,
                        unsigned long nr_segs ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , read_descriptor_t * , unsigned long  ) ;
};
#line 554 "include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct prio_tree_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   spinlock_t i_mmap_lock ;
   unsigned int truncate_count ;
   unsigned long nrpages ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   struct address_space *assoc_mapping ;
} __attribute__((__aligned__(sizeof(long )))) ;
#line 578
struct hd_struct;
#line 578
struct gendisk;
#line 578 "include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   int bd_openers ;
   struct mutex bd_mutex ;
   struct semaphore bd_mount_sem ;
   struct list_head bd_inodes ;
   void *bd_holder ;
   int bd_holders ;
   struct list_head bd_holder_list ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct list_head bd_list ;
   struct backing_dev_info *bd_inode_backing_dev_info ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 654
struct inode_operations;
#line 654
struct file_operations;
#line 654
struct file_lock;
#line 654
struct cdev;
#line 654 "include/linux/fs.h"
union __anonunion____missing_field_name_196 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 654
struct dnotify_struct;
#line 654 "include/linux/fs.h"
struct inode {
   struct hlist_node i_hash ;
   struct list_head i_list ;
   struct list_head i_sb_list ;
   struct list_head i_dentry ;
   unsigned long i_ino ;
   atomic_t i_count ;
   unsigned int i_nlink ;
   uid_t i_uid ;
   gid_t i_gid ;
   dev_t i_rdev ;
   u64 i_version ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   unsigned int i_blkbits ;
   blkcnt_t i_blocks ;
   unsigned short i_bytes ;
   umode_t i_mode ;
   spinlock_t i_lock ;
   struct mutex i_mutex ;
   struct rw_semaphore i_alloc_sem ;
   struct inode_operations  const  *i_op ;
   struct file_operations  const  *i_fop ;
   struct super_block *i_sb ;
   struct file_lock *i_flock ;
   struct address_space *i_mapping ;
   struct address_space i_data ;
   struct dquot *i_dquot[2] ;
   struct list_head i_devices ;
   union __anonunion____missing_field_name_196 __annonCompField22 ;
   int i_cindex ;
   __u32 i_generation ;
   unsigned long i_dnotify_mask ;
   struct dnotify_struct *i_dnotify ;
   struct list_head inotify_watches ;
   struct mutex inotify_mutex ;
   unsigned long i_state ;
   unsigned long dirtied_when ;
   unsigned int i_flags ;
   atomic_t i_writecount ;
   void *i_security ;
   void *i_private ;
};
#line 809 "include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   uid_t uid ;
   uid_t euid ;
   int signum ;
};
#line 820 "include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   int mmap_miss ;
   loff_t prev_pos ;
};
#line 843 "include/linux/fs.h"
union __anonunion_f_u_197 {
   struct list_head fu_list ;
   struct rcu_head fu_rcuhead ;
};
#line 843 "include/linux/fs.h"
struct file {
   union __anonunion_f_u_197 f_u ;
   struct path f_path ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct address_space *f_mapping ;
   unsigned long f_mnt_write_state ;
};
#line 962 "include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 964 "include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 969 "include/linux/fs.h"
struct lock_manager_operations {
   int (*fl_compare_owner)(struct file_lock * , struct file_lock * ) ;
   void (*fl_notify)(struct file_lock * ) ;
   int (*fl_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
   void (*fl_break)(struct file_lock * ) ;
   int (*fl_mylease)(struct file_lock * , struct file_lock * ) ;
   int (*fl_change)(struct file_lock ** , int  ) ;
};
#line 8 "include/linux/nfs_fs_i.h"
struct nlm_lockowner;
#line 13 "include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 19
struct nfs4_lock_state;
#line 20 "include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 991 "include/linux/fs.h"
struct fasync_struct;
#line 991 "include/linux/fs.h"
struct __anonstruct_afs_199 {
   struct list_head link ;
   int state ;
};
#line 991 "include/linux/fs.h"
union __anonunion_fl_u_198 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_199 afs ;
};
#line 991 "include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned char fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_198 fl_u ;
};
#line 1215 "include/linux/fs.h"
struct fasync_struct {
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
};
#line 1250
struct file_system_type;
#line 1250
struct super_operations;
#line 1250
struct xattr_handler;
#line 1250
struct mtd_info;
#line 1250 "include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned long s_blocksize ;
   unsigned char s_blocksize_bits ;
   unsigned char s_dirt ;
   unsigned long long s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   struct mutex s_lock ;
   int s_count ;
   int s_need_sync_fs ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct list_head s_inodes ;
   struct list_head s_dirty ;
   struct list_head s_io ;
   struct list_head s_more_io ;
   struct hlist_head s_anon ;
   struct list_head s_files ;
   struct list_head s_dentry_lru ;
   int s_nr_dentry_unused ;
   struct block_device *s_bdev ;
   struct mtd_info *s_mtd ;
   struct list_head s_instances ;
   struct quota_info s_dquot ;
   int s_frozen ;
   wait_queue_head_t s_wait_unfrozen ;
   char s_id[32] ;
   void *s_fs_info ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   u32 s_time_gran ;
   char *s_subtype ;
   char *s_options ;
   struct list_head s_async_list ;
};
#line 1376 "include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1428 "include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*readdir)(struct file * , void * , int (*)(void * , char const   * , int  ,
                                                   loff_t  , u64  , unsigned int  ) ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   int (*ioctl)(struct inode * , struct file * , unsigned int  , unsigned long  ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t id ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , struct dentry * , int datasync ) ;
   int (*aio_fsync)(struct kiocb * , int datasync ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
};
#line 1457 "include/linux/fs.h"
struct inode_operations {
   int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
   struct dentry *(*lookup)(struct inode * , struct dentry * , struct nameidata * ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , int  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , int  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   void (*truncate)(struct inode * ) ;
   int (*permission)(struct inode * , int  ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount *mnt , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   void (*truncate_range)(struct inode * , loff_t  , loff_t  ) ;
   long (*fallocate)(struct inode *inode , int mode , loff_t offset , loff_t len ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64 start , u64 len ) ;
};
#line 1500 "include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *sb ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * ) ;
   int (*write_inode)(struct inode * , int  ) ;
   void (*drop_inode)(struct inode * ) ;
   void (*delete_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   void (*write_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block *sb , int wait ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*clear_inode)(struct inode * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct vfsmount * ) ;
   int (*show_stats)(struct seq_file * , struct vfsmount * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
};
#line 1683 "include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   int (*get_sb)(struct file_system_type * , int  , char const   * , void * , struct vfsmount * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct list_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
   struct lock_class_key i_alloc_sem_key ;
};
#line 46 "include/linux/proc_fs.h"
typedef int read_proc_t(char *page , char **start , off_t off , int count , int *eof ,
                        void *data );
#line 48 "include/linux/proc_fs.h"
typedef int write_proc_t(struct file *file , char const   *buffer , unsigned long count ,
                         void *data );
#line 51 "include/linux/proc_fs.h"
struct proc_dir_entry {
   unsigned int low_ino ;
   unsigned short namelen ;
   char const   *name ;
   mode_t mode ;
   nlink_t nlink ;
   uid_t uid ;
   gid_t gid ;
   loff_t size ;
   struct inode_operations  const  *proc_iops ;
   struct file_operations  const  *proc_fops ;
   struct proc_dir_entry *next ;
   struct proc_dir_entry *parent ;
   struct proc_dir_entry *subdir ;
   void *data ;
   read_proc_t *read_proc ;
   write_proc_t *write_proc ;
   atomic_t count ;
   int pde_users ;
   spinlock_t pde_unload_lock ;
   struct completion *pde_unload_completion ;
   struct list_head pde_openers ;
};
#line 63 "include/acpi/acpi_bus.h"
enum acpi_bus_removal_type {
    ACPI_BUS_REMOVAL_NORMAL = 0,
    ACPI_BUS_REMOVAL_EJECT = 1,
    ACPI_BUS_REMOVAL_SUPRISE = 2,
    ACPI_BUS_REMOVAL_TYPE_COUNT = 3
} ;
#line 81
struct acpi_driver;
#line 82
struct acpi_device;
#line 100 "include/acpi/acpi_bus.h"
struct acpi_bus_ops {
   u32 acpi_op_add : 1 ;
   u32 acpi_op_start : 1 ;
};
#line 105 "include/acpi/acpi_bus.h"
struct acpi_device_ops {
   int (*add)(struct acpi_device *device ) ;
   int (*remove)(struct acpi_device *device , int type ) ;
   int (*start)(struct acpi_device *device ) ;
   int (*stop)(struct acpi_device *device , int type ) ;
   int (*suspend)(struct acpi_device *device , pm_message_t state ) ;
   int (*resume)(struct acpi_device *device ) ;
   int (*bind)(struct acpi_device *device ) ;
   int (*unbind)(struct acpi_device *device ) ;
   void (*notify)(struct acpi_device *device , u32 event ) ;
};
#line 117
struct acpi_device_id;
#line 117 "include/acpi/acpi_bus.h"
struct acpi_driver {
   char name[80] ;
   char class[80] ;
   struct acpi_device_id  const  *ids ;
   struct acpi_device_ops ops ;
   struct device_driver drv ;
   struct module *owner ;
};
#line 133 "include/acpi/acpi_bus.h"
struct acpi_device_status {
   u32 present : 1 ;
   u32 enabled : 1 ;
   u32 show_in_ui : 1 ;
   u32 functional : 1 ;
   u32 battery_present : 1 ;
   u32 reserved : 27 ;
};
#line 144 "include/acpi/acpi_bus.h"
struct acpi_device_flags {
   u32 dynamic_status : 1 ;
   u32 hardware_id : 1 ;
   u32 compatible_ids : 1 ;
   u32 bus_address : 1 ;
   u32 unique_id : 1 ;
   u32 removable : 1 ;
   u32 ejectable : 1 ;
   u32 lockable : 1 ;
   u32 suprise_removal_ok : 1 ;
   u32 power_manageable : 1 ;
   u32 performance_manageable : 1 ;
   u32 wake_capable : 1 ;
   u32 force_power_state : 1 ;
   u32 reserved : 19 ;
};
#line 163 "include/acpi/acpi_bus.h"
struct acpi_device_dir {
   struct proc_dir_entry *entry ;
};
#line 171 "include/acpi/acpi_bus.h"
typedef char acpi_bus_id[5];
#line 172 "include/acpi/acpi_bus.h"
typedef unsigned long acpi_bus_address;
#line 173 "include/acpi/acpi_bus.h"
typedef char acpi_hardware_id[15];
#line 174 "include/acpi/acpi_bus.h"
typedef char acpi_unique_id[9];
#line 175 "include/acpi/acpi_bus.h"
typedef char acpi_device_name[40];
#line 176 "include/acpi/acpi_bus.h"
typedef char acpi_device_class[20];
#line 178 "include/acpi/acpi_bus.h"
struct acpi_device_pnp {
   acpi_bus_id bus_id ;
   acpi_bus_address bus_address ;
   acpi_hardware_id hardware_id ;
   struct acpi_compatible_id_list *cid_list ;
   acpi_unique_id unique_id ;
   acpi_device_name device_name ;
   acpi_device_class device_class ;
};
#line 197 "include/acpi/acpi_bus.h"
struct acpi_device_power_flags {
   u32 explicit_get : 1 ;
   u32 power_resources : 1 ;
   u32 inrush_current : 1 ;
   u32 power_removed : 1 ;
   u32 reserved : 28 ;
};
#line 205 "include/acpi/acpi_bus.h"
struct __anonstruct_flags_203 {
   u8 valid : 1 ;
   u8 explicit_set : 1 ;
   u8 reserved : 6 ;
};
#line 205 "include/acpi/acpi_bus.h"
struct acpi_device_power_state {
   struct __anonstruct_flags_203 flags ;
   int power ;
   int latency ;
   struct acpi_handle_list resources ;
};
#line 216 "include/acpi/acpi_bus.h"
struct acpi_device_power {
   int state ;
   struct acpi_device_power_flags flags ;
   struct acpi_device_power_state states[4] ;
};
#line 224 "include/acpi/acpi_bus.h"
struct acpi_device_perf_flags {
   u8 reserved : 8 ;
};
#line 228 "include/acpi/acpi_bus.h"
struct __anonstruct_flags_204 {
   u8 valid : 1 ;
   u8 reserved : 7 ;
};
#line 228 "include/acpi/acpi_bus.h"
struct acpi_device_perf_state {
   struct __anonstruct_flags_204 flags ;
   u8 power ;
   u8 performance ;
   int latency ;
};
#line 238 "include/acpi/acpi_bus.h"
struct acpi_device_perf {
   int state ;
   struct acpi_device_perf_flags flags ;
   int state_count ;
   struct acpi_device_perf_state *states ;
};
#line 246 "include/acpi/acpi_bus.h"
struct acpi_device_wakeup_flags {
   u8 valid : 1 ;
   u8 prepared : 1 ;
   u8 run_wake : 1 ;
};
#line 252 "include/acpi/acpi_bus.h"
struct acpi_device_wakeup_state {
   u8 enabled : 1 ;
};
#line 256 "include/acpi/acpi_bus.h"
struct acpi_device_wakeup {
   acpi_handle gpe_device ;
   acpi_integer gpe_number ;
   acpi_integer sleep_state ;
   struct acpi_handle_list resources ;
   struct acpi_device_wakeup_state state ;
   struct acpi_device_wakeup_flags flags ;
};
#line 267 "include/acpi/acpi_bus.h"
struct acpi_device {
   acpi_handle handle ;
   struct acpi_device *parent ;
   struct list_head children ;
   struct list_head node ;
   struct list_head wakeup_list ;
   struct acpi_device_status status ;
   struct acpi_device_flags flags ;
   struct acpi_device_pnp pnp ;
   struct acpi_device_power power ;
   struct acpi_device_wakeup wakeup ;
   struct acpi_device_perf performance ;
   struct acpi_device_dir dir ;
   struct acpi_device_ops ops ;
   struct acpi_driver *driver ;
   void *driver_data ;
   struct device dev ;
   struct acpi_bus_ops bus_ops ;
   enum acpi_bus_removal_type removal_type ;
};
#line 12 "include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 185 "include/linux/mod_devicetable.h"
struct acpi_device_id {
   __u8 id[16] ;
   kernel_ulong_t driver_data ;
};
#line 312 "include/linux/mod_devicetable.h"
struct input_device_id {
   kernel_ulong_t flags ;
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
   kernel_ulong_t evbit[31 / 64 + 1] ;
   kernel_ulong_t keybit[767 / 64 + 1] ;
   kernel_ulong_t relbit[15 / 64 + 1] ;
   kernel_ulong_t absbit[63 / 64 + 1] ;
   kernel_ulong_t mscbit[7 / 64 + 1] ;
   kernel_ulong_t ledbit[15 / 64 + 1] ;
   kernel_ulong_t sndbit[7 / 64 + 1] ;
   kernel_ulong_t ffbit[127 / 64 + 1] ;
   kernel_ulong_t swbit[15 / 64 + 1] ;
   kernel_ulong_t driver_info ;
};
#line 43 "include/linux/input.h"
struct input_id {
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
};
#line 767 "include/linux/input.h"
struct ff_replay {
   __u16 length ;
   __u16 delay ;
};
#line 777 "include/linux/input.h"
struct ff_trigger {
   __u16 button ;
   __u16 interval ;
};
#line 794 "include/linux/input.h"
struct ff_envelope {
   __u16 attack_length ;
   __u16 attack_level ;
   __u16 fade_length ;
   __u16 fade_level ;
};
#line 806 "include/linux/input.h"
struct ff_constant_effect {
   __s16 level ;
   struct ff_envelope envelope ;
};
#line 817 "include/linux/input.h"
struct ff_ramp_effect {
   __s16 start_level ;
   __s16 end_level ;
   struct ff_envelope envelope ;
};
#line 833 "include/linux/input.h"
struct ff_condition_effect {
   __u16 right_saturation ;
   __u16 left_saturation ;
   __s16 right_coeff ;
   __s16 left_coeff ;
   __u16 deadband ;
   __s16 center ;
};
#line 862 "include/linux/input.h"
struct ff_periodic_effect {
   __u16 waveform ;
   __u16 period ;
   __s16 magnitude ;
   __s16 offset ;
   __u16 phase ;
   struct ff_envelope envelope ;
   __u32 custom_len ;
   __s16 *custom_data ;
};
#line 883 "include/linux/input.h"
struct ff_rumble_effect {
   __u16 strong_magnitude ;
   __u16 weak_magnitude ;
};
#line 911 "include/linux/input.h"
union __anonunion_u_206 {
   struct ff_constant_effect constant ;
   struct ff_ramp_effect ramp ;
   struct ff_periodic_effect periodic ;
   struct ff_condition_effect condition[2] ;
   struct ff_rumble_effect rumble ;
};
#line 911 "include/linux/input.h"
struct ff_effect {
   __u16 type ;
   __s16 id ;
   __u16 direction ;
   struct ff_trigger trigger ;
   struct ff_replay replay ;
   union __anonunion_u_206 u ;
};
#line 1051
struct ff_device;
#line 1051
struct input_handle;
#line 1051 "include/linux/input.h"
struct input_dev {
   char const   *name ;
   char const   *phys ;
   char const   *uniq ;
   struct input_id id ;
   unsigned long evbit[(((unsigned long )(31 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long keybit[(((unsigned long )(767 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long relbit[(((unsigned long )(15 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long absbit[(((unsigned long )(63 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long mscbit[(((unsigned long )(7 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long ledbit[(((unsigned long )(15 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long sndbit[(((unsigned long )(7 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long ffbit[(((unsigned long )(127 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long swbit[(((unsigned long )(15 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned int keycodemax ;
   unsigned int keycodesize ;
   void *keycode ;
   int (*setkeycode)(struct input_dev *dev , int scancode , int keycode ) ;
   int (*getkeycode)(struct input_dev *dev , int scancode , int *keycode ) ;
   struct ff_device *ff ;
   unsigned int repeat_key ;
   struct timer_list timer ;
   int sync ;
   int abs[63 + 1] ;
   int rep[1 + 1] ;
   unsigned long key[(((unsigned long )(767 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long led[(((unsigned long )(15 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long snd[(((unsigned long )(7 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   unsigned long sw[(((unsigned long )(15 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   int absmax[63 + 1] ;
   int absmin[63 + 1] ;
   int absfuzz[63 + 1] ;
   int absflat[63 + 1] ;
   int (*open)(struct input_dev *dev ) ;
   void (*close)(struct input_dev *dev ) ;
   int (*flush)(struct input_dev *dev , struct file *file ) ;
   int (*event)(struct input_dev *dev , unsigned int type , unsigned int code , int value ) ;
   struct input_handle *grab ;
   spinlock_t event_lock ;
   struct mutex mutex ;
   unsigned int users ;
   int going_away ;
   struct device dev ;
   struct list_head h_list ;
   struct list_head node ;
};
#line 1194 "include/linux/input.h"
struct input_handler {
   void *private ;
   void (*event)(struct input_handle *handle , unsigned int type , unsigned int code ,
                 int value ) ;
   int (*connect)(struct input_handler *handler , struct input_dev *dev , struct input_device_id  const  *id ) ;
   void (*disconnect)(struct input_handle *handle ) ;
   void (*start)(struct input_handle *handle ) ;
   struct file_operations  const  *fops ;
   int minor ;
   char const   *name ;
   struct input_device_id  const  *id_table ;
   struct input_device_id  const  *blacklist ;
   struct list_head h_list ;
   struct list_head node ;
};
#line 1226 "include/linux/input.h"
struct input_handle {
   void *private ;
   int open ;
   char const   *name ;
   struct input_dev *dev ;
   struct input_handler *handler ;
   struct list_head d_node ;
   struct list_head h_node ;
};
#line 1354 "include/linux/input.h"
struct ff_device {
   int (*upload)(struct input_dev *dev , struct ff_effect *effect , struct ff_effect *old ) ;
   int (*erase)(struct input_dev *dev , int effect_id ) ;
   int (*playback)(struct input_dev *dev , int effect_id , int value ) ;
   void (*set_gain)(struct input_dev *dev , u16 gain ) ;
   void (*set_autocenter)(struct input_dev *dev , u16 magnitude ) ;
   void (*destroy)(struct ff_device * ) ;
   void *private ;
   unsigned long ffbit[(((unsigned long )(127 + 1) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
   struct mutex mutex ;
   int max_effects ;
   struct ff_effect *effects ;
   struct file *effect_owners[] ;
};
#line 162 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
enum SINF_BITS {
    SINF_NUM_BATTERIES = 0,
    SINF_LCD_TYPE = 1,
    SINF_AC_MAX_BRIGHT = 2,
    SINF_AC_MIN_BRIGHT = 3,
    SINF_AC_CUR_BRIGHT = 4,
    SINF_DC_MAX_BRIGHT = 5,
    SINF_DC_MIN_BRIGHT = 6,
    SINF_DC_CUR_BRIGHT = 7,
    SINF_MUTE = 8,
    SINF_RESERVED = 9,
    SINF_ENV_STATE = 10,
    SINF_STICKY_KEY = 128
} ;
#line 218 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
struct pcc_acpi {
   acpi_handle handle ;
   unsigned long num_sifr ;
   int sticky_mode ;
   u32 *sinf ;
   struct acpi_device *device ;
   struct input_dev *input_dev ;
   struct backlight_device *backlight ;
   int keymap[11] ;
};
#line 28 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
typedef u64 dma_addr_t;
#line 168 "include/linux/types.h"
typedef __u16 __le16;
#line 239 "include/linux/timer.h"
enum hrtimer_restart;
#line 215 "include/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
} __attribute__((__packed__)) ;
#line 269 "include/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
} __attribute__((__packed__)) ;
#line 306 "include/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
} __attribute__((__packed__)) ;
#line 324 "include/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
} __attribute__((__packed__)) ;
#line 582 "include/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
} __attribute__((__packed__)) ;
#line 750
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_VARIABLE = 4
} ;
#line 757
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
} ;
#line 10 "include/linux/irqreturn.h"
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
} ;
#line 16 "include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;
#line 90 "include/linux/interrupt.h"
struct irqaction {
   irqreturn_t (*handler)(int  , void * ) ;
   unsigned long flags ;
   cpumask_t mask ;
   char const   *name ;
   void *dev_id ;
   struct irqaction *next ;
   int irq ;
   struct proc_dir_entry *dir ;
   irqreturn_t (*thread_fn)(int  , void * ) ;
   struct task_struct *thread ;
   unsigned long thread_flags ;
};
#line 24 "include/linux/usb.h"
struct usb_device;
#line 26
struct wusb_dev;
#line 45
struct ep_device;
#line 61 "include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
};
#line 73 "include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
   unsigned char *extra ;
   int extralen ;
};
#line 86
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
} ;
#line 155 "include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned int is_active : 1 ;
   unsigned int sysfs_files_created : 1 ;
   unsigned int ep_devs_created : 1 ;
   unsigned int unregistering : 1 ;
   unsigned int needs_remote_wakeup : 1 ;
   unsigned int needs_altsetting0 : 1 ;
   unsigned int needs_binding : 1 ;
   unsigned int reset_running : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   int pm_usage_cnt ;
   struct work_struct reset_ws ;
};
#line 220 "include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0] ;
};
#line 272 "include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[32 / 2] ;
   struct usb_interface *interface[32] ;
   struct usb_interface_cache *intf_cache[32] ;
   unsigned char *extra ;
   int extralen ;
};
#line 303 "include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[128UL / (8UL * sizeof(unsigned long ))] ;
};
#line 310
struct mon_bus;
#line 310 "include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   int busnum ;
   char const   *bus_name ;
   u8 uses_dma ;
   u8 otg_port ;
   unsigned int is_b_host : 1 ;
   unsigned int b_hnp_enable : 1 ;
   int devnum_next ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct list_head bus_list ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   struct dentry *usbfs_dentry ;
   struct device *dev ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 360
struct usb_tt;
#line 428 "include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16] ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16] ;
   struct usb_host_endpoint *ep_out[16] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   unsigned int can_submit : 1 ;
   unsigned int discon_suspended : 1 ;
   unsigned int persist_enabled : 1 ;
   unsigned int have_langid : 1 ;
   unsigned int authorized : 1 ;
   unsigned int authenticated : 1 ;
   unsigned int wusb : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   struct device *usb_classdev ;
   struct dentry *usbfs_dentry ;
   int maxchild ;
   struct usb_device *children[31] ;
   int pm_usage_cnt ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   struct delayed_work autosuspend ;
   struct work_struct autoresume ;
   struct mutex pm_mutex ;
   unsigned long last_busy ;
   int autosuspend_delay ;
   unsigned long connect_time ;
   unsigned int auto_pm : 1 ;
   unsigned int do_remote_wakeup : 1 ;
   unsigned int reset_resume : 1 ;
   unsigned int autosuspend_disabled : 1 ;
   unsigned int autoresume_disabled : 1 ;
   unsigned int skip_sys_resume : 1 ;
   struct wusb_dev *wusb_dev ;
};
#line 968 "include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 975
struct urb;
#line 977 "include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   unsigned int poisoned : 1 ;
};
#line 1160 "include/linux/usb.h"
struct urb {
   struct kref kref ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   int unlinked ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb * ) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0] ;
};
#line 1 "<compiler builtins>"
void *__builtin_memcpy(void * , void const   * , unsigned long  ) ;
#line 1
long __builtin_expect(long exp , long c ) ;
#line 81 "include/linux/compiler.h"
extern void ftrace_likely_update(struct ftrace_branch_data *f , int val , int expect ) ;
#line 62 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
__inline static void ( __attribute__((__always_inline__)) set_bit)(unsigned int nr ,
                                                                   unsigned long volatile   *addr ) ;
#line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
__inline static void ( __attribute__((__always_inline__)) set_bit)(unsigned int nr ,
                                                                   unsigned long volatile   *addr ) 
{ 


  {
#line 68
  __asm__  volatile   (".section .smp_locks,\"a\"\n"
                       " "
                       ".balign 8"
                       " "
                       "\n"
                       " "
                       ".quad"
                       " "
                       "661f\n"
                       ".previous\n"
                       "661:\n\tlock; "
                       "bts %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
#line 71
  return;
}
}
#line 82 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
__inline static void __set_bit(int nr , unsigned long volatile   *addr ) 
{ 


  {
#line 84
  __asm__  volatile   ("bts %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr): "memory");
#line 85
  return;
}
}
#line 100
__inline static void ( __attribute__((__always_inline__)) clear_bit)(int nr , unsigned long volatile   *addr ) ;
#line 97 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
__inline static void ( __attribute__((__always_inline__)) clear_bit)(int nr , unsigned long volatile   *addr ) 
{ 


  {
#line 105
  __asm__  volatile   (".section .smp_locks,\"a\"\n"
                       " "
                       ".balign 8"
                       " "
                       "\n"
                       " "
                       ".quad"
                       " "
                       "661f\n"
                       ".previous\n"
                       "661:\n\tlock; "
                       "btr %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr));
#line 109
  return;
}
}
#line 125 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/bitops.h"
__inline static void __clear_bit(int nr , unsigned long volatile   *addr ) 
{ 


  {
#line 127
  __asm__  volatile   ("btr %1,%0": "+m" (*((long volatile   *)addr)): "Ir" (nr));
#line 128
  return;
}
}
#line 21 "include/linux/log2.h"
extern  __attribute__((__noreturn__)) int ____ilog2_NaN(void)  __attribute__((__const__)) ;
#line 182 "include/linux/kernel.h"
extern int ( /* format attribute */  snprintf)(char *buf , size_t size , char const   *fmt 
                                               , ...) ;
#line 194
extern int ( /* format attribute */  sscanf)(char const   * , char const   *  , ...) ;
#line 33 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/string_64.h"
extern void *__memcpy(void *to , void const   *from , size_t len ) ;
#line 54
extern char *strcpy(char *dest , char const   *src ) ;
#line 9 "include/asm-generic/page.h"
__inline static int get_order(unsigned long size )  __attribute__((__const__)) ;
#line 9 "include/asm-generic/page.h"
__inline static int get_order(unsigned long size ) 
{ 
  int order ;

  {
#line 13
  size = (size - 1UL) >> (12 - 1);
#line 14
  order = -1;
#line 15
  while (1) {
#line 16
    size = size >> 1;
#line 17
    order = order + 1;
#line 15
    if (size) {

    } else {
#line 15
      break;
    }
  }
#line 19
  return (order);
}
}
#line 34 "include/linux/err.h"
__inline static long IS_ERR(void const   *ptr ) ;
#line 34 "include/linux/err.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___505  __attribute__((__section__("_ftrace_annotated_branch")))  =    {"IS_ERR",
    "include/linux/err.h", 34, {{0UL, 0UL}}};
#line 32 "include/linux/err.h"
__inline static long IS_ERR(void const   *ptr ) 
{ 
  int ______r ;
  long tmp ;

  {
#line 34
  tmp = __builtin_expect(! (! ((unsigned long )ptr >= 0xfffffffffffff001UL)), 1);
#line 34
  ______r = tmp;
#line 34
  ftrace_likely_update(& ______f___505, ______r, 0);
#line 34
  return (______r);
}
}
#line 87 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/acpi.h"
extern int acpi_disabled ;
#line 223 "include/linux/gfp.h"
extern unsigned long __get_free_pages(gfp_t gfp_mask , unsigned int order ) ;
#line 112 "include/linux/sysfs.h"
extern int ( __attribute__((__warn_unused_result__)) sysfs_create_group)(struct kobject *kobj ,
                                                                         struct attribute_group  const  *grp ) ;
#line 116
extern void sysfs_remove_group(struct kobject *kobj , struct attribute_group  const  *grp ) ;
#line 129 "include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 23 "include/trace/kmemtrace.h"
extern struct tracepoint __tracepoint_kmalloc ;
#line 23
__inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
                                   size_t bytes_alloc , gfp_t gfp_flags ) ;
#line 23 "include/trace/kmemtrace.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___613  __attribute__((__section__("_ftrace_branch")))  =    {"trace_kmalloc",
    "include/trace/kmemtrace.h", 29, {{0UL, 0UL}}};
#line 23 "include/trace/kmemtrace.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___616  __attribute__((__section__("_ftrace_branch")))  =    {"trace_kmalloc",
    "include/trace/kmemtrace.h", 29, {{0UL, 0UL}}};
#line 23 "include/trace/kmemtrace.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___617  __attribute__((__section__("_ftrace_annotated_branch")))  =    {"trace_kmalloc",
    "include/trace/kmemtrace.h", 29, {{0UL, 0UL}}};
#line 23 "include/trace/kmemtrace.h"
__inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
                                   size_t bytes_alloc , gfp_t gfp_flags ) 
{ 
  void **it_func ;
  void **_________p1 ;
  int ______r ;
  int ______r___2 ;
  int ______r___3 ;
  long tmp___2 ;
  int tmp___3 ;

  {
#line 23
  tmp___2 = __builtin_expect(! (! __tracepoint_kmalloc.state), 1);
#line 23
  ______r___3 = tmp___2;
#line 23
  ftrace_likely_update(& ______f___617, ______r___3, 0);
#line 23
  if (______r___3) {
#line 23
    tmp___3 = 1;
  } else {
#line 23
    tmp___3 = 0;
  }
#line 23
  ______r___2 = tmp___3;
#line 23
  ______f___616.__annonCompField3.miss_hit[______r___2] = ______f___616.__annonCompField3.miss_hit[______r___2] + 1UL;
#line 23
  if (______r___2) {
#line 23
    while (1) {
#line 23
      while (1) {
#line 23
        break;
      }
#line 23
      _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
#line 23
      while (1) {
#line 23
        break;
      }
#line 23
      it_func = _________p1;
#line 23
      ______r = ! (! it_func);
#line 23
      ______f___613.__annonCompField3.miss_hit[______r] = ______f___613.__annonCompField3.miss_hit[______r] + 1UL;
#line 23
      if (______r) {
#line 23
        while (1) {
#line 23
          (*((void (*)(unsigned long call_site , void const   *ptr , size_t bytes_req ,
                       size_t bytes_alloc , gfp_t gfp_flags ))*it_func))(call_site,
                                                                         ptr, bytes_req,
                                                                         bytes_alloc,
                                                                         gfp_flags);
#line 23
          it_func = it_func + 1;
#line 23
          if (*it_func) {

          } else {
#line 23
            break;
          }
        }
      } else {

      }
#line 23
      while (1) {
#line 23
        break;
      }
#line 23
      break;
    }
  } else {

  }
#line 23
  return;
}
}
#line 141 "include/linux/slub_def.h"
extern struct kmem_cache kmalloc_caches[12 + 2] ;
#line 149
__inline static int ( __attribute__((__always_inline__)) kmalloc_index)(size_t size ) ;
#line 149 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___643  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 149, {{0UL, 0UL}}};
#line 152 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___644  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 152, {{0UL, 0UL}}};
#line 156 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___645  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 156, {{0UL, 0UL}}};
#line 158 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___646  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 158, {{0UL, 0UL}}};
#line 161 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___647  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 161, {{0UL, 0UL}}};
#line 162 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___648  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 162, {{0UL, 0UL}}};
#line 163 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___649  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 163, {{0UL, 0UL}}};
#line 164 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___650  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 164, {{0UL, 0UL}}};
#line 165 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___651  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 165, {{0UL, 0UL}}};
#line 166 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___652  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 166, {{0UL, 0UL}}};
#line 167 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___653  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 167, {{0UL, 0UL}}};
#line 168 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___654  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 168, {{0UL, 0UL}}};
#line 169 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___655  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 169, {{0UL, 0UL}}};
#line 170 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___656  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 170, {{0UL, 0UL}}};
#line 175 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___657  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 175, {{0UL, 0UL}}};
#line 176 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___658  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 176, {{0UL, 0UL}}};
#line 177 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___659  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 177, {{0UL, 0UL}}};
#line 178 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___660  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 178, {{0UL, 0UL}}};
#line 179 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___661  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 179, {{0UL, 0UL}}};
#line 180 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___662  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 180, {{0UL, 0UL}}};
#line 181 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___663  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 181, {{0UL, 0UL}}};
#line 182 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___664  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 182, {{0UL, 0UL}}};
#line 183 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___665  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_index",
    "include/linux/slub_def.h", 183, {{0UL, 0UL}}};
#line 147 "include/linux/slub_def.h"
__inline static int ( __attribute__((__always_inline__)) kmalloc_index)(size_t size ) 
{ 
  int ______r ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;
  int tmp___7 ;
  int tmp___8 ;
  int tmp___9 ;
  int tmp___10 ;
  int tmp___11 ;
  int tmp___12 ;
  int tmp___13 ;
  int tmp___14 ;
  int tmp___15 ;
  int tmp___16 ;
  int tmp___17 ;
  int tmp___18 ;
  int tmp___19 ;
  int tmp___20 ;
  int tmp___21 ;
  int tmp___22 ;
  int tmp___23 ;
  int tmp___24 ;
  int tmp___25 ;
  int tmp___26 ;
  int tmp___27 ;
  int tmp___28 ;
  int tmp___29 ;
  int tmp___30 ;
  int tmp___31 ;
  int tmp___32 ;
  int tmp___33 ;
  int tmp___34 ;
  int tmp___35 ;
  int tmp___36 ;
  int tmp___37 ;
  int tmp___38 ;
  int tmp___39 ;
  int tmp___40 ;
  int tmp___41 ;
  int tmp___42 ;
  int tmp___43 ;
  int tmp___44 ;
  int tmp___45 ;
  int tmp___46 ;
  int tmp___47 ;
  int tmp___48 ;
  int tmp___49 ;
  int tmp___50 ;
  int tmp___51 ;
  int tmp___52 ;
  int tmp___53 ;
  int tmp___54 ;
  int tmp___55 ;
  int tmp___56 ;
  int tmp___57 ;
  int tmp___58 ;
  int tmp___59 ;
  int tmp___60 ;
  int tmp___61 ;
  int tmp___62 ;
  int tmp___63 ;
  int tmp___64 ;
  int tmp___65 ;
  int ______r___0 ;
  int ______r___1 ;
  int ______r___2 ;
  int ______r___3 ;
  int ______r___4 ;
  int ______r___5 ;
  int ______r___6 ;
  int ______r___7 ;
  int ______r___8 ;
  int ______r___9 ;
  int ______r___10 ;
  int ______r___11 ;
  int ______r___12 ;
  int ______r___13 ;
  int ______r___14 ;
  int ______r___15 ;
  int ______r___16 ;
  int ______r___17 ;
  int ______r___18 ;
  int ______r___19 ;
  int ______r___20 ;
  int ______r___21 ;

  {
#line 149
  ______r = ! (! (! size));
#line 149
  ______f___643.__annonCompField3.miss_hit[______r] = ______f___643.__annonCompField3.miss_hit[______r] + 1UL;
#line 149
  if (______r) {
#line 150
    return (0);
  } else {

  }
#line 152
  ______r___0 = ! (! (size <= (size_t )8));
#line 152
  ______f___644.__annonCompField3.miss_hit[______r___0] = ______f___644.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 152
  if (______r___0) {
#line 153
    if (8 < 1) {
#line 153
      tmp = ____ilog2_NaN();
#line 153
      tmp___65 = tmp;
    } else {
#line 153
      if (8ULL & (1ULL << 63)) {
#line 153
        tmp___64 = 63;
      } else {
#line 153
        if (8ULL & (1ULL << 62)) {
#line 153
          tmp___63 = 62;
        } else {
#line 153
          if (8ULL & (1ULL << 61)) {
#line 153
            tmp___62 = 61;
          } else {
#line 153
            if (8ULL & (1ULL << 60)) {
#line 153
              tmp___61 = 60;
            } else {
#line 153
              if (8ULL & (1ULL << 59)) {
#line 153
                tmp___60 = 59;
              } else {
#line 153
                if (8ULL & (1ULL << 58)) {
#line 153
                  tmp___59 = 58;
                } else {
#line 153
                  if (8ULL & (1ULL << 57)) {
#line 153
                    tmp___58 = 57;
                  } else {
#line 153
                    if (8ULL & (1ULL << 56)) {
#line 153
                      tmp___57 = 56;
                    } else {
#line 153
                      if (8ULL & (1ULL << 55)) {
#line 153
                        tmp___56 = 55;
                      } else {
#line 153
                        if (8ULL & (1ULL << 54)) {
#line 153
                          tmp___55 = 54;
                        } else {
#line 153
                          if (8ULL & (1ULL << 53)) {
#line 153
                            tmp___54 = 53;
                          } else {
#line 153
                            if (8ULL & (1ULL << 52)) {
#line 153
                              tmp___53 = 52;
                            } else {
#line 153
                              if (8ULL & (1ULL << 51)) {
#line 153
                                tmp___52 = 51;
                              } else {
#line 153
                                if (8ULL & (1ULL << 50)) {
#line 153
                                  tmp___51 = 50;
                                } else {
#line 153
                                  if (8ULL & (1ULL << 49)) {
#line 153
                                    tmp___50 = 49;
                                  } else {
#line 153
                                    if (8ULL & (1ULL << 48)) {
#line 153
                                      tmp___49 = 48;
                                    } else {
#line 153
                                      if (8ULL & (1ULL << 47)) {
#line 153
                                        tmp___48 = 47;
                                      } else {
#line 153
                                        if (8ULL & (1ULL << 46)) {
#line 153
                                          tmp___47 = 46;
                                        } else {
#line 153
                                          if (8ULL & (1ULL << 45)) {
#line 153
                                            tmp___46 = 45;
                                          } else {
#line 153
                                            if (8ULL & (1ULL << 44)) {
#line 153
                                              tmp___45 = 44;
                                            } else {
#line 153
                                              if (8ULL & (1ULL << 43)) {
#line 153
                                                tmp___44 = 43;
                                              } else {
#line 153
                                                if (8ULL & (1ULL << 42)) {
#line 153
                                                  tmp___43 = 42;
                                                } else {
#line 153
                                                  if (8ULL & (1ULL << 41)) {
#line 153
                                                    tmp___42 = 41;
                                                  } else {
#line 153
                                                    if (8ULL & (1ULL << 40)) {
#line 153
                                                      tmp___41 = 40;
                                                    } else {
#line 153
                                                      if (8ULL & (1ULL << 39)) {
#line 153
                                                        tmp___40 = 39;
                                                      } else {
#line 153
                                                        if (8ULL & (1ULL << 38)) {
#line 153
                                                          tmp___39 = 38;
                                                        } else {
#line 153
                                                          if (8ULL & (1ULL << 37)) {
#line 153
                                                            tmp___38 = 37;
                                                          } else {
#line 153
                                                            if (8ULL & (1ULL << 36)) {
#line 153
                                                              tmp___37 = 36;
                                                            } else {
#line 153
                                                              if (8ULL & (1ULL << 35)) {
#line 153
                                                                tmp___36 = 35;
                                                              } else {
#line 153
                                                                if (8ULL & (1ULL << 34)) {
#line 153
                                                                  tmp___35 = 34;
                                                                } else {
#line 153
                                                                  if (8ULL & (1ULL << 33)) {
#line 153
                                                                    tmp___34 = 33;
                                                                  } else {
#line 153
                                                                    if (8ULL & (1ULL << 32)) {
#line 153
                                                                      tmp___33 = 32;
                                                                    } else {
#line 153
                                                                      if (8ULL & (1ULL << 31)) {
#line 153
                                                                        tmp___32 = 31;
                                                                      } else {
#line 153
                                                                        if (8ULL & (1ULL << 30)) {
#line 153
                                                                          tmp___31 = 30;
                                                                        } else {
#line 153
                                                                          if (8ULL & (1ULL << 29)) {
#line 153
                                                                            tmp___30 = 29;
                                                                          } else {
#line 153
                                                                            if (8ULL & (1ULL << 28)) {
#line 153
                                                                              tmp___29 = 28;
                                                                            } else {
#line 153
                                                                              if (8ULL & (1ULL << 27)) {
#line 153
                                                                                tmp___28 = 27;
                                                                              } else {
#line 153
                                                                                if (8ULL & (1ULL << 26)) {
#line 153
                                                                                  tmp___27 = 26;
                                                                                } else {
#line 153
                                                                                  if (8ULL & (1ULL << 25)) {
#line 153
                                                                                    tmp___26 = 25;
                                                                                  } else {
#line 153
                                                                                    if (8ULL & (1ULL << 24)) {
#line 153
                                                                                      tmp___25 = 24;
                                                                                    } else {
#line 153
                                                                                      if (8ULL & (1ULL << 23)) {
#line 153
                                                                                        tmp___24 = 23;
                                                                                      } else {
#line 153
                                                                                        if (8ULL & (1ULL << 22)) {
#line 153
                                                                                          tmp___23 = 22;
                                                                                        } else {
#line 153
                                                                                          if (8ULL & (1ULL << 21)) {
#line 153
                                                                                            tmp___22 = 21;
                                                                                          } else {
#line 153
                                                                                            if (8ULL & (1ULL << 20)) {
#line 153
                                                                                              tmp___21 = 20;
                                                                                            } else {
#line 153
                                                                                              if (8ULL & (1ULL << 19)) {
#line 153
                                                                                                tmp___20 = 19;
                                                                                              } else {
#line 153
                                                                                                if (8ULL & (1ULL << 18)) {
#line 153
                                                                                                  tmp___19 = 18;
                                                                                                } else {
#line 153
                                                                                                  if (8ULL & (1ULL << 17)) {
#line 153
                                                                                                    tmp___18 = 17;
                                                                                                  } else {
#line 153
                                                                                                    if (8ULL & (1ULL << 16)) {
#line 153
                                                                                                      tmp___17 = 16;
                                                                                                    } else {
#line 153
                                                                                                      if (8ULL & (1ULL << 15)) {
#line 153
                                                                                                        tmp___16 = 15;
                                                                                                      } else {
#line 153
                                                                                                        if (8ULL & (1ULL << 14)) {
#line 153
                                                                                                          tmp___15 = 14;
                                                                                                        } else {
#line 153
                                                                                                          if (8ULL & (1ULL << 13)) {
#line 153
                                                                                                            tmp___14 = 13;
                                                                                                          } else {
#line 153
                                                                                                            if (8ULL & (1ULL << 12)) {
#line 153
                                                                                                              tmp___13 = 12;
                                                                                                            } else {
#line 153
                                                                                                              if (8ULL & (1ULL << 11)) {
#line 153
                                                                                                                tmp___12 = 11;
                                                                                                              } else {
#line 153
                                                                                                                if (8ULL & (1ULL << 10)) {
#line 153
                                                                                                                  tmp___11 = 10;
                                                                                                                } else {
#line 153
                                                                                                                  if (8ULL & (1ULL << 9)) {
#line 153
                                                                                                                    tmp___10 = 9;
                                                                                                                  } else {
#line 153
                                                                                                                    if (8ULL & (1ULL << 8)) {
#line 153
                                                                                                                      tmp___9 = 8;
                                                                                                                    } else {
#line 153
                                                                                                                      if (8ULL & (1ULL << 7)) {
#line 153
                                                                                                                        tmp___8 = 7;
                                                                                                                      } else {
#line 153
                                                                                                                        if (8ULL & (1ULL << 6)) {
#line 153
                                                                                                                          tmp___7 = 6;
                                                                                                                        } else {
#line 153
                                                                                                                          if (8ULL & (1ULL << 5)) {
#line 153
                                                                                                                            tmp___6 = 5;
                                                                                                                          } else {
#line 153
                                                                                                                            if (8ULL & (1ULL << 4)) {
#line 153
                                                                                                                              tmp___5 = 4;
                                                                                                                            } else {
#line 153
                                                                                                                              if (8ULL & (1ULL << 3)) {
#line 153
                                                                                                                                tmp___4 = 3;
                                                                                                                              } else {
#line 153
                                                                                                                                if (8ULL & (1ULL << 2)) {
#line 153
                                                                                                                                  tmp___3 = 2;
                                                                                                                                } else {
#line 153
                                                                                                                                  if (8ULL & (1ULL << 1)) {
#line 153
                                                                                                                                    tmp___2 = 1;
                                                                                                                                  } else {
#line 153
                                                                                                                                    if (8ULL & (1ULL << 0)) {
#line 153
                                                                                                                                      tmp___1 = 0;
                                                                                                                                    } else {
#line 153
                                                                                                                                      tmp___0 = ____ilog2_NaN();
#line 153
                                                                                                                                      tmp___1 = tmp___0;
                                                                                                                                    }
#line 153
                                                                                                                                    tmp___2 = tmp___1;
                                                                                                                                  }
#line 153
                                                                                                                                  tmp___3 = tmp___2;
                                                                                                                                }
#line 153
                                                                                                                                tmp___4 = tmp___3;
                                                                                                                              }
#line 153
                                                                                                                              tmp___5 = tmp___4;
                                                                                                                            }
#line 153
                                                                                                                            tmp___6 = tmp___5;
                                                                                                                          }
#line 153
                                                                                                                          tmp___7 = tmp___6;
                                                                                                                        }
#line 153
                                                                                                                        tmp___8 = tmp___7;
                                                                                                                      }
#line 153
                                                                                                                      tmp___9 = tmp___8;
                                                                                                                    }
#line 153
                                                                                                                    tmp___10 = tmp___9;
                                                                                                                  }
#line 153
                                                                                                                  tmp___11 = tmp___10;
                                                                                                                }
#line 153
                                                                                                                tmp___12 = tmp___11;
                                                                                                              }
#line 153
                                                                                                              tmp___13 = tmp___12;
                                                                                                            }
#line 153
                                                                                                            tmp___14 = tmp___13;
                                                                                                          }
#line 153
                                                                                                          tmp___15 = tmp___14;
                                                                                                        }
#line 153
                                                                                                        tmp___16 = tmp___15;
                                                                                                      }
#line 153
                                                                                                      tmp___17 = tmp___16;
                                                                                                    }
#line 153
                                                                                                    tmp___18 = tmp___17;
                                                                                                  }
#line 153
                                                                                                  tmp___19 = tmp___18;
                                                                                                }
#line 153
                                                                                                tmp___20 = tmp___19;
                                                                                              }
#line 153
                                                                                              tmp___21 = tmp___20;
                                                                                            }
#line 153
                                                                                            tmp___22 = tmp___21;
                                                                                          }
#line 153
                                                                                          tmp___23 = tmp___22;
                                                                                        }
#line 153
                                                                                        tmp___24 = tmp___23;
                                                                                      }
#line 153
                                                                                      tmp___25 = tmp___24;
                                                                                    }
#line 153
                                                                                    tmp___26 = tmp___25;
                                                                                  }
#line 153
                                                                                  tmp___27 = tmp___26;
                                                                                }
#line 153
                                                                                tmp___28 = tmp___27;
                                                                              }
#line 153
                                                                              tmp___29 = tmp___28;
                                                                            }
#line 153
                                                                            tmp___30 = tmp___29;
                                                                          }
#line 153
                                                                          tmp___31 = tmp___30;
                                                                        }
#line 153
                                                                        tmp___32 = tmp___31;
                                                                      }
#line 153
                                                                      tmp___33 = tmp___32;
                                                                    }
#line 153
                                                                    tmp___34 = tmp___33;
                                                                  }
#line 153
                                                                  tmp___35 = tmp___34;
                                                                }
#line 153
                                                                tmp___36 = tmp___35;
                                                              }
#line 153
                                                              tmp___37 = tmp___36;
                                                            }
#line 153
                                                            tmp___38 = tmp___37;
                                                          }
#line 153
                                                          tmp___39 = tmp___38;
                                                        }
#line 153
                                                        tmp___40 = tmp___39;
                                                      }
#line 153
                                                      tmp___41 = tmp___40;
                                                    }
#line 153
                                                    tmp___42 = tmp___41;
                                                  }
#line 153
                                                  tmp___43 = tmp___42;
                                                }
#line 153
                                                tmp___44 = tmp___43;
                                              }
#line 153
                                              tmp___45 = tmp___44;
                                            }
#line 153
                                            tmp___46 = tmp___45;
                                          }
#line 153
                                          tmp___47 = tmp___46;
                                        }
#line 153
                                        tmp___48 = tmp___47;
                                      }
#line 153
                                      tmp___49 = tmp___48;
                                    }
#line 153
                                    tmp___50 = tmp___49;
                                  }
#line 153
                                  tmp___51 = tmp___50;
                                }
#line 153
                                tmp___52 = tmp___51;
                              }
#line 153
                              tmp___53 = tmp___52;
                            }
#line 153
                            tmp___54 = tmp___53;
                          }
#line 153
                          tmp___55 = tmp___54;
                        }
#line 153
                        tmp___56 = tmp___55;
                      }
#line 153
                      tmp___57 = tmp___56;
                    }
#line 153
                    tmp___58 = tmp___57;
                  }
#line 153
                  tmp___59 = tmp___58;
                }
#line 153
                tmp___60 = tmp___59;
              }
#line 153
              tmp___61 = tmp___60;
            }
#line 153
            tmp___62 = tmp___61;
          }
#line 153
          tmp___63 = tmp___62;
        }
#line 153
        tmp___64 = tmp___63;
      }
#line 153
      tmp___65 = tmp___64;
    }
#line 153
    return (tmp___65);
  } else {

  }
#line 156
  ______r___1 = ! (! (size > (size_t )64 && size <= (size_t )96));
#line 156
  ______f___645.__annonCompField3.miss_hit[______r___1] = ______f___645.__annonCompField3.miss_hit[______r___1] + 1UL;
#line 156
  if (______r___1) {
#line 157
    return (1);
  } else {

  }
#line 158
  ______r___2 = ! (! (size > (size_t )128 && size <= (size_t )192));
#line 158
  ______f___646.__annonCompField3.miss_hit[______r___2] = ______f___646.__annonCompField3.miss_hit[______r___2] + 1UL;
#line 158
  if (______r___2) {
#line 159
    return (2);
  } else {

  }
#line 161
  ______r___3 = ! (! (size <= (size_t )8));
#line 161
  ______f___647.__annonCompField3.miss_hit[______r___3] = ______f___647.__annonCompField3.miss_hit[______r___3] + 1UL;
#line 161
  if (______r___3) {
#line 161
    return (3);
  } else {

  }
#line 162
  ______r___4 = ! (! (size <= (size_t )16));
#line 162
  ______f___648.__annonCompField3.miss_hit[______r___4] = ______f___648.__annonCompField3.miss_hit[______r___4] + 1UL;
#line 162
  if (______r___4) {
#line 162
    return (4);
  } else {

  }
#line 163
  ______r___5 = ! (! (size <= (size_t )32));
#line 163
  ______f___649.__annonCompField3.miss_hit[______r___5] = ______f___649.__annonCompField3.miss_hit[______r___5] + 1UL;
#line 163
  if (______r___5) {
#line 163
    return (5);
  } else {

  }
#line 164
  ______r___6 = ! (! (size <= (size_t )64));
#line 164
  ______f___650.__annonCompField3.miss_hit[______r___6] = ______f___650.__annonCompField3.miss_hit[______r___6] + 1UL;
#line 164
  if (______r___6) {
#line 164
    return (6);
  } else {

  }
#line 165
  ______r___7 = ! (! (size <= (size_t )128));
#line 165
  ______f___651.__annonCompField3.miss_hit[______r___7] = ______f___651.__annonCompField3.miss_hit[______r___7] + 1UL;
#line 165
  if (______r___7) {
#line 165
    return (7);
  } else {

  }
#line 166
  ______r___8 = ! (! (size <= (size_t )256));
#line 166
  ______f___652.__annonCompField3.miss_hit[______r___8] = ______f___652.__annonCompField3.miss_hit[______r___8] + 1UL;
#line 166
  if (______r___8) {
#line 166
    return (8);
  } else {

  }
#line 167
  ______r___9 = ! (! (size <= (size_t )512));
#line 167
  ______f___653.__annonCompField3.miss_hit[______r___9] = ______f___653.__annonCompField3.miss_hit[______r___9] + 1UL;
#line 167
  if (______r___9) {
#line 167
    return (9);
  } else {

  }
#line 168
  ______r___10 = ! (! (size <= (size_t )1024));
#line 168
  ______f___654.__annonCompField3.miss_hit[______r___10] = ______f___654.__annonCompField3.miss_hit[______r___10] + 1UL;
#line 168
  if (______r___10) {
#line 168
    return (10);
  } else {

  }
#line 169
  ______r___11 = ! (! (size <= (size_t )(2 * 1024)));
#line 169
  ______f___655.__annonCompField3.miss_hit[______r___11] = ______f___655.__annonCompField3.miss_hit[______r___11] + 1UL;
#line 169
  if (______r___11) {
#line 169
    return (11);
  } else {

  }
#line 170
  ______r___12 = ! (! (size <= (size_t )(4 * 1024)));
#line 170
  ______f___656.__annonCompField3.miss_hit[______r___12] = ______f___656.__annonCompField3.miss_hit[______r___12] + 1UL;
#line 170
  if (______r___12) {
#line 170
    return (12);
  } else {

  }
#line 175
  ______r___13 = ! (! (size <= (size_t )(8 * 1024)));
#line 175
  ______f___657.__annonCompField3.miss_hit[______r___13] = ______f___657.__annonCompField3.miss_hit[______r___13] + 1UL;
#line 175
  if (______r___13) {
#line 175
    return (13);
  } else {

  }
#line 176
  ______r___14 = ! (! (size <= (size_t )(16 * 1024)));
#line 176
  ______f___658.__annonCompField3.miss_hit[______r___14] = ______f___658.__annonCompField3.miss_hit[______r___14] + 1UL;
#line 176
  if (______r___14) {
#line 176
    return (14);
  } else {

  }
#line 177
  ______r___15 = ! (! (size <= (size_t )(32 * 1024)));
#line 177
  ______f___659.__annonCompField3.miss_hit[______r___15] = ______f___659.__annonCompField3.miss_hit[______r___15] + 1UL;
#line 177
  if (______r___15) {
#line 177
    return (15);
  } else {

  }
#line 178
  ______r___16 = ! (! (size <= (size_t )(64 * 1024)));
#line 178
  ______f___660.__annonCompField3.miss_hit[______r___16] = ______f___660.__annonCompField3.miss_hit[______r___16] + 1UL;
#line 178
  if (______r___16) {
#line 178
    return (16);
  } else {

  }
#line 179
  ______r___17 = ! (! (size <= (size_t )(128 * 1024)));
#line 179
  ______f___661.__annonCompField3.miss_hit[______r___17] = ______f___661.__annonCompField3.miss_hit[______r___17] + 1UL;
#line 179
  if (______r___17) {
#line 179
    return (17);
  } else {

  }
#line 180
  ______r___18 = ! (! (size <= (size_t )(256 * 1024)));
#line 180
  ______f___662.__annonCompField3.miss_hit[______r___18] = ______f___662.__annonCompField3.miss_hit[______r___18] + 1UL;
#line 180
  if (______r___18) {
#line 180
    return (18);
  } else {

  }
#line 181
  ______r___19 = ! (! (size <= (size_t )(512 * 1024)));
#line 181
  ______f___663.__annonCompField3.miss_hit[______r___19] = ______f___663.__annonCompField3.miss_hit[______r___19] + 1UL;
#line 181
  if (______r___19) {
#line 181
    return (19);
  } else {

  }
#line 182
  ______r___20 = ! (! (size <= (size_t )(1024 * 1024)));
#line 182
  ______f___664.__annonCompField3.miss_hit[______r___20] = ______f___664.__annonCompField3.miss_hit[______r___20] + 1UL;
#line 182
  if (______r___20) {
#line 182
    return (20);
  } else {

  }
#line 183
  ______r___21 = ! (! (size <= (size_t )((2 * 1024) * 1024)));
#line 183
  ______f___665.__annonCompField3.miss_hit[______r___21] = ______f___665.__annonCompField3.miss_hit[______r___21] + 1UL;
#line 183
  if (______r___21) {
#line 183
    return (21);
  } else {

  }
#line 184
  return (-1);
}
}
#line 205
__inline static struct kmem_cache *( __attribute__((__always_inline__)) kmalloc_slab)(size_t size ) ;
#line 205 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___666  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc_slab",
    "include/linux/slub_def.h", 205, {{0UL, 0UL}}};
#line 201 "include/linux/slub_def.h"
__inline static struct kmem_cache *( __attribute__((__always_inline__)) kmalloc_slab)(size_t size ) 
{ 
  int index ;
  int tmp ;
  int ______r ;

  {
#line 203
  tmp = kmalloc_index(size);
#line 203
  index = tmp;
#line 205
  ______r = ! (! (index == 0));
#line 205
  ______f___666.__annonCompField3.miss_hit[______r] = ______f___666.__annonCompField3.miss_hit[______r] + 1UL;
#line 205
  if (______r) {
#line 206
    return ((void *)0);
  } else {

  }
#line 208
  return (& kmalloc_caches[index]);
}
}
#line 219
extern void *__kmalloc(size_t size , gfp_t flags ) ;
#line 222
extern void *kmem_cache_alloc_notrace(struct kmem_cache *s , gfp_t gfpflags ) ;
#line 231 "include/linux/slub_def.h"
__inline static void *( __attribute__((__always_inline__)) kmalloc_large)(size_t size ,
                                                                          gfp_t flags ) 
{ 
  unsigned int order ;
  int tmp ;
  void *ret ;
  unsigned long tmp___0 ;

  {
#line 233
  tmp = get_order(size);
#line 233
  order = tmp;
#line 234
  tmp___0 = __get_free_pages(flags | 16384U, order);
#line 234
  ret = (void *)tmp___0;
#line 236
  trace_kmalloc((unsigned long )((void *)0), ret, size, (1UL << 12) << order, flags);
#line 238
  return (ret);
}
}
#line 246
__inline static void *( __attribute__((__always_inline__)) kmalloc)(size_t size ,
                                                                    gfp_t flags ) ;
#line 246 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___667  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc",
    "include/linux/slub_def.h", 246, {{0UL, 0UL}}};
#line 252 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___668  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc",
    "include/linux/slub_def.h", 252, {{0UL, 0UL}}};
#line 249 "include/linux/slub_def.h"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___669  __attribute__((__section__("_ftrace_branch")))  =    {"kmalloc",
    "include/linux/slub_def.h", 249, {{0UL, 0UL}}};
#line 241 "include/linux/slub_def.h"
__inline static void *( __attribute__((__always_inline__)) kmalloc)(size_t size ,
                                                                    gfp_t flags ) 
{ 
  void *ret ;
  void *tmp ;
  int ______r ;
  struct kmem_cache *s ;
  struct kmem_cache *tmp___0 ;
  int ______r___0 ;
  int ______r___1 ;
  void *tmp___1 ;

  {
#line 245
  if (0) {
#line 246
    ______r = ! (! (size > 2UL * (1UL << 12)));
#line 246
    ______f___667.__annonCompField3.miss_hit[______r] = ______f___667.__annonCompField3.miss_hit[______r] + 1UL;
#line 246
    if (______r) {
#line 247
      tmp = kmalloc_large(size, flags);
#line 247
      return (tmp);
    } else {

    }
#line 249
    ______r___1 = ! (! (! (flags & 1U)));
#line 249
    ______f___669.__annonCompField3.miss_hit[______r___1] = ______f___669.__annonCompField3.miss_hit[______r___1] + 1UL;
#line 249
    if (______r___1) {
#line 250
      tmp___0 = kmalloc_slab(size);
#line 250
      s = tmp___0;
#line 252
      ______r___0 = ! (! (! s));
#line 252
      ______f___668.__annonCompField3.miss_hit[______r___0] = ______f___668.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 252
      if (______r___0) {
#line 253
        return ((void *)16);
      } else {

      }
#line 255
      ret = kmem_cache_alloc_notrace(s, flags);
#line 257
      trace_kmalloc((unsigned long )((void *)0), ret, size, s->size, flags);
#line 259
      return (ret);
    } else {

    }
  } else {

  }
#line 262
  tmp___1 = __kmalloc(size, flags);
#line 262
  return (tmp___1);
}
}
#line 304 "include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 306
  tmp = kmalloc(size, flags | 32768U);
#line 306
  return (tmp);
}
}
#line 67 "include/linux/module.h"
int init_module(void) ;
#line 68
void cleanup_module(void) ;
#line 457 "include/linux/device.h"
__inline static void *dev_get_drvdata(struct device  const  *dev ) 
{ 


  {
#line 459
  return (dev->driver_data);
}
}
#line 462 "include/linux/device.h"
__inline static void dev_set_drvdata(struct device *dev , void *data ) 
{ 


  {
#line 464
  dev->driver_data = data;
#line 465
  return;
}
}
#line 100 "include/linux/backlight.h"
extern struct backlight_device *backlight_device_register(char const   *name , struct device *dev ,
                                                          void *devdata , struct backlight_ops *ops ) ;
#line 102
extern void backlight_device_unregister(struct backlight_device *bd ) ;
#line 106 "include/linux/backlight.h"
__inline static void *bl_get_data(struct backlight_device *bl_dev ) 
{ 
  void *tmp ;

  {
#line 108
  tmp = dev_get_drvdata(& bl_dev->dev);
#line 108
  return (tmp);
}
}
#line 188 "include/acpi/acpixf.h"
extern acpi_status acpi_evaluate_object(acpi_handle object , acpi_string pathname ,
                                        struct acpi_object_list *parameter_objects ,
                                        struct acpi_buffer *return_object_buffer ) ;
#line 46 "include/acpi/acpi_bus.h"
extern acpi_status acpi_evaluate_integer(acpi_handle handle , acpi_string pathname ,
                                         struct acpi_object_list *arguments , unsigned long long *data ) ;
#line 288 "include/acpi/acpi_bus.h"
__inline static void *acpi_driver_data(struct acpi_device *d ) 
{ 


  {
#line 290
  return (d->driver_data);
}
}
#line 334
extern int acpi_bus_generate_proc_event(struct acpi_device *device , u8 type , int data ) ;
#line 341
extern int acpi_bus_register_driver(struct acpi_driver *driver ) ;
#line 342
extern void acpi_bus_unregister_driver(struct acpi_driver *driver ) ;
#line 1240 "include/linux/input.h"
extern struct input_dev *input_allocate_device(void) ;
#line 1241
extern void input_free_device(struct input_dev *dev ) ;
#line 1254 "include/linux/input.h"
__inline static void *input_get_drvdata(struct input_dev *dev ) 
{ 
  void *tmp ;

  {
#line 1256
  tmp = dev_get_drvdata(& dev->dev);
#line 1256
  return (tmp);
}
}
#line 1259 "include/linux/input.h"
__inline static void input_set_drvdata(struct input_dev *dev , void *data ) 
{ 


  {
#line 1261
  dev_set_drvdata(& dev->dev, data);
#line 1262
  return;
}
}
#line 1264
extern int ( __attribute__((__warn_unused_result__)) input_register_device)(struct input_dev * ) ;
#line 1265
extern void input_unregister_device(struct input_dev * ) ;
#line 1281
extern void input_event(struct input_dev *dev , unsigned int type , unsigned int code ,
                        int value ) ;
#line 1284 "include/linux/input.h"
__inline static void input_report_key(struct input_dev *dev , unsigned int code ,
                                      int value ) 
{ 


  {
#line 1286
  input_event(dev, 1, code, ! (! value));
#line 1287
  return;
}
}
#line 1309 "include/linux/input.h"
__inline static void input_sync(struct input_dev *dev ) 
{ 


  {
#line 1311
  input_event(dev, 0, 0, 0);
#line 1312
  return;
}
}
#line 139 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static char const   __mod_author139[54]  __attribute__((__used__, __unused__, __section__(".modinfo")))  = 
#line 139 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
  {      'a',      'u',      't',      'h', 
        'o',      'r',      '=',      'H', 
        'i',      'r',      'o',      's', 
        'h',      'i',      ' ',      'M', 
        'i',      'u',      'r',      'a', 
        ',',      ' ',      'D',      'a', 
        'v',      'i',      'd',      ' ', 
        'B',      'r',      'o',      'n', 
        'a',      'u',      'g',      'h', 
        ' ',      'a',      'n',      'd', 
        ' ',      'H',      'a',      'r', 
        'a',      'l',      'd',      ' ', 
        'W',      'e',      'l',      't', 
        'e',      '\000'};
#line 140 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static char const   __mod_description140[64]  __attribute__((__used__, __unused__,
__section__(".modinfo")))  = 
#line 140
  {      'd',      'e',      's',      'c', 
        'r',      'i',      'p',      't', 
        'i',      'o',      'n',      '=', 
        'A',      'C',      'P',      'I', 
        ' ',      'H',      'o',      't', 
        'K',      'e',      'y',      ' ', 
        'd',      'r',      'i',      'v', 
        'e',      'r',      ' ',      'f', 
        'o',      'r',      ' ',      'P', 
        'a',      'n',      'a',      's', 
        'o',      'n',      'i',      'c', 
        ' ',      'L',      'e',      't', 
        '\'',      's',      ' ',      'N', 
        'o',      't',      'e',      ' ', 
        'l',      'a',      'p',      't', 
        'o',      'p',      's',      '\000'};
#line 141 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static char const   __mod_license141[12]  __attribute__((__used__, __unused__, __section__(".modinfo")))  = 
#line 141
  {      'l',      'i',      'c',      'e', 
        'n',      's',      'e',      '=', 
        'G',      'P',      'L',      '\000'};
#line 177
static int acpi_pcc_hotkey_add(struct acpi_device *device ) ;
#line 178
static int acpi_pcc_hotkey_remove(struct acpi_device *device , int type ) ;
#line 179
static int acpi_pcc_hotkey_resume(struct acpi_device *device ) ;
#line 180
static void acpi_pcc_hotkey_notify(struct acpi_device *device , u32 event ) ;
#line 182 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct acpi_device_id  const  pcc_device_ids[5]  = {      {{'M', 'A', 'T', '0', '0', '1', '2', '\000'}, 0}, 
        {{'M', 'A', 'T', '0', '0', '1', '3', '\000'}, 0}, 
        {{'M', 'A', 'T', '0', '0', '1', '8', '\000'}, 0}, 
        {{'M', 'A', 'T', '0', '0', '1', '9', '\000'}, 0}, 
        {{'\000'}, 0}};
#line 189
extern struct acpi_device_id  const  __mod_acpi_device_table  __attribute__((__unused__,
__alias__("pcc_device_ids"))) ;
#line 191 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct acpi_driver acpi_pcc_driver  =    {{'P', 'a', 'n', 'a', 's', 'o', 'n', 'i', 'c', ' ', 'L', 'a', 'p', 't', 'o', 'p',
     ' ', 'S', 'u', 'p', 'p', 'o', 'r', 't', '\000'}, {'p', 'c', 'c', '\000'}, pcc_device_ids,
    {& acpi_pcc_hotkey_add, & acpi_pcc_hotkey_remove, 0, 0, 0, & acpi_pcc_hotkey_resume,
     0, 0, & acpi_pcc_hotkey_notify}, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0};
#line 204 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int const   initial_keymap[11]  = 
#line 204
  {      0,      224,      225,      431, 
        113,      114,      115,      142, 
        148,      236,      205};
#line 234 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int acpi_pcc_write_sset(struct pcc_acpi *pcc , int func , int val ) 
{ 
  union acpi_object in_objs[2] ;
  struct acpi_object_list params ;
  acpi_status status ;

  {
#line 236
  in_objs[0].integer.type = 1;
#line 236
  in_objs[0].integer.value = func;
#line 236
  in_objs[1].integer.type = 1;
#line 236
  in_objs[1].integer.value = val;
#line 242
  params.count = sizeof(in_objs) / sizeof(in_objs[0]) + (sizeof(char [1 - 2 * 0]) - 1UL);
#line 242
  params.pointer = in_objs;
#line 246
  status = (acpi_status )0;
#line 248
  status = acpi_evaluate_object(pcc->handle, "SSET", & params, (void *)0);
#line 251
  return (status == (acpi_status )0);
}
}
#line 261
__inline static int acpi_pcc_get_sqty(struct acpi_device *device ) ;
#line 261 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___822  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_get_sqty",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    261, {{0UL, 0UL}}};
#line 254 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
__inline static int acpi_pcc_get_sqty(struct acpi_device *device ) 
{ 
  unsigned long long s ;
  acpi_status status ;
  int ______r ;

  {
#line 259
  status = acpi_evaluate_integer(device->handle, "SQTY", (void *)0, & s);
#line 261
  ______r = ! (! (! status));
#line 261
  ______f___822.__annonCompField3.miss_hit[______r] = ______f___822.__annonCompField3.miss_hit[______r] + 1UL;
#line 261
  if (______r) {
#line 262
    return (s);
  } else {
#line 266
    return (-22);
  }
}
}
#line 279
static int acpi_pcc_retrieve_biosdata(struct pcc_acpi *pcc , u32 *sinf ) ;
#line 279 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___823  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_retrieve_biosdata",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    279, {{0UL, 0UL}}};
#line 286 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___824  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_retrieve_biosdata",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    286, {{0UL, 0UL}}};
#line 291 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___825  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_retrieve_biosdata",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    291, {{0UL, 0UL}}};
#line 300 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___828  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_retrieve_biosdata",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    300, {{0UL, 0UL}}};
#line 300 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___829  __attribute__((__section__("_ftrace_annotated_branch")))  =    {"acpi_pcc_retrieve_biosdata",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    300, {{0UL, 0UL}}};
#line 270 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int acpi_pcc_retrieve_biosdata(struct pcc_acpi *pcc , u32 *sinf ) 
{ 
  acpi_status status ;
  struct acpi_buffer buffer ;
  union acpi_object *hkey ;
  int i ;
  int ______r ;
  int ______r___0 ;
  int ______r___1 ;
  union acpi_object *element ;
  int ______r___4 ;
  int ______r___5 ;
  long tmp___2 ;
  int tmp___3 ;

  {
#line 273
  buffer.length = (acpi_size )-1;
#line 273
  buffer.pointer = (void *)0;
#line 274
  hkey = (void *)0;
#line 277
  status = acpi_evaluate_object(pcc->handle, "SINF", (void *)0, & buffer);
#line 279
  ______r = ! (! status);
#line 279
  ______f___823.__annonCompField3.miss_hit[______r] = ______f___823.__annonCompField3.miss_hit[______r] + 1UL;
#line 279
  if (______r) {
#line 282
    return (0);
  } else {

  }
#line 285
  hkey = buffer.pointer;
#line 286
  ______r___0 = ! (! (! hkey || hkey->type != (acpi_object_type )4));
#line 286
  ______f___824.__annonCompField3.miss_hit[______r___0] = ______f___824.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 286
  if (______r___0) {
#line 288
    goto end;
  } else {

  }
#line 291
  ______r___1 = ! (! (pcc->num_sifr < (unsigned long )hkey->package.count));
#line 291
  ______f___825.__annonCompField3.miss_hit[______r___1] = ______f___825.__annonCompField3.miss_hit[______r___1] + 1UL;
#line 291
  if (______r___1) {
#line 294
    status = (acpi_status )(1 | 0);
#line 295
    goto end;
  } else {

  }
#line 298
  i = 0;
#line 298
  while (1) {
#line 298
    if ((u32 )i < hkey->package.count) {

    } else {
#line 298
      break;
    }
#line 299
    element = hkey->package.elements + i;
#line 300
    tmp___2 = __builtin_expect(! (! (element->type == (acpi_object_type )1)), 1);
#line 300
    ______r___5 = tmp___2;
#line 300
    ftrace_likely_update(& ______f___829, ______r___5, 1);
#line 300
    if (______r___5) {
#line 300
      tmp___3 = 1;
    } else {
#line 300
      tmp___3 = 0;
    }
#line 300
    ______r___4 = tmp___3;
#line 300
    ______f___828.__annonCompField3.miss_hit[______r___4] = ______f___828.__annonCompField3.miss_hit[______r___4] + 1UL;
#line 300
    if (______r___4) {
#line 301
      *(sinf + i) = element->integer.value;
    } else {

    }
#line 298
    i = i + 1;
  }
#line 306
  *(sinf + hkey->package.count) = -1;
  end: 
#line 309
  kfree(buffer.pointer);
#line 310
  return (status == (acpi_status )0);
}
}
#line 324
static int bl_get(struct backlight_device *bd ) ;
#line 324 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___830  __attribute__((__section__("_ftrace_branch")))  =    {"bl_get",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    324, {{0UL, 0UL}}};
#line 320 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int bl_get(struct backlight_device *bd ) 
{ 
  struct pcc_acpi *pcc ;
  void *tmp ;
  int ______r ;
  int tmp___4 ;
  int tmp___5 ;

  {
#line 322
  tmp = bl_get_data(bd);
#line 322
  pcc = tmp;
#line 324
  tmp___4 = acpi_pcc_retrieve_biosdata(pcc, pcc->sinf);
#line 324
  if (tmp___4) {
#line 324
    tmp___5 = 0;
  } else {
#line 324
    tmp___5 = 1;
  }
#line 324
  ______r = tmp___5;
#line 324
  ______f___830.__annonCompField3.miss_hit[______r] = ______f___830.__annonCompField3.miss_hit[______r] + 1UL;
#line 324
  if (______r) {
#line 325
    return (-5);
  } else {

  }
#line 327
  return (*(pcc->sinf + SINF_AC_CUR_BRIGHT));
}
}
#line 336
static int bl_set_status(struct backlight_device *bd ) ;
#line 336 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___831  __attribute__((__section__("_ftrace_branch")))  =    {"bl_set_status",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    336, {{0UL, 0UL}}};
#line 339 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___832  __attribute__((__section__("_ftrace_branch")))  =    {"bl_set_status",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    339, {{0UL, 0UL}}};
#line 342 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___833  __attribute__((__section__("_ftrace_branch")))  =    {"bl_set_status",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    342, {{0UL, 0UL}}};
#line 345 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___834  __attribute__((__section__("_ftrace_branch")))  =    {"bl_set_status",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    346, {{0UL, 0UL}}};
#line 350 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___835  __attribute__((__section__("_ftrace_branch")))  =    {"bl_set_status",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    350, {{0UL, 0UL}}};
#line 330 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int bl_set_status(struct backlight_device *bd ) 
{ 
  struct pcc_acpi *pcc ;
  void *tmp ;
  int bright ;
  int rc ;
  int ______r ;
  int tmp___4 ;
  int tmp___5 ;
  int ______r___0 ;
  int ______r___1 ;
  int ______r___2 ;
  int ______r___3 ;
  int tmp___6 ;

  {
#line 332
  tmp = bl_get_data(bd);
#line 332
  pcc = tmp;
#line 333
  bright = bd->props.brightness;
#line 336
  tmp___4 = acpi_pcc_retrieve_biosdata(pcc, pcc->sinf);
#line 336
  if (tmp___4) {
#line 336
    tmp___5 = 0;
  } else {
#line 336
    tmp___5 = 1;
  }
#line 336
  ______r = tmp___5;
#line 336
  ______f___831.__annonCompField3.miss_hit[______r] = ______f___831.__annonCompField3.miss_hit[______r] + 1UL;
#line 336
  if (______r) {
#line 337
    return (-5);
  } else {

  }
#line 339
  ______r___0 = ! (! ((u32 )bright < *(pcc->sinf + SINF_AC_MIN_BRIGHT)));
#line 339
  ______f___832.__annonCompField3.miss_hit[______r___0] = ______f___832.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 339
  if (______r___0) {
#line 340
    bright = *(pcc->sinf + SINF_AC_MIN_BRIGHT);
  } else {

  }
#line 342
  ______r___1 = ! (! ((u32 )bright < *(pcc->sinf + SINF_DC_MIN_BRIGHT)));
#line 342
  ______f___833.__annonCompField3.miss_hit[______r___1] = ______f___833.__annonCompField3.miss_hit[______r___1] + 1UL;
#line 342
  if (______r___1) {
#line 343
    bright = *(pcc->sinf + SINF_DC_MIN_BRIGHT);
  } else {

  }
#line 345
  ______r___2 = ! (! ((u32 )bright < *(pcc->sinf + SINF_AC_MIN_BRIGHT) || (u32 )bright > *(pcc->sinf + SINF_AC_MAX_BRIGHT)));
#line 345
  ______f___834.__annonCompField3.miss_hit[______r___2] = ______f___834.__annonCompField3.miss_hit[______r___2] + 1UL;
#line 345
  if (______r___2) {
#line 347
    return (-22);
  } else {

  }
#line 349
  rc = acpi_pcc_write_sset(pcc, SINF_AC_CUR_BRIGHT, bright);
#line 350
  ______r___3 = ! (! (rc < 0));
#line 350
  ______f___835.__annonCompField3.miss_hit[______r___3] = ______f___835.__annonCompField3.miss_hit[______r___3] + 1UL;
#line 350
  if (______r___3) {
#line 351
    return (rc);
  } else {

  }
#line 353
  tmp___6 = acpi_pcc_write_sset(pcc, SINF_DC_CUR_BRIGHT, bright);
#line 353
  return (tmp___6);
}
}
#line 356 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct backlight_ops pcc_backlight_ops  =    {0U, & bl_set_status, & bl_get, 0};
#line 370
static ssize_t show_numbatt(struct device *dev , struct device_attribute *attr , char *buf ) ;
#line 370 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___836  __attribute__((__section__("_ftrace_branch")))  =    {"show_numbatt",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    370, {{0UL, 0UL}}};
#line 364 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static ssize_t show_numbatt(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct acpi_device *acpi ;
  struct device  const  *__mptr ;
  struct pcc_acpi *pcc ;
  void *tmp ;
  int ______r ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;

  {
#line 367
  __mptr = dev;
#line 367
  acpi = (struct acpi_device *)((char *)__mptr - (unsigned int )(& ((struct acpi_device *)0)->dev));
#line 368
  tmp = acpi_driver_data(acpi);
#line 368
  pcc = tmp;
#line 370
  tmp___4 = acpi_pcc_retrieve_biosdata(pcc, pcc->sinf);
#line 370
  if (tmp___4) {
#line 370
    tmp___5 = 0;
  } else {
#line 370
    tmp___5 = 1;
  }
#line 370
  ______r = tmp___5;
#line 370
  ______f___836.__annonCompField3.miss_hit[______r] = ______f___836.__annonCompField3.miss_hit[______r] + 1UL;
#line 370
  if (______r) {
#line 371
    return (-5);
  } else {

  }
#line 373
  tmp___6 = snprintf(buf, 1UL << 12, "%u\n", *(pcc->sinf + SINF_NUM_BATTERIES));
#line 373
  return (tmp___6);
}
}
#line 382
static ssize_t show_lcdtype(struct device *dev , struct device_attribute *attr , char *buf ) ;
#line 382 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___837  __attribute__((__section__("_ftrace_branch")))  =    {"show_lcdtype",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    382, {{0UL, 0UL}}};
#line 376 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static ssize_t show_lcdtype(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct acpi_device *acpi ;
  struct device  const  *__mptr ;
  struct pcc_acpi *pcc ;
  void *tmp ;
  int ______r ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;

  {
#line 379
  __mptr = dev;
#line 379
  acpi = (struct acpi_device *)((char *)__mptr - (unsigned int )(& ((struct acpi_device *)0)->dev));
#line 380
  tmp = acpi_driver_data(acpi);
#line 380
  pcc = tmp;
#line 382
  tmp___4 = acpi_pcc_retrieve_biosdata(pcc, pcc->sinf);
#line 382
  if (tmp___4) {
#line 382
    tmp___5 = 0;
  } else {
#line 382
    tmp___5 = 1;
  }
#line 382
  ______r = tmp___5;
#line 382
  ______f___837.__annonCompField3.miss_hit[______r] = ______f___837.__annonCompField3.miss_hit[______r] + 1UL;
#line 382
  if (______r) {
#line 383
    return (-5);
  } else {

  }
#line 385
  tmp___6 = snprintf(buf, 1UL << 12, "%u\n", *(pcc->sinf + SINF_LCD_TYPE));
#line 385
  return (tmp___6);
}
}
#line 394
static ssize_t show_mute(struct device *dev , struct device_attribute *attr , char *buf ) ;
#line 394 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___838  __attribute__((__section__("_ftrace_branch")))  =    {"show_mute",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    394, {{0UL, 0UL}}};
#line 388 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static ssize_t show_mute(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct acpi_device *acpi ;
  struct device  const  *__mptr ;
  struct pcc_acpi *pcc ;
  void *tmp ;
  int ______r ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;

  {
#line 391
  __mptr = dev;
#line 391
  acpi = (struct acpi_device *)((char *)__mptr - (unsigned int )(& ((struct acpi_device *)0)->dev));
#line 392
  tmp = acpi_driver_data(acpi);
#line 392
  pcc = tmp;
#line 394
  tmp___4 = acpi_pcc_retrieve_biosdata(pcc, pcc->sinf);
#line 394
  if (tmp___4) {
#line 394
    tmp___5 = 0;
  } else {
#line 394
    tmp___5 = 1;
  }
#line 394
  ______r = tmp___5;
#line 394
  ______f___838.__annonCompField3.miss_hit[______r] = ______f___838.__annonCompField3.miss_hit[______r] + 1UL;
#line 394
  if (______r) {
#line 395
    return (-5);
  } else {

  }
#line 397
  tmp___6 = snprintf(buf, 1UL << 12, "%u\n", *(pcc->sinf + SINF_MUTE));
#line 397
  return (tmp___6);
}
}
#line 406
static ssize_t show_sticky(struct device *dev , struct device_attribute *attr , char *buf ) ;
#line 406 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___839  __attribute__((__section__("_ftrace_branch")))  =    {"show_sticky",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    406, {{0UL, 0UL}}};
#line 400 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static ssize_t show_sticky(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct acpi_device *acpi ;
  struct device  const  *__mptr ;
  struct pcc_acpi *pcc ;
  void *tmp ;
  int ______r ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;

  {
#line 403
  __mptr = dev;
#line 403
  acpi = (struct acpi_device *)((char *)__mptr - (unsigned int )(& ((struct acpi_device *)0)->dev));
#line 404
  tmp = acpi_driver_data(acpi);
#line 404
  pcc = tmp;
#line 406
  tmp___4 = acpi_pcc_retrieve_biosdata(pcc, pcc->sinf);
#line 406
  if (tmp___4) {
#line 406
    tmp___5 = 0;
  } else {
#line 406
    tmp___5 = 1;
  }
#line 406
  ______r = tmp___5;
#line 406
  ______f___839.__annonCompField3.miss_hit[______r] = ______f___839.__annonCompField3.miss_hit[______r] + 1UL;
#line 406
  if (______r) {
#line 407
    return (-5);
  } else {

  }
#line 409
  tmp___6 = snprintf(buf, 1UL << 12, "%u\n", *(pcc->sinf + SINF_STICKY_KEY));
#line 409
  return (tmp___6);
}
}
#line 419
static ssize_t set_sticky(struct device *dev , struct device_attribute *attr , char const   *buf ,
                          size_t count ) ;
#line 419 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___840  __attribute__((__section__("_ftrace_branch")))  =    {"set_sticky",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    420, {{0UL, 0UL}}};
#line 412 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static ssize_t set_sticky(struct device *dev , struct device_attribute *attr , char const   *buf ,
                          size_t count ) 
{ 
  struct acpi_device *acpi ;
  struct device  const  *__mptr ;
  struct pcc_acpi *pcc ;
  void *tmp ;
  int val ;
  int ______r ;
  int tmp___4 ;
  int tmp___5 ;

  {
#line 415
  __mptr = dev;
#line 415
  acpi = (struct acpi_device *)((char *)__mptr - (unsigned int )(& ((struct acpi_device *)0)->dev));
#line 416
  tmp = acpi_driver_data(acpi);
#line 416
  pcc = tmp;
#line 419
  if (count) {
#line 419
    tmp___4 = sscanf(buf, "%i", & val);
#line 419
    if (tmp___4 == 1) {
#line 419
      if (val == 0 || val == 1) {
#line 419
        tmp___5 = 1;
      } else {
#line 419
        tmp___5 = 0;
      }
    } else {
#line 419
      tmp___5 = 0;
    }
  } else {
#line 419
    tmp___5 = 0;
  }
#line 419
  ______r = tmp___5;
#line 419
  ______f___840.__annonCompField3.miss_hit[______r] = ______f___840.__annonCompField3.miss_hit[______r] + 1UL;
#line 419
  if (______r) {
#line 421
    acpi_pcc_write_sset(pcc, SINF_STICKY_KEY, val);
#line 422
    pcc->sticky_mode = val;
  } else {

  }
#line 425
  return (count);
}
}
#line 428 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct device_attribute dev_attr_numbatt  =    {{"numbatt", 0, (256 | 32) | 4}, & show_numbatt, (void *)0};
#line 429 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct device_attribute dev_attr_lcdtype  =    {{"lcdtype", 0, (256 | 32) | 4}, & show_lcdtype, (void *)0};
#line 430 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct device_attribute dev_attr_mute  =    {{"mute", 0, (256 | 32) | 4}, & show_mute, (void *)0};
#line 431 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct device_attribute dev_attr_sticky_key  =    {{"sticky_key", 0, ((256 | 32) | 4) | 128}, & show_sticky, & set_sticky};
#line 433 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct attribute *pcc_sysfs_entries[5]  = {      & dev_attr_numbatt.attr,      & dev_attr_lcdtype.attr,      & dev_attr_mute.attr,      & dev_attr_sticky_key.attr, 
        (void *)0};
#line 441 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct attribute_group pcc_attr_group  =    {(void *)0, 0, pcc_sysfs_entries};
#line 453
static int pcc_getkeycode(struct input_dev *dev , int scancode , int *keycode ) ;
#line 453 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___841  __attribute__((__section__("_ftrace_branch")))  =    {"pcc_getkeycode",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    453, {{0UL, 0UL}}};
#line 449 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int pcc_getkeycode(struct input_dev *dev , int scancode , int *keycode ) 
{ 
  struct pcc_acpi *pcc ;
  void *tmp ;
  int ______r ;

  {
#line 451
  tmp = input_get_drvdata(dev);
#line 451
  pcc = tmp;
#line 453
  ______r = ! (! ((unsigned long )scancode >= sizeof(pcc->keymap) / sizeof(pcc->keymap[0]) + (sizeof(char [1 - 2 * 0]) - 1UL)));
#line 453
  ______f___841.__annonCompField3.miss_hit[______r] = ______f___841.__annonCompField3.miss_hit[______r] + 1UL;
#line 453
  if (______r) {
#line 454
    return (-22);
  } else {

  }
#line 456
  *keycode = pcc->keymap[scancode];
#line 458
  return (0);
}
}
#line 466
static int keymap_get_by_keycode(struct pcc_acpi *pcc , int keycode ) ;
#line 466 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___842  __attribute__((__section__("_ftrace_branch")))  =    {"keymap_get_by_keycode",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    466, {{0UL, 0UL}}};
#line 461 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int keymap_get_by_keycode(struct pcc_acpi *pcc , int keycode ) 
{ 
  int i ;
  int ______r ;

  {
#line 465
  i = 0;
#line 465
  while (1) {
#line 465
    if ((unsigned long )i < sizeof(pcc->keymap) / sizeof(pcc->keymap[0]) + (sizeof(char [1 - 2 * 0]) - 1UL)) {

    } else {
#line 465
      break;
    }
#line 466
    ______r = ! (! (pcc->keymap[i] == keycode));
#line 466
    ______f___842.__annonCompField3.miss_hit[______r] = ______f___842.__annonCompField3.miss_hit[______r] + 1UL;
#line 466
    if (______r) {
#line 467
      return (i + 1);
    } else {

    }
#line 465
    i = i + 1;
  }
#line 470
  return (0);
}
}
#line 478
static int pcc_setkeycode(struct input_dev *dev , int scancode , int keycode ) ;
#line 478 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___843  __attribute__((__section__("_ftrace_branch")))  =    {"pcc_setkeycode",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    478, {{0UL, 0UL}}};
#line 481 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___844  __attribute__((__section__("_ftrace_branch")))  =    {"pcc_setkeycode",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    481, {{0UL, 0UL}}};
#line 489 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___845  __attribute__((__section__("_ftrace_branch")))  =    {"pcc_setkeycode",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    489, {{0UL, 0UL}}};
#line 473 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int pcc_setkeycode(struct input_dev *dev , int scancode , int keycode ) 
{ 
  struct pcc_acpi *pcc ;
  void *tmp ;
  int oldkeycode ;
  int ______r ;
  int ______r___0 ;
  int ______r___1 ;
  int tmp___4 ;
  int tmp___5 ;

  {
#line 475
  tmp = input_get_drvdata(dev);
#line 475
  pcc = tmp;
#line 478
  ______r = ! (! ((unsigned long )scancode >= sizeof(pcc->keymap) / sizeof(pcc->keymap[0]) + (sizeof(char [1 - 2 * 0]) - 1UL)));
#line 478
  ______f___843.__annonCompField3.miss_hit[______r] = ______f___843.__annonCompField3.miss_hit[______r] + 1UL;
#line 478
  if (______r) {
#line 479
    return (-22);
  } else {

  }
#line 481
  ______r___0 = ! (! (keycode < 0 || keycode > 767));
#line 481
  ______f___844.__annonCompField3.miss_hit[______r___0] = ______f___844.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 481
  if (______r___0) {
#line 482
    return (-22);
  } else {

  }
#line 484
  oldkeycode = pcc->keymap[scancode];
#line 485
  pcc->keymap[scancode] = keycode;
#line 487
  set_bit(keycode, dev->keybit);
#line 489
  tmp___4 = keymap_get_by_keycode(pcc, oldkeycode);
#line 489
  if (tmp___4) {
#line 489
    tmp___5 = 0;
  } else {
#line 489
    tmp___5 = 1;
  }
#line 489
  ______r___1 = tmp___5;
#line 489
  ______f___845.__annonCompField3.miss_hit[______r___1] = ______f___845.__annonCompField3.miss_hit[______r___1] + 1UL;
#line 489
  if (______r___1) {
#line 490
    clear_bit(oldkeycode, dev->keybit);
  } else {

  }
#line 492
  return (0);
}
}
#line 504
static void acpi_pcc_generate_keyinput(struct pcc_acpi *pcc ) ;
#line 504 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___846  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_generate_keyinput",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    504, {{0UL, 0UL}}};
#line 514 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___847  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_generate_keyinput",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    514, {{0UL, 0UL}}};
#line 523 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___848  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_generate_keyinput",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    523, {{0UL, 0UL}}};
#line 495 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static void acpi_pcc_generate_keyinput(struct pcc_acpi *pcc ) 
{ 
  struct input_dev *hotk_input_dev ;
  int rc ;
  int key_code ;
  int hkey_num ;
  unsigned long long result ;
  acpi_status tmp ;
  int ______r ;
  int ______r___0 ;
  int pushed ;
  int ______r___1 ;

  {
#line 497
  hotk_input_dev = pcc->input_dev;
#line 502
  tmp = acpi_evaluate_integer(pcc->handle, "HINF", (void *)0, & result);
#line 502
  rc = tmp;
#line 504
  ______r = ! (! (! (! rc)));
#line 504
  ______f___846.__annonCompField3.miss_hit[______r] = ______f___846.__annonCompField3.miss_hit[______r] + 1UL;
#line 504
  if (______r) {
#line 507
    return;
  } else {

  }
#line 510
  acpi_bus_generate_proc_event(pcc->device, 128, result);
#line 512
  hkey_num = result & 15ULL;
#line 514
  ______r___0 = ! (! (hkey_num < 0 || (unsigned long )hkey_num >= sizeof(pcc->keymap) / sizeof(pcc->keymap[0]) + (sizeof(char [1 - 2 * 0]) - 1UL)));
#line 514
  ______f___847.__annonCompField3.miss_hit[______r___0] = ______f___847.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 514
  if (______r___0) {
#line 518
    return;
  } else {

  }
#line 521
  key_code = pcc->keymap[hkey_num];
#line 523
  ______r___1 = ! (! (key_code != 0));
#line 523
  ______f___848.__annonCompField3.miss_hit[______r___1] = ______f___848.__annonCompField3.miss_hit[______r___1] + 1UL;
#line 523
  if (______r___1) {
#line 524
    pushed = result & 128ULL ? 1 == 1 : 1 == 0;
#line 526
    input_report_key(hotk_input_dev, key_code, pushed);
#line 527
    input_sync(hotk_input_dev);
  } else {

  }
#line 530
  return;
}
}
#line 533 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static void acpi_pcc_hotkey_notify(struct acpi_device *device , u32 event ) 
{ 
  struct pcc_acpi *pcc ;
  void *tmp ;

  {
#line 535
  tmp = acpi_driver_data(device);
#line 535
  pcc = tmp;
#line 537
  switch (event) {
  case (u32 )128: 
#line 539
  acpi_pcc_generate_keyinput(pcc);
#line 540
  break;
  default: 
#line 543
  break;
  }
#line 545
  return;
}
}
#line 552
static int acpi_pcc_init_input(struct pcc_acpi *pcc ) ;
#line 552 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___849  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_init_input",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    552, {{0UL, 0UL}}};
#line 570 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___850  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_init_input",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    570, {{0UL, 0UL}}};
#line 579 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___851  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_init_input",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    579, {{0UL, 0UL}}};
#line 547 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int acpi_pcc_init_input(struct pcc_acpi *pcc ) 
{ 
  int i ;
  int rc ;
  int ______r ;
  size_t __len ;
  void *__ret ;
  int ______r___0 ;
  int ______r___1 ;

  {
#line 551
  pcc->input_dev = input_allocate_device();
#line 552
  ______r = ! (! (! pcc->input_dev));
#line 552
  ______f___849.__annonCompField3.miss_hit[______r] = ______f___849.__annonCompField3.miss_hit[______r] + 1UL;
#line 552
  if (______r) {
#line 555
    return (-12);
  } else {

  }
#line 558
  (pcc->input_dev)->evbit[0] = 1UL << 1;
#line 560
  (pcc->input_dev)->name = "Panasonic Laptop Support";
#line 561
  (pcc->input_dev)->phys = "panasonic/hkey0";
#line 562
  (pcc->input_dev)->id.bustype = 25;
#line 563
  (pcc->input_dev)->id.vendor = 1;
#line 564
  (pcc->input_dev)->id.product = 1;
#line 565
  (pcc->input_dev)->id.version = 256;
#line 566
  (pcc->input_dev)->getkeycode = & pcc_getkeycode;
#line 567
  (pcc->input_dev)->setkeycode = & pcc_setkeycode;
#line 570
  __len = sizeof(pcc->keymap);
#line 570
  ______r___0 = ! (! (__len >= (size_t )64));
#line 570
  ______f___850.__annonCompField3.miss_hit[______r___0] = ______f___850.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 570
  if (______r___0) {
#line 570
    __ret = __memcpy(pcc->keymap, initial_keymap, __len);
  } else {
#line 570
    __ret = __builtin_memcpy(pcc->keymap, initial_keymap, __len);
  }
#line 572
  i = 0;
#line 572
  while (1) {
#line 572
    if ((unsigned long )i < sizeof(pcc->keymap) / sizeof(pcc->keymap[0]) + (sizeof(char [1 - 2 * 0]) - 1UL)) {

    } else {
#line 572
      break;
    }
#line 573
    __set_bit(pcc->keymap[i], (pcc->input_dev)->keybit);
#line 572
    i = i + 1;
  }
#line 574
  __clear_bit(0, (pcc->input_dev)->keybit);
#line 576
  input_set_drvdata(pcc->input_dev, pcc);
#line 578
  rc = input_register_device(pcc->input_dev);
#line 579
  ______r___1 = ! (! (rc < 0));
#line 579
  ______f___851.__annonCompField3.miss_hit[______r___1] = ______f___851.__annonCompField3.miss_hit[______r___1] + 1UL;
#line 579
  if (______r___1) {
#line 580
    input_free_device(pcc->input_dev);
  } else {

  }
#line 582
  return (rc);
}
}
#line 592 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___852  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_resume",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    592, {{0UL, 0UL}}};
#line 587 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int acpi_pcc_hotkey_resume(struct acpi_device *device ) 
{ 
  struct pcc_acpi *pcc ;
  void *tmp ;
  acpi_status status ;
  int ______r ;
  int tmp___0 ;

  {
#line 589
  tmp = acpi_driver_data(device);
#line 589
  pcc = tmp;
#line 590
  status = (acpi_status )0;
#line 592
  ______r = ! (! ((unsigned long )device == (unsigned long )((void *)0) || (unsigned long )pcc == (unsigned long )((void *)0)));
#line 592
  ______f___852.__annonCompField3.miss_hit[______r] = ______f___852.__annonCompField3.miss_hit[______r] + 1UL;
#line 592
  if (______r) {
#line 593
    return (-22);
  } else {

  }
#line 598
  tmp___0 = acpi_pcc_write_sset(pcc, SINF_STICKY_KEY, pcc->sticky_mode);
#line 598
  status = tmp___0;
#line 600
  return (status == (acpi_status )0 ? 0 : -22);
}
}
#line 608 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___853  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_add",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    608, {{0UL, 0UL}}};
#line 613 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___854  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_add",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    613, {{0UL, 0UL}}};
#line 619 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___855  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_add",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    619, {{0UL, 0UL}}};
#line 626 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___856  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_add",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    626, {{0UL, 0UL}}};
#line 639 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___857  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_add",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    639, {{0UL, 0UL}}};
#line 648 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___858  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_add",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    648, {{0UL, 0UL}}};
#line 651 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___859  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_add",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    651, {{0UL, 0UL}}};
#line 667 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___860  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_add",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    667, {{0UL, 0UL}}};
#line 603 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int acpi_pcc_hotkey_add(struct acpi_device *device ) 
{ 
  struct pcc_acpi *pcc ;
  int num_sifr ;
  int result ;
  int ______r ;
  int ______r___0 ;
  void *tmp ;
  int ______r___1 ;
  void *tmp___0 ;
  int ______r___2 ;
  int ______r___3 ;
  int ______r___4 ;
  long tmp___4 ;
  int tmp___5 ;
  int ______r___5 ;
  int tmp___10 ;
  int tmp___11 ;
  int ______r___6 ;

  {
#line 608
  ______r = ! (! (! device));
#line 608
  ______f___853.__annonCompField3.miss_hit[______r] = ______f___853.__annonCompField3.miss_hit[______r] + 1UL;
#line 608
  if (______r) {
#line 609
    return (-22);
  } else {

  }
#line 611
  num_sifr = acpi_pcc_get_sqty(device);
#line 613
  ______r___0 = ! (! (num_sifr > 255));
#line 613
  ______f___854.__annonCompField3.miss_hit[______r___0] = ______f___854.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 613
  if (______r___0) {
#line 615
    return (-19);
  } else {

  }
#line 618
  tmp = kzalloc(sizeof(struct pcc_acpi ), (16U | 64U) | 128U);
#line 618
  pcc = tmp;
#line 619
  ______r___1 = ! (! (! pcc));
#line 619
  ______f___855.__annonCompField3.miss_hit[______r___1] = ______f___855.__annonCompField3.miss_hit[______r___1] + 1UL;
#line 619
  if (______r___1) {
#line 622
    return (-12);
  } else {

  }
#line 625
  tmp___0 = kzalloc(sizeof(u32 ) * (unsigned long )(num_sifr + 1), (16U | 64U) | 128U);
#line 625
  pcc->sinf = tmp___0;
#line 626
  ______r___2 = ! (! (! pcc->sinf));
#line 626
  ______f___856.__annonCompField3.miss_hit[______r___2] = ______f___856.__annonCompField3.miss_hit[______r___2] + 1UL;
#line 626
  if (______r___2) {
#line 627
    result = -12;
#line 628
    goto out_hotkey;
  } else {

  }
#line 631
  pcc->device = device;
#line 632
  pcc->handle = device->handle;
#line 633
  pcc->num_sifr = num_sifr;
#line 634
  device->driver_data = pcc;
#line 635
  strcpy(device->pnp.device_name, "Hotkey");
#line 636
  strcpy(device->pnp.device_class, "pcc");
#line 638
  result = acpi_pcc_init_input(pcc);
#line 639
  ______r___3 = ! (! result);
#line 639
  ______f___857.__annonCompField3.miss_hit[______r___3] = ______f___857.__annonCompField3.miss_hit[______r___3] + 1UL;
#line 639
  if (______r___3) {
#line 642
    goto out_sinf;
  } else {

  }
#line 646
  pcc->backlight = backlight_device_register("panasonic", (void *)0, pcc, & pcc_backlight_ops);
#line 648
  tmp___4 = IS_ERR(pcc->backlight);
#line 648
  if (tmp___4) {
#line 648
    tmp___5 = 1;
  } else {
#line 648
    tmp___5 = 0;
  }
#line 648
  ______r___4 = tmp___5;
#line 648
  ______f___858.__annonCompField3.miss_hit[______r___4] = ______f___858.__annonCompField3.miss_hit[______r___4] + 1UL;
#line 648
  if (______r___4) {
#line 649
    goto out_input;
  } else {

  }
#line 651
  tmp___10 = acpi_pcc_retrieve_biosdata(pcc, pcc->sinf);
#line 651
  if (tmp___10) {
#line 651
    tmp___11 = 0;
  } else {
#line 651
    tmp___11 = 1;
  }
#line 651
  ______r___5 = tmp___11;
#line 651
  ______f___859.__annonCompField3.miss_hit[______r___5] = ______f___859.__annonCompField3.miss_hit[______r___5] + 1UL;
#line 651
  if (______r___5) {
#line 654
    goto out_backlight;
  } else {

  }
#line 658
  (pcc->backlight)->props.max_brightness = *(pcc->sinf + SINF_AC_MAX_BRIGHT);
#line 660
  (pcc->backlight)->props.brightness = *(pcc->sinf + SINF_AC_CUR_BRIGHT);
#line 663
  pcc->sticky_mode = *(pcc->sinf + SINF_STICKY_KEY);
#line 666
  result = sysfs_create_group(& device->dev.kobj, & pcc_attr_group);
#line 667
  ______r___6 = ! (! result);
#line 667
  ______f___860.__annonCompField3.miss_hit[______r___6] = ______f___860.__annonCompField3.miss_hit[______r___6] + 1UL;
#line 667
  if (______r___6) {
#line 668
    goto out_backlight;
  } else {

  }
#line 670
  return (0);
  out_backlight: 
#line 673
  backlight_device_unregister(pcc->backlight);
  out_input: 
#line 675
  input_unregister_device(pcc->input_dev);
  out_sinf: 
#line 679
  kfree(pcc->sinf);
  out_hotkey: 
#line 681
  kfree(pcc);
#line 683
  return (result);
}
}
#line 690
static int acpi_pcc_init(void)  __attribute__((__section__(".init.text"), __no_instrument_function__)) ;
#line 690 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___861  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_init",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    690, {{0UL, 0UL}}};
#line 694 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___862  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_init",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    694, {{0UL, 0UL}}};
#line 686
static int acpi_pcc_init(void)  __attribute__((__section__(".init.text"), __no_instrument_function__)) ;
#line 686 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int acpi_pcc_init(void) 
{ 
  int result ;
  int ______r ;
  int ______r___0 ;

  {
#line 688
  result = 0;
#line 690
  ______r = ! (! acpi_disabled);
#line 690
  ______f___861.__annonCompField3.miss_hit[______r] = ______f___861.__annonCompField3.miss_hit[______r] + 1UL;
#line 690
  if (______r) {
#line 691
    return (-19);
  } else {

  }
#line 693
  result = acpi_bus_register_driver(& acpi_pcc_driver);
#line 694
  ______r___0 = ! (! (result < 0));
#line 694
  ______f___862.__annonCompField3.miss_hit[______r___0] = ______f___862.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 694
  if (______r___0) {
#line 697
    return (-19);
  } else {

  }
#line 700
  return (0);
}
}
#line 707 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___863  __attribute__((__section__("_ftrace_branch")))  =    {"acpi_pcc_hotkey_remove",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    707, {{0UL, 0UL}}};
#line 703 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static int acpi_pcc_hotkey_remove(struct acpi_device *device , int type ) 
{ 
  struct pcc_acpi *pcc ;
  void *tmp ;
  int ______r ;

  {
#line 705
  tmp = acpi_driver_data(device);
#line 705
  pcc = tmp;
#line 707
  ______r = ! (! (! device || ! pcc));
#line 707
  ______f___863.__annonCompField3.miss_hit[______r] = ______f___863.__annonCompField3.miss_hit[______r] + 1UL;
#line 707
  if (______r) {
#line 708
    return (-22);
  } else {

  }
#line 710
  sysfs_remove_group(& device->dev.kobj, & pcc_attr_group);
#line 712
  backlight_device_unregister(pcc->backlight);
#line 714
  input_unregister_device(pcc->input_dev);
#line 718
  kfree(pcc->sinf);
#line 719
  kfree(pcc);
#line 721
  return (0);
}
}
#line 724
static void acpi_pcc_exit(void)  __attribute__((__section__(".exit.text"))) ;
#line 724 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static void acpi_pcc_exit(void) 
{ 


  {
#line 726
  acpi_bus_unregister_driver(& acpi_pcc_driver);
#line 727
  return;
}
}
#line 729 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
int init_module(void) 
{ 
  int tmp ;

  {
#line 729
  tmp = acpi_pcc_init();
#line 729
  return (tmp);
}
}
#line 730 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
void cleanup_module(void) 
{ 


  {
#line 730
  acpi_pcc_exit();
#line 730
  return;
}
}
#line 748
void ldv_check_final_state(void) ;
#line 757
extern void ldv_initialize(void) ;
#line 760
extern void ldv_handler_precall(void) ;
#line 763
extern int nondet_int(void) ;
#line 766 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
int LDV_IN_INTERRUPT  ;
#line 933
void ldv_main0_sequence_infinite_withcheck_stateful(void) ;
#line 933 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___864  __attribute__((__section__("_ftrace_branch")))  =    {"ldv_main0_sequence_infinite_withcheck_stateful",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    933, {{0UL, 0UL}}};
#line 950 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___865  __attribute__((__section__("_ftrace_branch")))  =    {"ldv_main0_sequence_infinite_withcheck_stateful",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c",
    950, {{0UL, 0UL}}};
#line 769 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/68_1/drivers/platform/x86/panasonic-laptop.c"
void ldv_main0_sequence_infinite_withcheck_stateful(void) 
{ 
  struct acpi_device *var_group1 ;
  int var_acpi_pcc_hotkey_remove_19_p1 ;
  u32 var_acpi_pcc_hotkey_notify_14_p1 ;
  struct backlight_device *var_group2 ;
  int ______r ;
  int tmp___2 ;
  int tmp___3 ;
  int ldv_s_acpi_pcc_driver_acpi_driver ;
  int tmp___4 ;
  int ______r___0 ;
  int tmp___5 ;

  {
#line 901
  LDV_IN_INTERRUPT = 1;
#line 910
  ldv_initialize();
#line 932
  ldv_handler_precall();
#line 933
  tmp___2 = acpi_pcc_init();
#line 933
  if (tmp___2) {
#line 933
    tmp___3 = 1;
  } else {
#line 933
    tmp___3 = 0;
  }
#line 933
  ______r = tmp___3;
#line 933
  ______f___864.__annonCompField3.miss_hit[______r] = ______f___864.__annonCompField3.miss_hit[______r] + 1UL;
#line 933
  if (______r) {
#line 934
    goto ldv_final;
  } else {

  }
#line 935
  ldv_s_acpi_pcc_driver_acpi_driver = 0;
#line 941
  while (1) {
#line 941
    tmp___5 = nondet_int();
#line 941
    if (tmp___5 || ! (ldv_s_acpi_pcc_driver_acpi_driver == 0)) {

    } else {
#line 941
      break;
    }
#line 945
    tmp___4 = nondet_int();
#line 945
    switch (tmp___4) {
    case 0: 
#line 950
    ______r___0 = ! (! (ldv_s_acpi_pcc_driver_acpi_driver == 0));
#line 950
    ______f___865.__annonCompField3.miss_hit[______r___0] = ______f___865.__annonCompField3.miss_hit[______r___0] + 1UL;
#line 950
    if (______r___0) {
#line 971
      ldv_handler_precall();
#line 972
      acpi_pcc_hotkey_remove(var_group1, var_acpi_pcc_hotkey_remove_19_p1);
#line 973
      ldv_s_acpi_pcc_driver_acpi_driver = 0;
    } else {

    }
#line 979
    break;
    case 1: 
#line 1004
    ldv_handler_precall();
#line 1005
    acpi_pcc_hotkey_add(var_group1);
#line 1012
    break;
    case 2: 
#line 1037
    ldv_handler_precall();
#line 1038
    acpi_pcc_hotkey_resume(var_group1);
#line 1045
    break;
    case 3: 
#line 1070
    ldv_handler_precall();
#line 1071
    acpi_pcc_hotkey_notify(var_group1, var_acpi_pcc_hotkey_notify_14_p1);
#line 1078
    break;
    case 4: 
#line 1103
    ldv_handler_precall();
#line 1104
    bl_get(var_group2);
#line 1111
    break;
    case 5: 
#line 1136
    ldv_handler_precall();
#line 1137
    bl_set_status(var_group2);
#line 1144
    break;
    default: 
#line 1145
    break;
    }
  }
#line 1173
  ldv_handler_precall();
#line 1174
  acpi_pcc_exit();
  ldv_final: 
#line 1177
  ldv_check_final_state();
#line 1180
  return;
}
}
#line 1299 "include/linux/usb.h"
struct urb *usb_alloc_urb(int iso_packets , gfp_t mem_flags ) ;
#line 1300
void usb_free_urb(struct urb *urb ) ;
#line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
__inline static void ldv_error(void) 
{ 


  {
  LDV_ERROR: 
#line 12
  goto LDV_ERROR;
}
}
#line 20 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
__inline static void ldv_stop(void) 
{ 


  {
  LDV_STOP: 
#line 21
  goto LDV_STOP;
}
}
#line 26
extern void *ldv_undef_ptr(void) ;
#line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 51
  return (exp);
}
}
#line 12 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
int ldv_urb_state  =    0;
#line 14 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
int ldv_coherent_state  =    0;
#line 47
void *usb_alloc_coherent(struct usb_device *dev , size_t size , gfp_t mem_flags ,
                         dma_addr_t *dma ) ;
#line 47 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___810  __attribute__((__section__("_ftrace_branch")))  =    {"usb_alloc_coherent",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c",
    47, {{0UL, 0UL}}};
#line 45 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
void *usb_alloc_coherent(struct usb_device *dev , size_t size , gfp_t mem_flags ,
                         dma_addr_t *dma ) 
{ 
  void *arbitrary_memory ;
  void *tmp ;
  int ______r ;

  {
#line 47
  while (1) {
#line 47
    tmp = ldv_undef_ptr();
#line 47
    arbitrary_memory = tmp;
#line 47
    ______r = ! (! (! arbitrary_memory));
#line 47
    ______f___810.__annonCompField3.miss_hit[______r] = ______f___810.__annonCompField3.miss_hit[______r] + 1UL;
#line 47
    if (______r) {
#line 47
      return ((void *)0);
    } else {

    }
#line 47
    ldv_coherent_state = ldv_coherent_state + 1;
#line 47
    return (arbitrary_memory);
#line 47
    break;
  }
#line 48
  return ((void *)0);
}
}
#line 53
void usb_free_coherent(struct usb_device *dev , size_t size , void *addr , dma_addr_t dma ) ;
#line 53 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___811  __attribute__((__section__("_ftrace_branch")))  =    {"usb_free_coherent",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c",
    53, {{0UL, 0UL}}};
#line 51 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
void usb_free_coherent(struct usb_device *dev , size_t size , void *addr , dma_addr_t dma ) 
{ 
  int ______r ;

  {
#line 53
  while (1) {
#line 53
    if ((unsigned long )addr != (unsigned long )((void *)0)) {

    } else {
#line 53
      ldv_stop();
    }
#line 53
    ______r = ! (! addr);
#line 53
    ______f___811.__annonCompField3.miss_hit[______r] = ______f___811.__annonCompField3.miss_hit[______r] + 1UL;
#line 53
    if (______r) {
#line 53
      if (ldv_coherent_state >= 1) {

      } else {
#line 53
        ldv_error();
      }
#line 53
      ldv_coherent_state = ldv_coherent_state - 1;
    } else {

    }
#line 53
    break;
  }
#line 54
  return;
}
}
#line 58 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___812  __attribute__((__section__("_ftrace_branch")))  =    {"usb_alloc_urb",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c",
    58, {{0UL, 0UL}}};
#line 57 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
struct urb *usb_alloc_urb(int iso_packets , gfp_t mem_flags ) 
{ 
  void *arbitrary_memory ;
  void *tmp ;
  int ______r ;

  {
#line 58
  while (1) {
#line 58
    tmp = ldv_undef_ptr();
#line 58
    arbitrary_memory = tmp;
#line 58
    ______r = ! (! (! arbitrary_memory));
#line 58
    ______f___812.__annonCompField3.miss_hit[______r] = ______f___812.__annonCompField3.miss_hit[______r] + 1UL;
#line 58
    if (______r) {
#line 58
      return ((void *)0);
    } else {

    }
#line 58
    ldv_urb_state = ldv_urb_state + 1;
#line 58
    return (arbitrary_memory);
#line 58
    break;
  }
#line 59
  return ((struct urb *)0);
}
}
#line 63 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
static struct ftrace_branch_data  __attribute__((__aligned__(4))) ______f___813  __attribute__((__section__("_ftrace_branch")))  =    {"usb_free_urb",
    "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c",
    63, {{0UL, 0UL}}};
#line 62 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
void usb_free_urb(struct urb *urb ) 
{ 
  int ______r ;

  {
#line 63
  while (1) {
#line 63
    if ((unsigned long )urb != (unsigned long )((struct urb *)0)) {

    } else {
#line 63
      ldv_stop();
    }
#line 63
    ______r = ! (! urb);
#line 63
    ______f___813.__annonCompField3.miss_hit[______r] = ______f___813.__annonCompField3.miss_hit[______r] + 1UL;
#line 63
    if (______r) {
#line 63
      if (ldv_urb_state >= 1) {

      } else {
#line 63
        ldv_error();
      }
#line 63
      ldv_urb_state = ldv_urb_state - 1;
    } else {

    }
#line 63
    break;
  }
#line 64
  return;
}
}
#line 67 "/work/ldvuser/novikov/work/current--X--drivers/platform/x86/panasonic-laptop.ko--X--defaultlinux--X--68_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/68_1/common-model/ldv_common_model.c"
void ldv_check_final_state(void) 
{ 


  {
#line 69
  if (ldv_urb_state == 0) {

  } else {
#line 69
    ldv_error();
  }
#line 71
  if (ldv_coherent_state == 0) {

  } else {
#line 71
    ldv_error();
  }
#line 72
  return;
}
}
