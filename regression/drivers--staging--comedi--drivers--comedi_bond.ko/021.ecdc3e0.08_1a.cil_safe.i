/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 23 "include/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 26 "include/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "include/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 43 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 45 "include/asm-generic/int-ll64.h"
typedef short s16;
#line 46 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 49 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 51 "include/asm-generic/int-ll64.h"
typedef long long s64;
#line 52 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "include/asm-generic/posix_types.h"
typedef long __kernel_long_t;
#line 15 "include/asm-generic/posix_types.h"
typedef unsigned long __kernel_ulong_t;
#line 75 "include/asm-generic/posix_types.h"
typedef __kernel_ulong_t __kernel_size_t;
#line 76 "include/asm-generic/posix_types.h"
typedef __kernel_long_t __kernel_ssize_t;
#line 91 "include/asm-generic/posix_types.h"
typedef long long __kernel_loff_t;
#line 21 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 24 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 27 "include/linux/types.h"
typedef unsigned short umode_t;
#line 38 "include/linux/types.h"
typedef _Bool bool;
#line 54 "include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 63 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 68 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 155 "include/linux/types.h"
typedef u64 dma_addr_t;
#line 202 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 221 "include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 221 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 226 "include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 226 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 227 "include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 232
struct hlist_node;
#line 232 "include/linux/types.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 236 "include/linux/types.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 55 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
struct module;
#line 146 "include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 46 "include/linux/dynamic_debug.h"
struct device;
#line 57
struct completion;
#line 58 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
struct page;
#line 26 "include/asm-generic/getorder.h"
struct task_struct;
#line 28
struct mm_struct;
#line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 192 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 194 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_16 {
   pgdval_t pgd ;
};
#line 194 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_16 pgd_t;
#line 282 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct page *pgtable_t;
#line 290
struct file;
#line 339
struct cpumask;
#line 327 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
struct arch_spinlock;
#line 306 "include/linux/bitmap.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 89 "include/linux/bug.h"
struct cpumask {
   unsigned long bits[64U] ;
};
#line 637 "include/linux/cpumask.h"
typedef struct cpumask *cpumask_var_t;
#line 234 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
struct static_key;
#line 433 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct kmem_cache;
#line 23 "include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef u16 __ticket_t;
#line 15 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef u32 __ticketpair_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct __raw_tickets {
   __ticket_t head ;
   __ticket_t tail ;
};
#line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
union __anonunion_ldv_5911_29 {
   __ticketpair_t head_tail ;
   struct __raw_tickets tickets ;
};
#line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct arch_spinlock {
   union __anonunion_ldv_5911_29 ldv_5911 ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 34 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwlock.h"
struct lockdep_map;
#line 55 "include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 26 "include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 53 "include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 59 "include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 144 "include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache[2U] ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 556 "include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "include/linux/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 33 "include/linux/spinlock_types.h"
struct __anonstruct_ldv_6126_33 {
   u8 __padding[24U] ;
   struct lockdep_map dep_map ;
};
#line 33 "include/linux/spinlock_types.h"
union __anonunion_ldv_6127_32 {
   struct raw_spinlock rlock ;
   struct __anonstruct_ldv_6126_33 ldv_6126 ;
};
#line 33 "include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_ldv_6127_32 ldv_6127 ;
};
#line 76 "include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 48 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 53 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 98 "include/linux/nodemask.h"
struct __anonstruct_nodemask_t_36 {
   unsigned long bits[16U] ;
};
#line 98 "include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_36 nodemask_t;
#line 670 "include/linux/mmzone.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct task_struct *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 171 "include/linux/mutex.h"
struct rw_semaphore;
#line 172 "include/linux/mutex.h"
struct rw_semaphore {
   long count ;
   raw_spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 128 "include/linux/rwsem.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 181 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/x86_init.h"
struct pci_dev;
#line 312 "include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 59 "include/linux/ktime.h"
typedef union ktime ktime_t;
#line 341
struct tvec_base;
#line 342 "include/linux/ktime.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
   struct lockdep_map lockdep_map ;
};
#line 302 "include/linux/timer.h"
struct work_struct;
#line 45 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 46 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 52 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 53 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_late)(struct device * ) ;
   int (*resume_early)(struct device * ) ;
   int (*freeze_late)(struct device * ) ;
   int (*thaw_early)(struct device * ) ;
   int (*poweroff_late)(struct device * ) ;
   int (*restore_early)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 289
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 296
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_AUTOSUSPEND = 3,
    RPM_REQ_RESUME = 4
} ;
#line 304
struct wakeup_source;
#line 494 "include/linux/pm.h"
struct pm_subsys_data {
   spinlock_t lock ;
   unsigned int refcount ;
};
#line 499
struct dev_pm_qos_request;
#line 499
struct pm_qos_constraints;
#line 499 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned char can_wakeup : 1 ;
   unsigned char async_suspend : 1 ;
   bool is_prepared ;
   bool is_suspended ;
   bool ignore_children ;
   spinlock_t lock ;
   struct list_head entry ;
   struct completion completion ;
   struct wakeup_source *wakeup ;
   bool wakeup_path ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned char disable_depth : 3 ;
   unsigned char idle_notification : 1 ;
   unsigned char request_pending : 1 ;
   unsigned char deferred_resume : 1 ;
   unsigned char run_wake : 1 ;
   unsigned char runtime_auto : 1 ;
   unsigned char no_callbacks : 1 ;
   unsigned char irq_safe : 1 ;
   unsigned char use_autosuspend : 1 ;
   unsigned char timer_autosuspends : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   int autosuspend_delay ;
   unsigned long last_busy ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
   ktime_t suspend_time ;
   s64 max_time_suspended_ns ;
   struct dev_pm_qos_request *pq_req ;
   struct pm_subsys_data *subsys_data ;
   struct pm_qos_constraints *constraints ;
};
#line 558 "include/linux/pm.h"
struct dev_pm_domain {
   struct dev_pm_ops ops ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_101 {
   void *ldt ;
   int size ;
   unsigned short ia32_compat ;
   struct mutex lock ;
   void *vdso ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_101 mm_context_t;
#line 18 "include/asm-generic/pci_iomap.h"
struct vm_area_struct;
#line 835 "include/linux/sysctl.h"
struct rb_node {
   unsigned long rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 108 "include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 18 "include/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 19 "include/linux/elf.h"
typedef __u16 Elf64_Half;
#line 23 "include/linux/elf.h"
typedef __u32 Elf64_Word;
#line 24 "include/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 193 "include/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 201 "include/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 445
struct sock;
#line 446
struct kobject;
#line 447
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 453 "include/linux/elf.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   void *(*grab_current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
   void (*drop_ns)(void * ) ;
};
#line 57 "include/linux/kobject_ns.h"
struct attribute {
   char const   *name ;
   umode_t mode ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 33 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   umode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 62 "include/linux/sysfs.h"
struct bin_attribute {
   struct attribute attr ;
   size_t size ;
   void *private ;
   ssize_t (*read)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                   loff_t  , size_t  ) ;
   ssize_t (*write)(struct file * , struct kobject * , struct bin_attribute * , char * ,
                    loff_t  , size_t  ) ;
   int (*mmap)(struct file * , struct kobject * , struct bin_attribute * , struct vm_area_struct * ) ;
};
#line 98 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct kobject * , struct attribute  const  * ) ;
};
#line 117
struct sysfs_dirent;
#line 182 "include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 49 "include/linux/kobject.h"
struct kset;
#line 49
struct kobj_type;
#line 49 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned char state_initialized : 1 ;
   unsigned char state_in_sysfs : 1 ;
   unsigned char state_add_uevent_sent : 1 ;
   unsigned char state_remove_uevent_sent : 1 ;
   unsigned char uevent_suppress : 1 ;
};
#line 107 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 115 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 122 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 139 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 215
struct kernel_param;
#line 216 "include/linux/kobject.h"
struct kernel_param_ops {
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 49 "include/linux/moduleparam.h"
struct kparam_string;
#line 49
struct kparam_array;
#line 49 "include/linux/moduleparam.h"
union __anonunion_ldv_13305_134 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 49 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   s16 level ;
   union __anonunion_ldv_13305_134 ldv_13305 ;
};
#line 61 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 67 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int elemsize ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   void *elem ;
};
#line 458 "include/linux/moduleparam.h"
struct static_key {
   atomic_t enabled ;
};
#line 225 "include/linux/jump_label.h"
struct tracepoint;
#line 226 "include/linux/jump_label.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};
#line 29 "include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   struct static_key key ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 86 "include/linux/tracepoint.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 27 "include/linux/export.h"
struct mod_arch_specific {

};
#line 34 "include/linux/module.h"
struct module_param_attrs;
#line 34 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 43 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module_kobject * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module_kobject * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 69
struct exception_table_entry;
#line 198
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2
} ;
#line 204 "include/linux/module.h"
struct module_ref {
   unsigned long incs ;
   unsigned long decs ;
};
#line 219
struct module_sect_attrs;
#line 219
struct module_notes_attrs;
#line 219
struct ftrace_event_call;
#line 219 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   unsigned int init_ro_size ;
   unsigned int core_ro_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   char *args ;
   void *percpu ;
   unsigned int percpu_size ;
   unsigned int num_tracepoints ;
   struct tracepoint * const  *tracepoints_ptrs ;
   unsigned int num_trace_bprintk_fmt ;
   char const   **trace_bprintk_fmt_start ;
   struct ftrace_event_call **trace_events ;
   unsigned int num_trace_events ;
   unsigned int num_ftrace_callsites ;
   unsigned long *ftrace_callsites ;
   struct list_head source_list ;
   struct list_head target_list ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 88 "include/linux/kmemleak.h"
struct kmem_cache_cpu {
   void **freelist ;
   unsigned long tid ;
   struct page *page ;
   struct page *partial ;
   int node ;
   unsigned int stat[26U] ;
};
#line 55 "include/linux/slub_def.h"
struct kmem_cache_node {
   spinlock_t list_lock ;
   unsigned long nr_partial ;
   struct list_head partial ;
   atomic_long_t nr_slabs ;
   atomic_long_t total_objects ;
   struct list_head full ;
};
#line 66 "include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 76 "include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   unsigned long min_partial ;
   int size ;
   int objsize ;
   int offset ;
   int cpu_partial ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   int reserved ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 334 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedi.h"
struct comedi_insn {
   unsigned int insn ;
   unsigned int n ;
   unsigned int *data ;
   unsigned int subdev ;
   unsigned int chanspec ;
   unsigned int unused[3U] ;
};
#line 348 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedi.h"
struct comedi_cmd {
   unsigned int subdev ;
   unsigned int flags ;
   unsigned int start_src ;
   unsigned int start_arg ;
   unsigned int scan_begin_src ;
   unsigned int scan_begin_arg ;
   unsigned int convert_src ;
   unsigned int convert_arg ;
   unsigned int scan_end_src ;
   unsigned int scan_end_arg ;
   unsigned int stop_src ;
   unsigned int stop_arg ;
   unsigned int *chanlist ;
   unsigned int chanlist_len ;
   short *data ;
   unsigned int data_len ;
};
#line 387 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedi.h"
struct comedi_krange {
   int min ;
   int max ;
   unsigned int flags ;
};
#line 418 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedi.h"
struct comedi_devconfig {
   char board_name[20U] ;
   int options[32U] ;
};
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedilib.h"
struct comedi_device;
#line 54 "include/linux/delay.h"
struct prio_tree_node;
#line 54 "include/linux/delay.h"
struct raw_prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
};
#line 19 "include/linux/prio_tree.h"
struct prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
   unsigned long start ;
   unsigned long last ;
};
#line 116
struct address_space;
#line 117 "include/linux/prio_tree.h"
union __anonunion_ldv_14591_136 {
   unsigned long index ;
   void *freelist ;
};
#line 117 "include/linux/prio_tree.h"
struct __anonstruct_ldv_14601_140 {
   unsigned short inuse ;
   unsigned short objects : 15 ;
   unsigned char frozen : 1 ;
};
#line 117 "include/linux/prio_tree.h"
union __anonunion_ldv_14602_139 {
   atomic_t _mapcount ;
   struct __anonstruct_ldv_14601_140 ldv_14601 ;
};
#line 117 "include/linux/prio_tree.h"
struct __anonstruct_ldv_14604_138 {
   union __anonunion_ldv_14602_139 ldv_14602 ;
   atomic_t _count ;
};
#line 117 "include/linux/prio_tree.h"
union __anonunion_ldv_14605_137 {
   unsigned long counters ;
   struct __anonstruct_ldv_14604_138 ldv_14604 ;
};
#line 117 "include/linux/prio_tree.h"
struct __anonstruct_ldv_14606_135 {
   union __anonunion_ldv_14591_136 ldv_14591 ;
   union __anonunion_ldv_14605_137 ldv_14605 ;
};
#line 117 "include/linux/prio_tree.h"
struct __anonstruct_ldv_14613_142 {
   struct page *next ;
   int pages ;
   int pobjects ;
};
#line 117 "include/linux/prio_tree.h"
union __anonunion_ldv_14614_141 {
   struct list_head lru ;
   struct __anonstruct_ldv_14613_142 ldv_14613 ;
};
#line 117 "include/linux/prio_tree.h"
union __anonunion_ldv_14619_143 {
   unsigned long private ;
   struct kmem_cache *slab ;
   struct page *first_page ;
};
#line 117 "include/linux/prio_tree.h"
struct page {
   unsigned long flags ;
   struct address_space *mapping ;
   struct __anonstruct_ldv_14606_135 ldv_14606 ;
   union __anonunion_ldv_14614_141 ldv_14614 ;
   union __anonunion_ldv_14619_143 ldv_14619 ;
   unsigned long debug_flags ;
};
#line 192 "include/linux/mm_types.h"
struct __anonstruct_vm_set_145 {
   struct list_head list ;
   void *parent ;
   struct vm_area_struct *head ;
};
#line 192 "include/linux/mm_types.h"
union __anonunion_shared_144 {
   struct __anonstruct_vm_set_145 vm_set ;
   struct raw_prio_tree_node prio_tree_node ;
};
#line 192
struct anon_vma;
#line 192
struct vm_operations_struct;
#line 192
struct mempolicy;
#line 192 "include/linux/mm_types.h"
struct vm_area_struct {
   struct mm_struct *vm_mm ;
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   struct vm_area_struct *vm_prev ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct rb_node vm_rb ;
   union __anonunion_shared_144 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   struct mempolicy *vm_policy ;
};
#line 255 "include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 261 "include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 274 "include/linux/mm_types.h"
struct mm_rss_stat {
   atomic_long_t count[3U] ;
};
#line 287
struct linux_binfmt;
#line 287
struct mmu_notifier_mm;
#line 287 "include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   void (*unmap_area)(struct mm_struct * , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long task_size ;
   unsigned long cached_hole_size ;
   unsigned long free_area_cache ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   int map_count ;
   spinlock_t page_table_lock ;
   struct rw_semaphore mmap_sem ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long pinned_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long reserved_vm ;
   unsigned long def_flags ;
   unsigned long nr_ptes ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[44U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_var_t cpu_vm_mask_var ;
   mm_context_t context ;
   unsigned int faultstamp ;
   unsigned int token_priority ;
   unsigned int last_interval ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct hlist_head ioctx_list ;
   struct task_struct *owner ;
   struct file *exe_file ;
   unsigned long num_exe_file_vmas ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
   pgtable_t pmd_huge_pte ;
   struct cpumask cpumask_allocation ;
};
#line 178 "include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *page ;
};
#line 195 "include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
                  unsigned long  ) ;
};
#line 1631
struct klist_node;
#line 37 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 67
struct dma_map_ops;
#line 67 "include/linux/klist.h"
struct dev_archdata {
   void *acpi_handle ;
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct device_private;
#line 18
struct device_driver;
#line 19
struct driver_private;
#line 20
struct class;
#line 21
struct subsys_private;
#line 22
struct bus_type;
#line 23
struct device_node;
#line 24
struct iommu_ops;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 51 "include/linux/device.h"
struct device_attribute;
#line 51
struct driver_attribute;
#line 51 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   char const   *dev_name ;
   struct device *dev_root ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct iommu_ops *iommu_ops ;
   struct subsys_private *p ;
};
#line 125
struct device_type;
#line 182
struct of_device_id;
#line 182 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   struct of_device_id  const  *of_match_table ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 245 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 299
struct class_attribute;
#line 299 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct bin_attribute *dev_bin_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct subsys_private *p ;
};
#line 394 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
   void const   *(*namespace)(struct class * , struct class_attribute  const  * ) ;
};
#line 447 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , umode_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 474 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 557 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 567
struct dma_coherent_mem;
#line 567 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type  const  *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   struct dev_pm_domain *pm_domain ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   struct device_node *of_node ;
   dev_t devt ;
   u32 id ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
};
#line 681 "include/linux/device.h"
struct wakeup_source {
   char const   *name ;
   struct list_head entry ;
   spinlock_t lock ;
   struct timer_list timer ;
   unsigned long timer_expires ;
   ktime_t total_time ;
   ktime_t max_time ;
   ktime_t last_time ;
   unsigned long event_count ;
   unsigned long active_count ;
   unsigned long relax_count ;
   unsigned long hit_count ;
   unsigned char active : 1 ;
};
#line 999 "include/linux/device.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};
#line 67 "include/linux/dma-attrs.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
} ;
#line 74 "include/linux/dma-attrs.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 268 "include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc)(struct device * , size_t  , dma_addr_t * , gfp_t  , struct dma_attrs * ) ;
   void (*free)(struct device * , size_t  , void * , dma_addr_t  , struct dma_attrs * ) ;
   int (*mmap)(struct device * , struct vm_area_struct * , void * , dma_addr_t  ,
               size_t  , struct dma_attrs * ) ;
   dma_addr_t (*map_page)(struct device * , struct page * , unsigned long  , size_t  ,
                          enum dma_data_direction  , struct dma_attrs * ) ;
   void (*unmap_page)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ,
                      struct dma_attrs * ) ;
   int (*map_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                 struct dma_attrs * ) ;
   void (*unmap_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                    struct dma_attrs * ) ;
   void (*sync_single_for_cpu)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_single_for_device)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_sg_for_cpu)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   void (*sync_sg_for_device)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   int (*mapping_error)(struct device * , dma_addr_t  ) ;
   int (*dma_supported)(struct device * , u64  ) ;
   int (*set_dma_mask)(struct device * , u64  ) ;
   int is_phys ;
};
#line 202 "include/linux/dma-mapping.h"
struct exception_table_entry {
   unsigned long insn ;
   unsigned long fixup ;
};
#line 69 "include/linux/io.h"
struct comedi_async;
#line 69
struct comedi_lrange;
#line 69 "include/linux/io.h"
struct comedi_subdevice {
   struct comedi_device *device ;
   int type ;
   int n_chan ;
   int subdev_flags ;
   int len_chanlist ;
   void *private ;
   struct comedi_async *async ;
   void *lock ;
   void *busy ;
   unsigned int runflags ;
   spinlock_t spin_lock ;
   int io_bits ;
   unsigned int maxdata ;
   unsigned int const   *maxdata_list ;
   unsigned int flags ;
   unsigned int const   *flaglist ;
   unsigned int settling_time_0 ;
   struct comedi_lrange  const  *range_table ;
   struct comedi_lrange  const  * const  *range_table_list ;
   unsigned int *chanlist ;
   int (*insn_read)(struct comedi_device * , struct comedi_subdevice * , struct comedi_insn * ,
                    unsigned int * ) ;
   int (*insn_write)(struct comedi_device * , struct comedi_subdevice * , struct comedi_insn * ,
                     unsigned int * ) ;
   int (*insn_bits)(struct comedi_device * , struct comedi_subdevice * , struct comedi_insn * ,
                    unsigned int * ) ;
   int (*insn_config)(struct comedi_device * , struct comedi_subdevice * , struct comedi_insn * ,
                      unsigned int * ) ;
   int (*do_cmd)(struct comedi_device * , struct comedi_subdevice * ) ;
   int (*do_cmdtest)(struct comedi_device * , struct comedi_subdevice * , struct comedi_cmd * ) ;
   int (*poll)(struct comedi_device * , struct comedi_subdevice * ) ;
   int (*cancel)(struct comedi_device * , struct comedi_subdevice * ) ;
   int (*buf_change)(struct comedi_device * , struct comedi_subdevice * , unsigned long  ) ;
   void (*munge)(struct comedi_device * , struct comedi_subdevice * , void * , unsigned int  ,
                 unsigned int  ) ;
   enum dma_data_direction async_dma_dir ;
   unsigned int state ;
   struct device *class_dev ;
   int minor ;
};
#line 127 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedidev.h"
struct comedi_buf_page {
   void *virt_addr ;
   dma_addr_t dma_addr ;
};
#line 132 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedidev.h"
struct comedi_async {
   struct comedi_subdevice *subdevice ;
   void *prealloc_buf ;
   unsigned int prealloc_bufsz ;
   struct comedi_buf_page *buf_page_list ;
   unsigned int n_buf_pages ;
   unsigned int max_bufsize ;
   unsigned int mmap_count ;
   unsigned int buf_write_count ;
   unsigned int buf_write_alloc_count ;
   unsigned int buf_read_count ;
   unsigned int buf_read_alloc_count ;
   unsigned int buf_write_ptr ;
   unsigned int buf_read_ptr ;
   unsigned int cur_chan ;
   unsigned int scan_progress ;
   unsigned int munge_chan ;
   unsigned int munge_count ;
   unsigned int munge_ptr ;
   unsigned int events ;
   struct comedi_cmd cmd ;
   wait_queue_head_t wait_head ;
   unsigned int cb_mask ;
   int (*cb_func)(unsigned int  , void * ) ;
   void *cb_arg ;
   int (*inttrig)(struct comedi_device * , struct comedi_subdevice * , unsigned int  ) ;
};
#line 181
struct usb_interface;
#line 182 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedidev.h"
struct comedi_driver {
   struct comedi_driver *next ;
   char const   *driver_name ;
   struct module *module ;
   int (*attach)(struct comedi_device * , struct comedi_devconfig * ) ;
   int (*detach)(struct comedi_device * ) ;
   int (*attach_pci)(struct comedi_device * , struct pci_dev * ) ;
   int (*attach_usb)(struct comedi_device * , struct usb_interface * ) ;
   unsigned int num_names ;
   char const   * const  *board_name ;
   int offset ;
};
#line 202
struct fasync_struct;
#line 202 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedidev.h"
struct comedi_device {
   int use_count ;
   struct comedi_driver *driver ;
   void *private ;
   struct device *class_dev ;
   int minor ;
   struct device *hw_dev ;
   char const   *board_name ;
   void const   *board_ptr ;
   int attached ;
   spinlock_t spinlock ;
   struct mutex mutex ;
   int in_request_module ;
   int n_subdevices ;
   struct comedi_subdevice *subdevices ;
   unsigned long iobase ;
   unsigned int irq ;
   struct comedi_subdevice *read_subdev ;
   struct comedi_subdevice *write_subdev ;
   struct fasync_struct *async_queue ;
   int (*open)(struct comedi_device * ) ;
   void (*close)(struct comedi_device * ) ;
};
#line 380 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedidev.h"
struct comedi_lrange {
   int length ;
   struct comedi_krange range[] ;
};
#line 98 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
struct BondedDevice {
   struct comedi_device *dev ;
   unsigned int minor ;
   unsigned int subdev ;
   unsigned int subdev_type ;
   unsigned int nchans ;
   unsigned int chanid_offset ;
};
#line 112 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
struct Private {
   char name[256U] ;
   struct BondedDevice **devs ;
   unsigned int ndevs ;
   struct BondedDevice *chanIdDevMap[256U] ;
   unsigned int nchans ;
};
#line 1 "<compiler builtins>"
void *__builtin_memcpy(void * , void const   * , unsigned long  ) ;
#line 101 "include/linux/printk.h"
extern int printk(char const   *  , ...) ;
#line 323 "include/linux/kernel.h"
extern int snprintf(char * , size_t  , char const   *  , ...) ;
#line 55 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/string_64.h"
extern void *memset(void * , int  , size_t  ) ;
#line 61
extern size_t strlen(char const   * ) ;
#line 36 "include/linux/string.h"
extern char *strncat(char * , char const   * , __kernel_size_t  ) ;
#line 93 "include/linux/spinlock.h"
extern void __raw_spin_lock_init(raw_spinlock_t * , char const   * , struct lock_class_key * ) ;
#line 272 "include/linux/spinlock.h"
__inline static raw_spinlock_t *spinlock_check(spinlock_t *lock ) 
{ 


  {
#line 274
  return (& lock->ldv_6127.rlock);
}
}
#line 161 "include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 221 "include/linux/slub_def.h"
extern void *__kmalloc(size_t  , gfp_t  ) ;
#line 268 "include/linux/slub_def.h"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp___2 ;

  {
#line 283
  tmp___2 = __kmalloc(size, flags);
#line 283
  return (tmp___2);
}
}
#line 243 "include/linux/slab.h"
__inline static void *kmalloc_array(size_t n , size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 245
  if (size != 0UL && 0xffffffffffffffffUL / size < n) {
#line 246
    return (0);
  } else {

  }
#line 247
  tmp = __kmalloc(n * size, flags);
#line 247
  return (tmp);
}
}
#line 256 "include/linux/slab.h"
__inline static void *kcalloc(size_t n , size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 258
  tmp = kmalloc_array(n, size, flags | 32768U);
#line 258
  return (tmp);
}
}
#line 349 "include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 351
  tmp = kmalloc(size, flags | 32768U);
#line 351
  return (tmp);
}
}
#line 27 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedilib.h"
extern struct comedi_device *comedi_open(char const   * ) ;
#line 28
extern int comedi_close(struct comedi_device * ) ;
#line 29
extern int comedi_dio_config(struct comedi_device * , unsigned int  , unsigned int  ,
                             unsigned int  ) ;
#line 31
extern int comedi_dio_bitfield(struct comedi_device * , unsigned int  , unsigned int  ,
                               unsigned int * ) ;
#line 33
extern int comedi_find_subdevice_by_type(struct comedi_device * , int  , unsigned int  ) ;
#line 35
extern int comedi_get_n_channels(struct comedi_device * , unsigned int  ) ;
#line 378 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedidev.h"
extern struct comedi_lrange  const  range_unipolar5 ;
#line 396 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedidev.h"
__inline static int alloc_subdevices(struct comedi_device *dev , unsigned int num_subdevices ) 
{ 
  unsigned int i ;
  void *tmp ;
  struct lock_class_key __key ;

  {
#line 401
  dev->n_subdevices = (int )num_subdevices;
#line 402
  tmp = kcalloc((size_t )num_subdevices, 304UL, 208U);
#line 402
  dev->subdevices = (struct comedi_subdevice *)tmp;
#line 405
  if ((unsigned long )dev->subdevices == (unsigned long )((struct comedi_subdevice *)0)) {
#line 406
    return (-12);
  } else {

  }
#line 407
  i = 0U;
#line 407
  goto ldv_19105;
  ldv_19104: 
#line 408
  (dev->subdevices + (unsigned long )i)->device = dev;
#line 409
  (dev->subdevices + (unsigned long )i)->async_dma_dir = DMA_NONE;
#line 410
  spinlock_check(& (dev->subdevices + (unsigned long )i)->spin_lock);
#line 410
  __raw_spin_lock_init(& (dev->subdevices + (unsigned long )i)->spin_lock.ldv_6127.rlock,
                       "&(&dev->subdevices[i].spin_lock)->rlock", & __key);
#line 411
  (dev->subdevices + (unsigned long )i)->minor = -1;
#line 407
  i = i + 1U;
  ldv_19105: ;
#line 407
  if (i < num_subdevices) {
#line 408
    goto ldv_19104;
  } else {

  }

#line 413
  return (0);
}
}
#line 416 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/staging/comedi/drivers/../comedidev.h"
__inline static int alloc_private(struct comedi_device *dev , int size ) 
{ 


  {
#line 418
  dev->private = kzalloc((size_t )size, 208U);
#line 419
  if ((unsigned long )dev->private == (unsigned long )((void *)0)) {
#line 420
    return (-12);
  } else {

  }
#line 421
  return (0);
}
}
#line 138 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
static int bonding_dio_insn_bits(struct comedi_device *dev , struct comedi_subdevice *s ,
                                 struct comedi_insn *insn , unsigned int *data ) 
{ 
  unsigned int nchans ;
  unsigned int num_done ;
  unsigned int i ;
  struct BondedDevice *bdev ;
  unsigned int subdevMask ;
  unsigned int writeMask ;
  unsigned int dataBits ;
  int tmp ;

  {
#line 143
  nchans = 32U;
#line 143
  num_done = 0U;
#line 144
  if (insn->n != 2U) {
#line 145
    return (-22);
  } else {

  }
#line 147
  if (((struct Private *)dev->private)->nchans < nchans) {
#line 148
    nchans = ((struct Private *)dev->private)->nchans;
  } else {

  }
#line 152
  i = 0U;
#line 152
  goto ldv_19225;
  ldv_19224: 
#line 153
  bdev = *(((struct Private *)dev->private)->devs + (unsigned long )i);
#line 158
  subdevMask = (unsigned int )((1 << (int )bdev->nchans) + -1);
#line 162
  if (bdev->nchans > 31U) {
#line 163
    subdevMask = 4294967295U;
  } else {

  }
#line 165
  writeMask = (*data >> (int )num_done) & subdevMask;
#line 166
  dataBits = (*(data + 1UL) >> (int )num_done) & subdevMask;
#line 169
  tmp = comedi_dio_bitfield(bdev->dev, bdev->subdev, writeMask, & dataBits);
#line 169
  if (tmp != 2) {
#line 171
    return (-22);
  } else {

  }
#line 174
  *(data + 1UL) = *(data + 1UL) & ~ (subdevMask << (int )num_done);
#line 176
  *(data + 1UL) = *(data + 1UL) | ((dataBits & subdevMask) << (int )num_done);
#line 178
  s->state = *(data + 1UL);
#line 180
  num_done = bdev->nchans + num_done;
#line 152
  i = i + 1U;
  ldv_19225: ;
#line 152
  if (num_done < nchans && ((struct Private *)dev->private)->ndevs > i) {
#line 153
    goto ldv_19224;
  } else {

  }

#line 183
  return ((int )insn->n);
}
}
#line 186 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
static int bonding_dio_insn_config(struct comedi_device *dev , struct comedi_subdevice *s ,
                                   struct comedi_insn *insn , unsigned int *data ) 
{ 
  int chan ;
  int ret ;
  int io_bits ;
  unsigned int io ;
  struct BondedDevice *bdev ;

  {
#line 190
  chan = (int )insn->chanspec & 65535;
#line 190
  io_bits = s->io_bits;
#line 194
  if (chan < 0 || (unsigned int )chan >= ((struct Private *)dev->private)->nchans) {
#line 195
    return (-22);
  } else {

  }
#line 196
  bdev = ((struct Private *)dev->private)->chanIdDevMap[chan];
#line 202
  switch (*data) {
  case 1U: 
#line 204
  io = 1U;
#line 205
  io_bits = (1 << chan) | io_bits;
#line 206
  goto ldv_19239;
  case 0U: 
#line 208
  io = 0U;
#line 209
  io_bits = ~ (1 << chan) & io_bits;
#line 210
  goto ldv_19239;
  case 28U: 
#line 212
  *(data + 1UL) = (unsigned int )(io_bits >> chan) & 1U;
#line 214
  return ((int )insn->n);
  default: ;
#line 217
  return (-22);
  }
  ldv_19239: 
#line 221
  chan = (int )((unsigned int )chan - bdev->chanid_offset);
#line 222
  ret = comedi_dio_config(bdev->dev, bdev->subdev, (unsigned int )chan, io);
#line 223
  if (ret != 1) {
#line 224
    return (-22);
  } else {

  }
#line 227
  s->io_bits = io_bits;
#line 228
  return ((int )insn->n);
}
}
#line 231 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
static void *Realloc(void const   *oldmem , size_t newlen , size_t oldlen ) 
{ 
  void *newmem ;
  void *tmp ;
  size_t __len ;
  size_t _min1 ;
  size_t _min2 ;
  void *__ret ;

  {
#line 233
  tmp = kmalloc(newlen, 208U);
#line 233
  newmem = tmp;
#line 235
  if ((unsigned long )newmem != (unsigned long )((void *)0) && (unsigned long )oldmem != (unsigned long )((void const   *)0)) {
#line 236
    _min1 = oldlen;
#line 236
    _min2 = newlen;
#line 236
    __len = _min1 < _min2 ? _min1 : _min2;
#line 236
    __ret = __builtin_memcpy(newmem, oldmem, __len);
  } else {

  }
#line 237
  kfree(oldmem);
#line 238
  return (newmem);
}
}
#line 241 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
static int doDevConfig(struct comedi_device *dev , struct comedi_devconfig *it ) 
{ 
  int i ;
  struct comedi_device *devs_opened[48U] ;
  char file[18U] ;
  int minor ;
  struct comedi_device *d ;
  int sdev ;
  int nchans ;
  int tmp ;
  struct BondedDevice *bdev ;
  struct comedi_device *tmp___0 ;
  void *tmp___1 ;
  unsigned int tmp___2 ;
  int tmp___3 ;
  void *tmp___4 ;
  char buf[20U] ;
  int left ;
  size_t tmp___5 ;

  {
#line 246
  memset((void *)(& devs_opened), 0, 384UL);
#line 247
  ((struct Private *)dev->private)->name[0] = 0;
#line 250
  i = 0;
#line 250
  goto ldv_19280;
  ldv_19279: 
#line 251
  file[0] = '/';
#line 251
  file[1] = 'd';
#line 251
  file[2] = 'e';
#line 251
  file[3] = 'v';
#line 251
  file[4] = '/';
#line 251
  file[5] = 'c';
#line 251
  file[6] = 'o';
#line 251
  file[7] = 'm';
#line 251
  file[8] = 'e';
#line 251
  file[9] = 'd';
#line 251
  file[10] = 'i';
#line 251
  file[11] = 'X';
#line 251
  file[12] = 'X';
#line 251
  file[13] = 'X';
#line 251
  file[14] = 'X';
#line 251
  file[15] = 'X';
#line 251
  file[16] = 'X';
#line 251
  file[17] = '\000';
#line 252
  minor = it->options[i];
#line 254
  sdev = -1;
#line 255
  bdev = 0;
#line 257
  if (minor < 0 || minor > 47) {
#line 258
    printk("<3>comedi_bond: INTERNAL ERROR: Minor %d is invalid!\n", minor);
#line 259
    return (0);
  } else {

  }
#line 261
  if (dev->minor == minor) {
#line 262
    printk("<3>comedi_bond: INTERNAL ERROR: Cannot bond this driver to itself!\n");
#line 263
    return (0);
  } else {

  }
#line 265
  if ((unsigned long )devs_opened[minor] != (unsigned long )((struct comedi_device *)0)) {
#line 266
    printk("<3>comedi_bond: INTERNAL ERROR: Minor %d specified more than once!\n",
           minor);
#line 267
    return (0);
  } else {

  }
#line 270
  snprintf((char *)(& file), 18UL, "/dev/comedi%u", minor);
#line 271
  file[17UL] = 0;
#line 273
  tmp___0 = comedi_open((char const   *)(& file));
#line 273
  devs_opened[minor] = tmp___0;
#line 273
  d = tmp___0;
#line 275
  if ((unsigned long )d == (unsigned long )((struct comedi_device *)0)) {
#line 276
    printk("<3>comedi_bond: INTERNAL ERROR: Minor %u could not be opened\n", minor);
#line 277
    return (0);
  } else {

  }
#line 281
  goto ldv_19277;
  ldv_19276: 
#line 283
  nchans = comedi_get_n_channels(d, (unsigned int )sdev);
#line 284
  if (nchans <= 0) {
#line 285
    printk("<3>comedi_bond: INTERNAL ERROR: comedi_get_n_channels() returned %d on minor %u subdev %d!\n",
           nchans, minor, sdev);
#line 288
    return (0);
  } else {

  }
#line 290
  tmp___1 = kmalloc(32UL, 208U);
#line 290
  bdev = (struct BondedDevice *)tmp___1;
#line 291
  if ((unsigned long )bdev == (unsigned long )((struct BondedDevice *)0)) {
#line 292
    printk("<3>comedi_bond: INTERNAL ERROR: Out of memory.\n");
#line 293
    return (0);
  } else {

  }
#line 295
  bdev->dev = d;
#line 296
  bdev->minor = (unsigned int )minor;
#line 297
  bdev->subdev = (unsigned int )sdev;
#line 298
  bdev->subdev_type = 5U;
#line 299
  bdev->nchans = (unsigned int )nchans;
#line 300
  bdev->chanid_offset = ((struct Private *)dev->private)->nchans;
#line 303
  goto ldv_19272;
  ldv_19271: 
#line 304
  tmp___2 = ((struct Private *)dev->private)->nchans;
#line 304
  ((struct Private *)dev->private)->nchans = ((struct Private *)dev->private)->nchans + 1U;
#line 304
  ((struct Private *)dev->private)->chanIdDevMap[tmp___2] = bdev;
  ldv_19272: 
#line 303
  tmp___3 = nchans;
#line 303
  nchans = nchans - 1;
#line 303
  if (tmp___3 != 0) {
#line 304
    goto ldv_19271;
  } else {

  }
#line 310
  tmp = (int )(((struct Private *)dev->private)->ndevs * 8U);
#line 311
  ((struct Private *)dev->private)->ndevs = ((struct Private *)dev->private)->ndevs + 1U;
#line 311
  tmp___4 = Realloc((void const   *)((struct Private *)dev->private)->devs, (unsigned long )((struct Private *)dev->private)->ndevs * 8UL,
                    (size_t )tmp);
#line 311
  ((struct Private *)dev->private)->devs = (struct BondedDevice **)tmp___4;
#line 314
  if ((unsigned long )((struct Private *)dev->private)->devs == (unsigned long )((struct BondedDevice **)0)) {
#line 315
    printk("<3>comedi_bond: INTERNAL ERROR: Could not allocate memory. Out of memory?");
#line 317
    return (0);
  } else {

  }
#line 320
  *(((struct Private *)dev->private)->devs + (unsigned long )(((struct Private *)dev->private)->ndevs - 1U)) = bdev;
#line 324
  tmp___5 = strlen((char const   *)(& ((struct Private *)dev->private)->name));
#line 324
  left = (int )(255U - (unsigned int )tmp___5);
#line 326
  snprintf((char *)(& buf), 20UL, "%d:%d ", dev->minor, bdev->subdev);
#line 328
  buf[19UL] = 0;
#line 329
  strncat((char *)(& ((struct Private *)dev->private)->name), (char const   *)(& buf),
          (__kernel_size_t )left);
  ldv_19277: 
#line 281
  sdev = comedi_find_subdevice_by_type(d, 5, (unsigned int )(sdev + 1));
#line 281
  if (sdev >= 0) {
#line 283
    goto ldv_19276;
  } else {

  }
#line 250
  i = i + 1;
  ldv_19280: ;
#line 250
  if (i <= 31 && (i == 0 || it->options[i] != 0)) {
#line 251
    goto ldv_19279;
  } else {

  }

#line 335
  if (((struct Private *)dev->private)->nchans == 0U) {
#line 336
    printk("<3>comedi_bond: INTERNAL ERROR: No channels found!\n");
#line 337
    return (0);
  } else {

  }
#line 340
  return (1);
}
}
#line 343 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
static void doDevUnconfig(struct comedi_device *dev ) 
{ 
  unsigned long devs_closed ;
  struct BondedDevice *bdev ;
  unsigned int tmp ;

  {
#line 345
  devs_closed = 0UL;
#line 347
  if ((unsigned long )dev->private != (unsigned long )((void *)0)) {
#line 348
    goto ldv_19287;
    ldv_19288: 
#line 351
    bdev = *(((struct Private *)dev->private)->devs + (unsigned long )((struct Private *)dev->private)->ndevs);
#line 352
    if ((unsigned long )bdev == (unsigned long )((struct BondedDevice *)0)) {
#line 353
      goto ldv_19287;
    } else {

    }
#line 354
    if (((unsigned long )(1 << (int )bdev->minor) & devs_closed) == 0UL) {
#line 355
      comedi_close(bdev->dev);
#line 356
      devs_closed = (unsigned long )(1 << (int )bdev->minor) | devs_closed;
    } else {

    }
#line 358
    kfree((void const   *)bdev);
    ldv_19287: 
#line 348
    tmp = ((struct Private *)dev->private)->ndevs;
#line 348
    ((struct Private *)dev->private)->ndevs = ((struct Private *)dev->private)->ndevs - 1U;
#line 348
    if (tmp != 0U && (unsigned long )((struct Private *)dev->private)->devs != (unsigned long )((struct BondedDevice **)0)) {
#line 349
      goto ldv_19288;
    } else {

    }
#line 360
    kfree((void const   *)((struct Private *)dev->private)->devs);
#line 361
    ((struct Private *)dev->private)->devs = 0;
#line 362
    kfree((void const   *)dev->private);
#line 363
    dev->private = 0;
  } else {

  }
#line 365
  return;
}
}
#line 367 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
static int bonding_attach(struct comedi_device *dev , struct comedi_devconfig *it ) 
{ 
  struct comedi_subdevice *s ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 372
  printk("<6>comedi_bond: comedi%d\n", dev->minor);
#line 378
  tmp = alloc_private(dev, 2328);
#line 378
  if (tmp < 0) {
#line 379
    return (-12);
  } else {

  }
#line 384
  tmp___0 = doDevConfig(dev, it);
#line 384
  if (tmp___0 == 0) {
#line 385
    return (-22);
  } else {

  }
#line 391
  dev->board_name = (char const   *)(& ((struct Private *)dev->private)->name);
#line 397
  tmp___1 = alloc_subdevices(dev, 1U);
#line 397
  if (tmp___1 < 0) {
#line 398
    return (-12);
  } else {

  }
#line 400
  s = dev->subdevices;
#line 401
  s->type = 5;
#line 402
  s->subdev_flags = 196608;
#line 403
  s->n_chan = (int )((struct Private *)dev->private)->nchans;
#line 404
  s->maxdata = 1U;
#line 405
  s->range_table = & range_unipolar5;
#line 406
  s->insn_bits = & bonding_dio_insn_bits;
#line 407
  s->insn_config = & bonding_dio_insn_config;
#line 409
  printk("<6>comedi_bond: attached with %u DIO channels coming from %u different subdevices all bonded together.  John Lennon would be proud!\n",
         ((struct Private *)dev->private)->nchans, ((struct Private *)dev->private)->ndevs);
#line 414
  return (1);
}
}
#line 417 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
static int bonding_detach(struct comedi_device *dev ) 
{ 


  {
#line 419
  printk("<6>comedi_bond: comedi%d: remove\n", dev->minor);
#line 420
  doDevUnconfig(dev);
#line 421
  return (0);
}
}
#line 463
void ldv_check_final_state(void) ;
#line 472
extern void ldv_initialize(void) ;
#line 475
extern void ldv_handler_precall(void) ;
#line 478
extern int nondet_int(void) ;
#line 481 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
int LDV_IN_INTERRUPT  ;
#line 484 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/08_1a/drivers/staging/comedi/drivers/comedi_bond.c.prepared"
void ldv_main0_sequence_infinite_withcheck_stateful(void) 
{ 
  struct comedi_device *var_group1 ;
  struct comedi_devconfig *var_group2 ;
  int tmp ;
  int tmp___0 ;

  {
#line 544
  LDV_IN_INTERRUPT = 1;
#line 553
  ldv_initialize();
#line 557
  goto ldv_19344;
  ldv_19343: 
#line 560
  tmp = nondet_int();
#line 560
  switch (tmp) {
  case 0: 
#line 589
  ldv_handler_precall();
#line 590
  bonding_attach(var_group1, var_group2);
#line 597
  goto ldv_19340;
  case 1: 
#line 625
  ldv_handler_precall();
#line 626
  bonding_detach(var_group1);
#line 633
  goto ldv_19340;
  default: ;
#line 634
  goto ldv_19340;
  }
  ldv_19340: ;
  ldv_19344: 
#line 557
  tmp___0 = nondet_int();
#line 557
  if (tmp___0 != 0) {
#line 558
    goto ldv_19343;
  } else {

  }


#line 643
  ldv_check_final_state();
#line 646
  return;
}
}
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
__inline static void ldv_error(void) 
{ 


  {
  LDV_ERROR: 
#line 12
  goto LDV_ERROR;
}
}
#line 25
extern int ldv_undef_int(void) ;
#line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 51
  return (exp);
}
}
#line 6 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
int ldv_module_refcounter  =    1;
#line 9 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
void ldv_module_get(struct module *module ) 
{ 


  {
#line 12
  if (module) {
#line 14
    ldv_module_refcounter = ldv_module_refcounter + 1;
  } else {

  }
#line 16
  return;
}
}
#line 19 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
int ldv_try_module_get(struct module *module ) 
{ 
  int module_get_succeeded ;

  {
#line 24
  if (module) {
#line 27
    module_get_succeeded = ldv_undef_int();
#line 29
    if (module_get_succeeded == 1) {
#line 31
      ldv_module_refcounter = ldv_module_refcounter + 1;
#line 33
      return (1);
    } else {
#line 38
      return (0);
    }
  } else {

  }
#line 41
  return (0);
}
}
#line 44 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
void ldv_module_put(struct module *module ) 
{ 


  {
#line 47
  if (module) {
#line 49
    if (ldv_module_refcounter > 1) {

    } else {
#line 49
      ldv_error();
    }
#line 51
    ldv_module_refcounter = ldv_module_refcounter - 1;
  } else {

  }
#line 53
  return;
}
}
#line 56 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
void ldv_module_put_and_exit(void) 
{ 


  {
#line 58
  ldv_module_put((struct module *)1);
  LDV_STOP: 
#line 60
  goto LDV_STOP;
}
}
#line 64 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
unsigned int ldv_module_refcount(void) 
{ 


  {
#line 67
  return (ldv_module_refcounter - 1);
}
}
#line 71 "/work/ldvuser/novikov/work/current--X--drivers/staging/comedi/drivers/comedi_bond.ko--X--defaultlinux--X--08_1a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/08_1a/common-model/ldv_common_model.c"
void ldv_check_final_state(void) 
{ 


  {
#line 74
  if (ldv_module_refcounter == 1) {

  } else {
#line 74
    ldv_error();
  }
#line 75
  return;
}
}
