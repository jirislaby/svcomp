/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 19 "include/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 22 "include/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "include/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "include/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "include/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 29 "include/asm-generic/int-ll64.h"
typedef long long __s64;
#line 30 "include/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 42 "include/asm-generic/int-ll64.h"
typedef signed char s8;
#line 43 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 46 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 49 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 51 "include/asm-generic/int-ll64.h"
typedef long long s64;
#line 52 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 11 "include/asm-generic/types.h"
typedef unsigned short umode_t;
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_mode_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_pid_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_uid_t;
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_gid_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned long __kernel_size_t;
#line 19 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_ssize_t;
#line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_time_t;
#line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_clock_t;
#line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_timer_t;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_clockid_t;
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long long __kernel_loff_t;
#line 41 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_uid_t __kernel_uid32_t;
#line 42 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_gid_t __kernel_gid32_t;
#line 18 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 21 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 23 "include/linux/types.h"
typedef __kernel_mode_t mode_t;
#line 26 "include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 31 "include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 34 "include/linux/types.h"
typedef _Bool bool;
#line 36 "include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 37 "include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 50 "include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 59 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 64 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 74 "include/linux/types.h"
typedef __kernel_time_t time_t;
#line 107 "include/linux/types.h"
typedef __s32 int32_t;
#line 113 "include/linux/types.h"
typedef __u32 uint32_t;
#line 138 "include/linux/types.h"
typedef unsigned long sector_t;
#line 139 "include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 179 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 180 "include/linux/types.h"
typedef unsigned int fmode_t;
#line 183 "include/linux/types.h"
typedef u64 phys_addr_t;
#line 188 "include/linux/types.h"
typedef phys_addr_t resource_size_t;
#line 190 "include/linux/types.h"
struct __anonstruct_atomic_t_7 {
   int volatile   counter ;
};
#line 190 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_7 atomic_t;
#line 195 "include/linux/types.h"
struct __anonstruct_atomic64_t_8 {
   long volatile   counter ;
};
#line 195 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_8 atomic64_t;
#line 7 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct task_struct;
#line 8
struct mm_struct;
#line 99 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 138 "include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 141 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/vm86.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/math_emu.h"
union __anonunion____missing_field_name_9 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/math_emu.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion____missing_field_name_9 __annonCompField4 ;
};
#line 60 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
struct module;
#line 10 "include/asm-generic/bug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 115 "include/linux/kernel.h"
struct completion;
#line 210
struct pid;
#line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 187 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 187 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_13 {
   pgdval_t pgd ;
};
#line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_13 pgd_t;
#line 277
struct page;
#line 290
struct file;
#line 307
struct seq_file;
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct __anonstruct____missing_field_name_18 {
   unsigned int a ;
   unsigned int b ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct __anonstruct____missing_field_name_19 {
   u16 limit0 ;
   u16 base0 ;
   unsigned int base1 : 8 ;
   unsigned int type : 4 ;
   unsigned int s : 1 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   unsigned int limit : 4 ;
   unsigned int avl : 1 ;
   unsigned int l : 1 ;
   unsigned int d : 1 ;
   unsigned int g : 1 ;
   unsigned int base2 : 8 ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
union __anonunion____missing_field_name_17 {
   struct __anonstruct____missing_field_name_18 __annonCompField6 ;
   struct __anonstruct____missing_field_name_19 __annonCompField7 ;
};
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct desc_struct {
   union __anonunion____missing_field_name_17 __annonCompField8 ;
} __attribute__((__packed__)) ;
#line 51 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct gate_struct64 {
   u16 offset_low ;
   u16 segment ;
   unsigned int ist : 3 ;
   unsigned int zero0 : 5 ;
   unsigned int type : 5 ;
   unsigned int dpl : 2 ;
   unsigned int p : 1 ;
   u16 offset_middle ;
   u32 offset_high ;
   u32 zero1 ;
} __attribute__((__packed__)) ;
#line 81 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
typedef struct gate_struct64 gate_desc;
#line 94 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct desc_ptr {
   unsigned short size ;
   unsigned long address ;
} __attribute__((__packed__)) ;
#line 46 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
struct thread_struct;
#line 48
struct tss_struct;
#line 52
struct cpumask;
#line 95 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
struct pv_cpu_ops {
   unsigned long (*get_debugreg)(int regno ) ;
   void (*set_debugreg)(int regno , unsigned long value ) ;
   void (*clts)(void) ;
   unsigned long (*read_cr0)(void) ;
   void (*write_cr0)(unsigned long  ) ;
   unsigned long (*read_cr4_safe)(void) ;
   unsigned long (*read_cr4)(void) ;
   void (*write_cr4)(unsigned long  ) ;
   unsigned long (*read_cr8)(void) ;
   void (*write_cr8)(unsigned long  ) ;
   void (*load_tr_desc)(void) ;
   void (*load_gdt)(struct desc_ptr  const  * ) ;
   void (*load_idt)(struct desc_ptr  const  * ) ;
   void (*store_gdt)(struct desc_ptr * ) ;
   void (*store_idt)(struct desc_ptr * ) ;
   void (*set_ldt)(void const   *desc , unsigned int entries ) ;
   unsigned long (*store_tr)(void) ;
   void (*load_tls)(struct thread_struct *t , unsigned int cpu ) ;
   void (*load_gs_index)(unsigned int idx ) ;
   void (*write_ldt_entry)(struct desc_struct *ldt , int entrynum , void const   *desc ) ;
   void (*write_gdt_entry)(struct desc_struct * , int entrynum , void const   *desc ,
                           int size ) ;
   void (*write_idt_entry)(gate_desc * , int entrynum , gate_desc const   *gate ) ;
   void (*alloc_ldt)(struct desc_struct *ldt , unsigned int entries ) ;
   void (*free_ldt)(struct desc_struct *ldt , unsigned int entries ) ;
   void (*load_sp0)(struct tss_struct *tss , struct thread_struct *t ) ;
   void (*set_iopl_mask)(unsigned int mask ) ;
   void (*wbinvd)(void) ;
   void (*io_delay)(void) ;
   void (*cpuid)(unsigned int *eax , unsigned int *ebx , unsigned int *ecx , unsigned int *edx ) ;
   u64 (*read_msr)(unsigned int msr , int *err ) ;
   int (*rdmsr_regs)(u32 *regs ) ;
   int (*write_msr)(unsigned int msr , unsigned int low , unsigned int high ) ;
   int (*wrmsr_regs)(u32 *regs ) ;
   u64 (*read_tsc)(void) ;
   u64 (*read_pmc)(int counter ) ;
   unsigned long long (*read_tscp)(unsigned int *aux ) ;
   void (*irq_enable_sysexit)(void) ;
   void (*usergs_sysret64)(void) ;
   void (*usergs_sysret32)(void) ;
   void (*iret)(void) ;
   void (*swapgs)(void) ;
   void (*start_context_switch)(struct task_struct *prev ) ;
   void (*end_context_switch)(struct task_struct *next ) ;
};
#line 321
struct raw_spinlock;
#line 13 "include/linux/cpumask.h"
struct cpumask {
   unsigned long bits[((4096UL + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
};
#line 13 "include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 10 "include/linux/personality.h"
struct exec_domain;
#line 91
struct map_segment;
#line 91 "include/linux/personality.h"
struct exec_domain {
   char const   *name ;
   void (*handler)(int  , struct pt_regs * ) ;
   unsigned char pers_low ;
   unsigned char pers_high ;
   unsigned long *signal_map ;
   unsigned long *signal_invmap ;
   struct map_segment *err_map ;
   struct map_segment *socktype_map ;
   struct map_segment *sockopt_map ;
   struct map_segment *af_map ;
   struct module *module ;
   struct exec_domain *next ;
};
#line 231 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct x86_hw_tss {
   u32 reserved1 ;
   u64 sp0 ;
   u64 sp1 ;
   u64 sp2 ;
   u64 reserved2 ;
   u64 ist[7] ;
   u32 reserved3 ;
   u32 reserved4 ;
   u16 reserved5 ;
   u16 io_bitmap_base ;
} __attribute__((__packed__, __aligned__((1) <<  (6) ))) ;
#line 255 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct tss_struct {
   struct x86_hw_tss x86_tss ;
   unsigned long io_bitmap[(unsigned long )(65536 / 8) / sizeof(long ) + 1UL] ;
   unsigned long stack[64] ;
} __attribute__((__aligned__((1) <<  (6) ))) ;
#line 287 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20] ;
   u32 status ;
};
#line 303 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_27 {
   u64 rip ;
   u64 rdp ;
};
#line 303 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct____missing_field_name_28 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 303 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_26 {
   struct __anonstruct____missing_field_name_27 __annonCompField11 ;
   struct __anonstruct____missing_field_name_28 __annonCompField12 ;
};
#line 303 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union __anonunion____missing_field_name_29 {
   u32 padding1[12] ;
   u32 sw_reserved[12] ;
};
#line 303 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion____missing_field_name_26 __annonCompField13 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32] ;
   u32 xmm_space[64] ;
   u32 padding[12] ;
   union __anonunion____missing_field_name_29 __annonCompField14 ;
} __attribute__((__aligned__(16))) ;
#line 338 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 358 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct ymmh_struct {
   u32 ymmh_space[64] ;
};
#line 363 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2] ;
   u64 reserved2[5] ;
} __attribute__((__packed__)) ;
#line 369 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
} __attribute__((__packed__, __aligned__(64))) ;
#line 376 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 424
struct kmem_cache;
#line 426
struct perf_event;
#line 428
struct ds_context;
#line 428 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   struct perf_event *ptrace_bps[4] ;
   unsigned long debugreg6 ;
   unsigned long cr2 ;
   unsigned long trap_no ;
   unsigned long error_code ;
   union thread_xstate *xstate ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   unsigned long debugctlmsr ;
   struct ds_context *ds_ctx ;
};
#line 625 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_31 {
   unsigned long seg ;
};
#line 625 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_31 mm_segment_t;
#line 19 "include/linux/list.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 540
struct hlist_node;
#line 540 "include/linux/list.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 544 "include/linux/list.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 12 "include/linux/thread_info.h"
struct timespec;
#line 13
struct compat_timespec;
#line 18 "include/linux/thread_info.h"
struct __anonstruct____missing_field_name_33 {
   unsigned long arg0 ;
   unsigned long arg1 ;
   unsigned long arg2 ;
   unsigned long arg3 ;
};
#line 18 "include/linux/thread_info.h"
struct __anonstruct_futex_34 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 18 "include/linux/thread_info.h"
struct __anonstruct_nanosleep_35 {
   clockid_t index ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};
#line 18
struct pollfd;
#line 18 "include/linux/thread_info.h"
struct __anonstruct_poll_36 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 18 "include/linux/thread_info.h"
union __anonunion____missing_field_name_32 {
   struct __anonstruct____missing_field_name_33 __annonCompField16 ;
   struct __anonstruct_futex_34 futex ;
   struct __anonstruct_nanosleep_35 nanosleep ;
   struct __anonstruct_poll_36 poll ;
};
#line 18 "include/linux/thread_info.h"
struct restart_block {
   long (*fn)(struct restart_block * ) ;
   union __anonunion____missing_field_name_32 __annonCompField17 ;
};
#line 23 "include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 26 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/thread_info.h"
struct thread_info {
   struct task_struct *task ;
   struct exec_domain *exec_domain ;
   __u32 flags ;
   __u32 status ;
   __u32 cpu ;
   int preempt_count ;
   mm_segment_t addr_limit ;
   struct restart_block restart_block ;
   void *sysenter_return ;
   int uaccess_err ;
};
#line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct raw_spinlock {
   unsigned int slock ;
};
#line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct __anonstruct_raw_rwlock_t_37 {
   unsigned int lock ;
};
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct __anonstruct_raw_rwlock_t_37 raw_rwlock_t;
#line 366 "include/linux/lockdep.h"
struct lock_class_key {

};
#line 20 "include/linux/spinlock_types.h"
struct __anonstruct_spinlock_t_38 {
   raw_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
};
#line 20 "include/linux/spinlock_types.h"
typedef struct __anonstruct_spinlock_t_38 spinlock_t;
#line 36 "include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_39 {
   raw_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
};
#line 36 "include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_39 rwlock_t;
#line 14 "include/linux/time.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 62 "include/linux/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   uid_t uid ;
   gid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 28 "include/linux/wait.h"
struct __wait_queue;
#line 28 "include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;
#line 32 "include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t *wait , unsigned int mode , int flags , void *key ) ;
   struct list_head task_list ;
};
#line 50 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 54 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 98 "include/linux/nodemask.h"
struct __anonstruct_nodemask_t_41 {
   unsigned long bits[(((unsigned long )(1 << 9) + 8UL * sizeof(long )) - 1UL) / (8UL * sizeof(long ))] ;
};
#line 98 "include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_41 nodemask_t;
#line 48 "include/linux/mutex.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct thread_info *owner ;
   char const   *name ;
   void *magic ;
};
#line 69 "include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 17 "include/linux/rwsem.h"
struct rw_semaphore;
#line 31 "include/linux/rwsem-spinlock.h"
struct rw_semaphore {
   __s32 activity ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
};
#line 18 "include/linux/ioport.h"
struct resource {
   resource_size_t start ;
   resource_size_t end ;
   char const   *name ;
   unsigned long flags ;
   struct resource *parent ;
   struct resource *sibling ;
   struct resource *child ;
};
#line 167
struct device;
#line 46 "include/linux/ktime.h"
union ktime {
   s64 tv64 ;
};
#line 59 "include/linux/ktime.h"
typedef union ktime ktime_t;
#line 10 "include/linux/timer.h"
struct tvec_base;
#line 12 "include/linux/timer.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   struct tvec_base *base ;
   void *start_site ;
   char start_comm[16] ;
   int start_pid ;
};
#line 240
struct hrtimer;
#line 241
enum hrtimer_restart;
#line 16 "include/linux/workqueue.h"
struct work_struct;
#line 25 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct *work ) ;
};
#line 39 "include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
};
#line 43 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 43 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 197 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device *dev ) ;
   void (*complete)(struct device *dev ) ;
   int (*suspend)(struct device *dev ) ;
   int (*resume)(struct device *dev ) ;
   int (*freeze)(struct device *dev ) ;
   int (*thaw)(struct device *dev ) ;
   int (*poweroff)(struct device *dev ) ;
   int (*restore)(struct device *dev ) ;
   int (*suspend_noirq)(struct device *dev ) ;
   int (*resume_noirq)(struct device *dev ) ;
   int (*freeze_noirq)(struct device *dev ) ;
   int (*thaw_noirq)(struct device *dev ) ;
   int (*poweroff_noirq)(struct device *dev ) ;
   int (*restore_noirq)(struct device *dev ) ;
   int (*runtime_suspend)(struct device *dev ) ;
   int (*runtime_resume)(struct device *dev ) ;
   int (*runtime_idle)(struct device *dev ) ;
};
#line 352
enum dpm_state {
    DPM_INVALID = 0,
    DPM_ON = 1,
    DPM_PREPARING = 2,
    DPM_RESUMING = 3,
    DPM_SUSPENDING = 4,
    DPM_OFF = 5,
    DPM_OFF_IRQ = 6
} ;
#line 385
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 404
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_RESUME = 3
} ;
#line 411 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned int can_wakeup : 1 ;
   unsigned int should_wakeup : 1 ;
   enum dpm_state status ;
   struct list_head entry ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   spinlock_t lock ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned int disable_depth : 3 ;
   unsigned int ignore_children : 1 ;
   unsigned int idle_notification : 1 ;
   unsigned int request_pending : 1 ;
   unsigned int deferred_resume : 1 ;
   unsigned int run_wake : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
};
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_108 {
   void *ldt ;
   int size ;
   struct mutex lock ;
   void *vdso ;
};
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_108 mm_context_t;
#line 10 "include/linux/gfp.h"
struct vm_area_struct;
#line 45 "include/linux/kmod.h"
struct key;
#line 27 "include/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 28 "include/linux/elf.h"
typedef __u16 Elf64_Half;
#line 32 "include/linux/elf.h"
typedef __u32 Elf64_Word;
#line 33 "include/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 181 "include/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 181 "include/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 20 "include/linux/sysfs.h"
struct kobject;
#line 28 "include/linux/sysfs.h"
struct attribute {
   char const   *name ;
   struct module *owner ;
   mode_t mode ;
};
#line 34 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 77 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 82
struct sysfs_dirent;
#line 20 "include/linux/kref.h"
struct kref {
   atomic_t refcount ;
};
#line 59 "include/linux/kobject.h"
struct kset;
#line 59
struct kobj_type;
#line 59 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned int state_initialized : 1 ;
   unsigned int state_in_sysfs : 1 ;
   unsigned int state_add_uevent_sent : 1 ;
   unsigned int state_remove_uevent_sent : 1 ;
   unsigned int uevent_suppress : 1 ;
};
#line 107 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject *kobj ) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
};
#line 113 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32] ;
   int envp_idx ;
   char buf[2048] ;
   int buflen ;
};
#line 120 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset *kset , struct kobject *kobj ) ;
   char const   *(*name)(struct kset *kset , struct kobject *kobj ) ;
   int (*uevent)(struct kset *kset , struct kobject *kobj , struct kobj_uevent_env *env ) ;
};
#line 154 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
};
#line 32 "include/linux/moduleparam.h"
struct kernel_param;
#line 42
struct kparam_string;
#line 42
struct kparam_array;
#line 42 "include/linux/moduleparam.h"
union __anonunion____missing_field_name_118 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 42 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   u16 perm ;
   u16 flags ;
   int (*set)(char const   *val , struct kernel_param *kp ) ;
   int (*get)(char *buffer , struct kernel_param *kp ) ;
   union __anonunion____missing_field_name_118 __annonCompField18 ;
};
#line 56 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 62 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int *num ;
   int (*set)(char const   *val , struct kernel_param *kp ) ;
   int (*get)(char *buffer , struct kernel_param *kp ) ;
   unsigned int elemsize ;
   void *elem ;
};
#line 25 "include/linux/completion.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 49 "include/linux/rcupdate.h"
struct rcu_head {
   struct rcu_head *next ;
   void (*func)(struct rcu_head *head ) ;
};
#line 21 "include/linux/tracepoint.h"
struct tracepoint;
#line 23 "include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   int state ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   void **funcs ;
} __attribute__((__aligned__(32))) ;
#line 16 "include/linux/slub_def.h"
enum stat_item {
    ALLOC_FASTPATH = 0,
    ALLOC_SLOWPATH = 1,
    FREE_FASTPATH = 2,
    FREE_SLOWPATH = 3,
    FREE_FROZEN = 4,
    FREE_ADD_PARTIAL = 5,
    FREE_REMOVE_PARTIAL = 6,
    ALLOC_FROM_PARTIAL = 7,
    ALLOC_SLAB = 8,
    ALLOC_REFILL = 9,
    FREE_SLAB = 10,
    CPUSLAB_FLUSH = 11,
    DEACTIVATE_FULL = 12,
    DEACTIVATE_EMPTY = 13,
    DEACTIVATE_TO_HEAD = 14,
    DEACTIVATE_TO_TAIL = 15,
    DEACTIVATE_REMOTE_FREES = 16,
    ORDER_FALLBACK = 17,
    NR_SLUB_STAT_ITEMS = 18
} ;
#line 37 "include/linux/slub_def.h"
struct kmem_cache_cpu {
   void **freelist ;
   struct page *page ;
   int node ;
   unsigned int offset ;
   unsigned int objsize ;
   unsigned int stat[NR_SLUB_STAT_ITEMS] ;
};
#line 48 "include/linux/slub_def.h"
struct kmem_cache_node {
   spinlock_t list_lock ;
   unsigned long nr_partial ;
   struct list_head partial ;
   atomic_long_t nr_slabs ;
   atomic_long_t total_objects ;
   struct list_head full ;
};
#line 64 "include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 71 "include/linux/slub_def.h"
struct kmem_cache {
   unsigned long flags ;
   int size ;
   int objsize ;
   int offset ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_node local_node ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   unsigned long min_partial ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1 << 9] ;
   struct kmem_cache_cpu *cpu_slab[4096] ;
};
#line 8 "include/asm-generic/module.h"
struct mod_arch_specific {

};
#line 35 "include/linux/module.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 49 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module * , char const   * ,
                    size_t count ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 59
struct module_param_attrs;
#line 59 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 72
struct exception_table_entry;
#line 227
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2
} ;
#line 234
struct module_sect_attrs;
#line 234
struct module_notes_attrs;
#line 234
struct ftrace_event_call;
#line 234 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[64UL - sizeof(unsigned long )] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   void *percpu ;
   char *args ;
   struct tracepoint *tracepoints ;
   unsigned int num_tracepoints ;
   char const   **trace_bprintk_fmt_start ;
   unsigned int num_trace_bprintk_fmt ;
   struct ftrace_event_call *trace_events ;
   unsigned int num_trace_events ;
   struct list_head modules_which_use_me ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   char *refptr ;
   ctor_fn_t *ctors ;
   unsigned int num_ctors ;
};
#line 665
struct device_driver;
#line 19 "include/linux/klist.h"
struct klist_node;
#line 39 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 16 "include/linux/semaphore.h"
struct semaphore {
   spinlock_t lock ;
   unsigned int count ;
   struct list_head wait_list ;
};
#line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct dma_map_ops;
#line 4 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct dev_archdata {
   void *acpi_handle ;
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct pdev_archdata {

};
#line 30 "include/linux/device.h"
struct device_private;
#line 32
struct driver_private;
#line 33
struct class;
#line 34
struct class_private;
#line 35
struct bus_type;
#line 36
struct bus_type_private;
#line 38 "include/linux/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type *bus , char *buf ) ;
   ssize_t (*store)(struct bus_type *bus , char const   *buf , size_t count ) ;
};
#line 51
struct device_attribute;
#line 51
struct driver_attribute;
#line 51 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device *dev , struct device_driver *drv ) ;
   int (*uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
   int (*probe)(struct device *dev ) ;
   int (*remove)(struct device *dev ) ;
   void (*shutdown)(struct device *dev ) ;
   int (*suspend)(struct device *dev , pm_message_t state ) ;
   int (*resume)(struct device *dev ) ;
   struct dev_pm_ops  const  *pm ;
   struct bus_type_private *p ;
};
#line 122 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   int (*probe)(struct device *dev ) ;
   int (*remove)(struct device *dev ) ;
   void (*shutdown)(struct device *dev ) ;
   int (*suspend)(struct device *dev , pm_message_t state ) ;
   int (*resume)(struct device *dev ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 157 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver *driver , char *buf ) ;
   ssize_t (*store)(struct device_driver *driver , char const   *buf , size_t count ) ;
};
#line 189
struct class_attribute;
#line 189 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
   char *(*devnode)(struct device *dev , mode_t *mode ) ;
   void (*class_release)(struct class *class ) ;
   void (*dev_release)(struct device *dev ) ;
   int (*suspend)(struct device *dev , pm_message_t state ) ;
   int (*resume)(struct device *dev ) ;
   struct dev_pm_ops  const  *pm ;
   struct class_private *p ;
};
#line 211
struct device_type;
#line 252 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class *class , char *buf ) ;
   ssize_t (*store)(struct class *class , char const   *buf , size_t count ) ;
};
#line 299 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device *dev , struct kobj_uevent_env *env ) ;
   char *(*devnode)(struct device *dev , mode_t *mode ) ;
   void (*release)(struct device *dev ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 310 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device *dev , struct device_attribute *attr , char *buf ) ;
   ssize_t (*store)(struct device *dev , struct device_attribute *attr , char const   *buf ,
                    size_t count ) ;
};
#line 370 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 379
struct dma_coherent_mem;
#line 379 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type *type ;
   struct semaphore sem ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   dev_t devt ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device *dev ) ;
};
#line 12 "include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 414
enum dmi_field {
    DMI_NONE = 0,
    DMI_BIOS_VENDOR = 1,
    DMI_BIOS_VERSION = 2,
    DMI_BIOS_DATE = 3,
    DMI_SYS_VENDOR = 4,
    DMI_PRODUCT_NAME = 5,
    DMI_PRODUCT_VERSION = 6,
    DMI_PRODUCT_SERIAL = 7,
    DMI_PRODUCT_UUID = 8,
    DMI_BOARD_VENDOR = 9,
    DMI_BOARD_NAME = 10,
    DMI_BOARD_VERSION = 11,
    DMI_BOARD_SERIAL = 12,
    DMI_BOARD_ASSET_TAG = 13,
    DMI_CHASSIS_VENDOR = 14,
    DMI_CHASSIS_TYPE = 15,
    DMI_CHASSIS_VERSION = 16,
    DMI_CHASSIS_SERIAL = 17,
    DMI_CHASSIS_ASSET_TAG = 18,
    DMI_STRING_MAX = 19
} ;
#line 471 "include/linux/mod_devicetable.h"
struct platform_device_id {
   char name[20] ;
   kernel_ulong_t driver_data  __attribute__((__aligned__(sizeof(kernel_ulong_t )))) ;
};
#line 17 "include/linux/platform_device.h"
struct platform_device {
   char const   *name ;
   int id ;
   struct device dev ;
   u32 num_resources ;
   struct resource *resource ;
   struct platform_device_id *id_entry ;
   struct pdev_archdata archdata ;
};
#line 58 "include/linux/platform_device.h"
struct platform_driver {
   int (*probe)(struct platform_device * ) ;
   int (*remove)(struct platform_device * ) ;
   void (*shutdown)(struct platform_device * ) ;
   int (*suspend)(struct platform_device * , pm_message_t state ) ;
   int (*resume)(struct platform_device * ) ;
   struct device_driver driver ;
   struct platform_device_id *id_table ;
};
#line 23 "include/linux/hwmon-sysfs.h"
struct sensor_device_attribute {
   struct device_attribute dev_attr ;
   int index ;
};
#line 97 "include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2] ;
};
#line 97 "include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 566
struct dentry;
#line 100 "include/linux/rbtree.h"
struct rb_node {
   unsigned long rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
} __attribute__((__aligned__(sizeof(long )))) ;
#line 110 "include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 14 "include/linux/prio_tree.h"
struct prio_tree_node;
#line 14 "include/linux/prio_tree.h"
struct raw_prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
};
#line 20 "include/linux/prio_tree.h"
struct prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
   unsigned long start ;
   unsigned long last ;
};
#line 28 "include/linux/prio_tree.h"
struct prio_tree_root {
   struct prio_tree_node *prio_tree_node ;
   unsigned short index_bits ;
   unsigned short raw ;
};
#line 23 "include/linux/mm_types.h"
struct address_space;
#line 28 "include/linux/mm_types.h"
typedef atomic_long_t mm_counter_t;
#line 40 "include/linux/mm_types.h"
struct __anonstruct____missing_field_name_124 {
   u16 inuse ;
   u16 objects ;
};
#line 40 "include/linux/mm_types.h"
union __anonunion____missing_field_name_123 {
   atomic_t _mapcount ;
   struct __anonstruct____missing_field_name_124 __annonCompField19 ;
};
#line 40 "include/linux/mm_types.h"
struct __anonstruct____missing_field_name_126 {
   unsigned long private ;
   struct address_space *mapping ;
};
#line 40 "include/linux/mm_types.h"
union __anonunion____missing_field_name_125 {
   struct __anonstruct____missing_field_name_126 __annonCompField21 ;
   spinlock_t ptl ;
   struct kmem_cache *slab ;
   struct page *first_page ;
};
#line 40 "include/linux/mm_types.h"
union __anonunion____missing_field_name_127 {
   unsigned long index ;
   void *freelist ;
};
#line 40 "include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   atomic_t _count ;
   union __anonunion____missing_field_name_123 __annonCompField20 ;
   union __anonunion____missing_field_name_125 __annonCompField22 ;
   union __anonunion____missing_field_name_127 __annonCompField23 ;
   struct list_head lru ;
};
#line 134 "include/linux/mm_types.h"
struct __anonstruct_vm_set_129 {
   struct list_head list ;
   void *parent ;
   struct vm_area_struct *head ;
};
#line 134 "include/linux/mm_types.h"
union __anonunion_shared_128 {
   struct __anonstruct_vm_set_129 vm_set ;
   struct raw_prio_tree_node prio_tree_node ;
};
#line 134
struct anon_vma;
#line 134
struct vm_operations_struct;
#line 134
struct mempolicy;
#line 134 "include/linux/mm_types.h"
struct vm_area_struct {
   struct mm_struct *vm_mm ;
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct rb_node vm_rb ;
   union __anonunion_shared_128 shared ;
   struct list_head anon_vma_node ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   unsigned long vm_truncate_count ;
   struct mempolicy *vm_policy ;
};
#line 191 "include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 196 "include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 202
struct linux_binfmt;
#line 202
struct mmu_notifier_mm;
#line 202 "include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file *filp , unsigned long addr , unsigned long len ,
                                      unsigned long pgoff , unsigned long flags ) ;
   void (*unmap_area)(struct mm_struct *mm , unsigned long addr ) ;
   unsigned long mmap_base ;
   unsigned long task_size ;
   unsigned long cached_hole_size ;
   unsigned long free_area_cache ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   int map_count ;
   struct rw_semaphore mmap_sem ;
   spinlock_t page_table_lock ;
   struct list_head mmlist ;
   mm_counter_t _file_rss ;
   mm_counter_t _anon_rss ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long reserved_vm ;
   unsigned long def_flags ;
   unsigned long nr_ptes ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[2 * ((2 + 19) + 1)] ;
   struct linux_binfmt *binfmt ;
   cpumask_t cpu_vm_mask ;
   mm_context_t context ;
   unsigned int faultstamp ;
   unsigned int token_priority ;
   unsigned int last_interval ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct hlist_head ioctx_list ;
   struct task_struct *owner ;
   struct file *exe_file ;
   unsigned long num_exe_file_vmas ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
};
#line 7 "include/asm-generic/cputime.h"
typedef unsigned long cputime_t;
#line 117 "include/linux/sem.h"
struct sem_undo_list;
#line 130 "include/linux/sem.h"
struct sem_undo_list {
   atomic_t refcnt ;
   spinlock_t lock ;
   struct list_head list_proc ;
};
#line 136 "include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 10 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct siginfo;
#line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_130 {
   unsigned long sig[64 / 64] ;
};
#line 30 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_130 sigset_t;
#line 17 "include/asm-generic/signal-defs.h"
typedef void __signalfn_t(int  );
#line 18 "include/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "include/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 21 "include/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 167 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 174 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 7 "include/asm-generic/siginfo.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 7 "include/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__kill_132 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__timer_133 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[sizeof(__kernel_uid32_t ) - sizeof(int )] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__rt_134 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__sigchld_135 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__sigfault_136 {
   void *_addr ;
   short _addr_lsb ;
};
#line 40 "include/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_137 {
   long _band ;
   int _fd ;
};
#line 40 "include/asm-generic/siginfo.h"
union __anonunion__sifields_131 {
   int _pad[(128UL - 4UL * sizeof(int )) / sizeof(int )] ;
   struct __anonstruct__kill_132 _kill ;
   struct __anonstruct__timer_133 _timer ;
   struct __anonstruct__rt_134 _rt ;
   struct __anonstruct__sigchld_135 _sigchld ;
   struct __anonstruct__sigfault_136 _sigfault ;
   struct __anonstruct__sigpoll_137 _sigpoll ;
};
#line 40 "include/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_131 _sifields ;
};
#line 40 "include/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 14 "include/linux/signal.h"
struct user_struct;
#line 24 "include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 5 "include/linux/path.h"
struct vfsmount;
#line 7 "include/linux/path.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 6 "include/linux/pid.h"
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 50
struct pid_namespace;
#line 50 "include/linux/pid.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 57 "include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[PIDTYPE_MAX] ;
   struct rcu_head rcu ;
   struct upid numbers[1] ;
};
#line 69 "include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 97 "include/linux/proportions.h"
struct prop_local_single {
   unsigned long events ;
   unsigned long period ;
   int shift ;
   spinlock_t lock ;
};
#line 10 "include/linux/seccomp.h"
struct __anonstruct_seccomp_t_140 {
   int mode ;
};
#line 10 "include/linux/seccomp.h"
typedef struct __anonstruct_seccomp_t_140 seccomp_t;
#line 80 "include/linux/plist.h"
struct plist_head {
   struct list_head prio_list ;
   struct list_head node_list ;
   spinlock_t *lock ;
};
#line 88 "include/linux/plist.h"
struct plist_node {
   int prio ;
   struct plist_head plist ;
};
#line 38 "include/linux/rtmutex.h"
struct rt_mutex_waiter;
#line 43 "include/linux/resource.h"
struct rlimit {
   unsigned long rlim_cur ;
   unsigned long rlim_max ;
};
#line 27 "include/linux/hrtimer.h"
struct hrtimer_clock_base;
#line 28
struct hrtimer_cpu_base;
#line 44
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 103 "include/linux/hrtimer.h"
struct hrtimer {
   struct rb_node node ;
   ktime_t _expires ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   int start_pid ;
   void *start_site ;
   char start_comm[16] ;
};
#line 141 "include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   clockid_t index ;
   struct rb_root active ;
   struct rb_node *first ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 170 "include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   spinlock_t lock ;
   struct hrtimer_clock_base clock_base[2] ;
   ktime_t expires_next ;
   int hres_active ;
   unsigned long nr_events ;
};
#line 11 "include/linux/task_io_accounting.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 18 "include/linux/latencytop.h"
struct latency_record {
   unsigned long backtrace[12] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 939 "include/linux/sysctl.h"
struct nsproxy;
#line 29 "include/linux/key.h"
typedef int32_t key_serial_t;
#line 32 "include/linux/key.h"
typedef uint32_t key_perm_t;
#line 76
struct signal_struct;
#line 77
struct cred;
#line 79
struct key_type;
#line 81
struct keyring_list;
#line 124
struct key_user;
#line 124 "include/linux/key.h"
union __anonunion____missing_field_name_195 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 124 "include/linux/key.h"
union __anonunion_type_data_196 {
   struct list_head link ;
   unsigned long x[2] ;
   void *p[2] ;
};
#line 124 "include/linux/key.h"
union __anonunion_payload_197 {
   unsigned long value ;
   void *data ;
   struct keyring_list *subscriptions ;
};
#line 124 "include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   struct rb_node serial_node ;
   struct key_type *type ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion____missing_field_name_195 __annonCompField24 ;
   uid_t uid ;
   gid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   char *description ;
   union __anonunion_type_data_196 type_data ;
   union __anonunion_payload_197 payload ;
};
#line 18 "include/linux/selinux.h"
struct audit_context;
#line 23 "include/linux/cred.h"
struct inode;
#line 31 "include/linux/cred.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   gid_t small_block[32] ;
   gid_t *blocks[0] ;
};
#line 83 "include/linux/cred.h"
struct thread_group_cred {
   atomic_t usage ;
   pid_t tgid ;
   spinlock_t lock ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct rcu_head rcu ;
};
#line 116 "include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   uid_t uid ;
   gid_t gid ;
   uid_t suid ;
   gid_t sgid ;
   uid_t euid ;
   gid_t egid ;
   uid_t fsuid ;
   gid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   struct thread_group_cred *tgcred ;
   void *security ;
   struct user_struct *user ;
   struct group_info *group_info ;
   struct rcu_head rcu ;
};
#line 98 "include/linux/sched.h"
struct futex_pi_state;
#line 99
struct robust_list_head;
#line 100
struct bio;
#line 101
struct fs_struct;
#line 102
struct bts_context;
#line 103
struct perf_event_context;
#line 152
struct cfs_rq;
#line 153
struct task_group;
#line 353
struct user_namespace;
#line 58 "include/linux/aio_abi.h"
struct io_event {
   __u64 data ;
   __u64 obj ;
   __s64 res ;
   __s64 res2 ;
};
#line 16 "include/linux/uio.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 15 "include/linux/aio.h"
struct kioctx;
#line 87 "include/linux/aio.h"
union __anonunion_ki_obj_199 {
   void *user ;
   struct task_struct *tsk ;
};
#line 87
struct eventfd_ctx;
#line 87 "include/linux/aio.h"
struct kiocb {
   struct list_head ki_run_list ;
   unsigned long ki_flags ;
   int ki_users ;
   unsigned int ki_key ;
   struct file *ki_filp ;
   struct kioctx *ki_ctx ;
   int (*ki_cancel)(struct kiocb * , struct io_event * ) ;
   ssize_t (*ki_retry)(struct kiocb * ) ;
   void (*ki_dtor)(struct kiocb * ) ;
   union __anonunion_ki_obj_199 ki_obj ;
   __u64 ki_user_data ;
   wait_queue_t ki_wait ;
   loff_t ki_pos ;
   void *private ;
   unsigned short ki_opcode ;
   size_t ki_nbytes ;
   char *ki_buf ;
   size_t ki_left ;
   struct iovec ki_inline_vec ;
   struct iovec *ki_iovec ;
   unsigned long ki_nr_segs ;
   unsigned long ki_cur_seg ;
   struct list_head ki_list ;
   struct eventfd_ctx *ki_eventfd ;
};
#line 167 "include/linux/aio.h"
struct aio_ring_info {
   unsigned long mmap_base ;
   unsigned long mmap_size ;
   struct page **ring_pages ;
   spinlock_t ring_lock ;
   long nr_pages ;
   unsigned int nr ;
   unsigned int tail ;
   struct page *internal_pages[8] ;
};
#line 180 "include/linux/aio.h"
struct kioctx {
   atomic_t users ;
   int dead ;
   struct mm_struct *mm ;
   unsigned long user_id ;
   struct hlist_node list ;
   wait_queue_head_t wait ;
   spinlock_t ctx_lock ;
   int reqs_active ;
   struct list_head active_reqs ;
   struct list_head run_list ;
   unsigned int max_reqs ;
   struct aio_ring_info ring_info ;
   struct delayed_work wq ;
   struct rcu_head rcu_head ;
};
#line 477 "include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 484 "include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 492 "include/linux/sched.h"
struct cpu_itimer {
   cputime_t expires ;
   cputime_t incr ;
   u32 error ;
   u32 incr_error ;
};
#line 510 "include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 546 "include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   spinlock_t lock ;
};
#line 559
struct tty_struct;
#line 559
struct taskstats;
#line 559
struct tty_audit_buf;
#line 559 "include/linux/sched.h"
struct signal_struct {
   atomic_t count ;
   atomic_t live ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   struct cpu_itimer it[2] ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   cputime_t prev_utime ;
   cputime_t prev_stime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   unsigned long maxrss ;
   unsigned long cmaxrss ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
   int oom_adj ;
};
#line 700 "include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t files ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   uid_t uid ;
   struct user_namespace *user_ns ;
   struct task_group *tg ;
   struct kobject kobj ;
   struct delayed_work work ;
   atomic_long_t locked_vm ;
};
#line 749
struct backing_dev_info;
#line 750
struct reclaim_state;
#line 753 "include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
   unsigned int bkl_count ;
};
#line 769 "include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 814
enum cpu_idle_type {
    CPU_IDLE = 0,
    CPU_NOT_IDLE = 1,
    CPU_NEWLY_IDLE = 2,
    CPU_MAX_IDLE_TYPES = 3
} ;
#line 891 "include/linux/sched.h"
struct sched_group {
   struct sched_group *next ;
   unsigned int cpu_power ;
   unsigned long cpumask[0] ;
};
#line 918
enum sched_domain_level {
    SD_LV_NONE = 0,
    SD_LV_SIBLING = 1,
    SD_LV_MC = 2,
    SD_LV_CPU = 3,
    SD_LV_NODE = 4,
    SD_LV_ALLNODES = 5,
    SD_LV_MAX = 6
} ;
#line 936 "include/linux/sched.h"
struct sched_domain {
   struct sched_domain *parent ;
   struct sched_domain *child ;
   struct sched_group *groups ;
   unsigned long min_interval ;
   unsigned long max_interval ;
   unsigned int busy_factor ;
   unsigned int imbalance_pct ;
   unsigned int cache_nice_tries ;
   unsigned int busy_idx ;
   unsigned int idle_idx ;
   unsigned int newidle_idx ;
   unsigned int wake_idx ;
   unsigned int forkexec_idx ;
   unsigned int smt_gain ;
   int flags ;
   enum sched_domain_level level ;
   unsigned long last_balance ;
   unsigned int balance_interval ;
   unsigned int nr_balance_failed ;
   u64 last_update ;
   unsigned int lb_count[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_failed[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_balanced[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_imbalance[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_gained[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_hot_gained[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_nobusyg[CPU_MAX_IDLE_TYPES] ;
   unsigned int lb_nobusyq[CPU_MAX_IDLE_TYPES] ;
   unsigned int alb_count ;
   unsigned int alb_failed ;
   unsigned int alb_pushed ;
   unsigned int sbe_count ;
   unsigned int sbe_balanced ;
   unsigned int sbe_pushed ;
   unsigned int sbf_count ;
   unsigned int sbf_balanced ;
   unsigned int sbf_pushed ;
   unsigned int ttwu_wake_remote ;
   unsigned int ttwu_move_affine ;
   unsigned int ttwu_move_balance ;
   char *name ;
   unsigned long span[0] ;
};
#line 1046
struct io_context;
#line 1057
struct pipe_inode_info;
#line 1060
struct rq;
#line 1069 "include/linux/sched.h"
struct sched_class {
   struct sched_class  const  *next ;
   void (*enqueue_task)(struct rq *rq , struct task_struct *p , int wakeup ) ;
   void (*dequeue_task)(struct rq *rq , struct task_struct *p , int sleep ) ;
   void (*yield_task)(struct rq *rq ) ;
   void (*check_preempt_curr)(struct rq *rq , struct task_struct *p , int flags ) ;
   struct task_struct *(*pick_next_task)(struct rq *rq ) ;
   void (*put_prev_task)(struct rq *rq , struct task_struct *p ) ;
   int (*select_task_rq)(struct task_struct *p , int sd_flag , int flags ) ;
   unsigned long (*load_balance)(struct rq *this_rq , int this_cpu , struct rq *busiest ,
                                 unsigned long max_load_move , struct sched_domain *sd ,
                                 enum cpu_idle_type idle , int *all_pinned , int *this_best_prio ) ;
   int (*move_one_task)(struct rq *this_rq , int this_cpu , struct rq *busiest , struct sched_domain *sd ,
                        enum cpu_idle_type idle ) ;
   void (*pre_schedule)(struct rq *this_rq , struct task_struct *task ) ;
   void (*post_schedule)(struct rq *this_rq ) ;
   void (*task_wake_up)(struct rq *this_rq , struct task_struct *task ) ;
   void (*set_cpus_allowed)(struct task_struct *p , struct cpumask  const  *newmask ) ;
   void (*rq_online)(struct rq *rq ) ;
   void (*rq_offline)(struct rq *rq ) ;
   void (*set_curr_task)(struct rq *rq ) ;
   void (*task_tick)(struct rq *rq , struct task_struct *p , int queued ) ;
   void (*task_new)(struct rq *rq , struct task_struct *p ) ;
   void (*switched_from)(struct rq *this_rq , struct task_struct *task , int running ) ;
   void (*switched_to)(struct rq *this_rq , struct task_struct *task , int running ) ;
   void (*prio_changed)(struct rq *this_rq , struct task_struct *task , int oldprio ,
                        int running ) ;
   unsigned int (*get_rr_interval)(struct task_struct *task ) ;
   void (*moved_group)(struct task_struct *p ) ;
};
#line 1121 "include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   unsigned long inv_weight ;
};
#line 1135 "include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 last_wakeup ;
   u64 avg_overlap ;
   u64 nr_migrations ;
   u64 start_runtime ;
   u64 avg_wakeup ;
   u64 avg_running ;
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_forced2_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
};
#line 1200
struct rt_rq;
#line 1200 "include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned int time_slice ;
   int nr_cpus_allowed ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1218
struct files_struct;
#line 1218
struct irqaction;
#line 1218
struct css_set;
#line 1218
struct compat_robust_list_head;
#line 1218 "include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   int lock_depth ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct hlist_head preempt_notifiers ;
   unsigned char fpu_counter ;
   unsigned int policy ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int personality ;
   unsigned int did_exec : 1 ;
   unsigned int in_execve : 1 ;
   unsigned int in_iowait : 1 ;
   unsigned int sched_reset_on_fork : 1 ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct bts_context *bts ;
   struct pid_link pids[PIDTYPE_MAX] ;
   struct list_head thread_group ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   cputime_t prev_utime ;
   cputime_t prev_stime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   struct mutex cred_guard_mutex ;
   struct cred *replacement_session_keyring ;
   char comm[16] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void *priv ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct audit_context *audit_context ;
   uid_t loginuid ;
   unsigned int sessionid ;
   seccomp_t seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   struct irqaction *irqaction ;
   spinlock_t pi_lock ;
   struct plist_head pi_waiters ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   unsigned long hardirq_enable_ip ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned int hardirq_disable_event ;
   int hardirqs_enabled ;
   int hardirq_context ;
   unsigned long softirq_disable_ip ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_disable_event ;
   unsigned int softirq_enable_event ;
   int softirqs_enabled ;
   int softirq_context ;
   void *journal_info ;
   struct bio *bio_list ;
   struct bio **bio_tail ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   int cpuset_mem_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_event_context *perf_event_ctxp ;
   struct mutex perf_event_mutex ;
   struct list_head perf_event_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   atomic_t fs_excl ;
   struct rcu_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   struct prop_local_single dirties ;
   int latency_record_count ;
   struct latency_record latency_record[32] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   struct list_head *scm_work_list ;
   unsigned long trace ;
   unsigned long trace_recursion ;
   unsigned long stack_start ;
};
#line 95 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/uaccess.h"
struct exception_table_entry {
   unsigned long insn ;
   unsigned long fixup ;
};
#line 79 "include/acpi/actbl.h"
#pragma pack(1)
#line 307
#pragma pack()
#line 79 "include/acpi/actbl1.h"
#pragma pack(1)
#line 912
#pragma pack()
#line 42 "include/acpi/actbl2.h"
#pragma pack(1)
#line 866
#pragma pack()
#line 137 "include/acpi/acrestyp.h"
#pragma pack(1)
#line 389
#pragma pack()
#line 11 "include/linux/dcache.h"
struct nameidata;
#line 33 "include/linux/dcache.h"
struct qstr {
   unsigned int hash ;
   unsigned int len ;
   unsigned char const   *name ;
};
#line 89 "include/linux/dcache.h"
union __anonunion_d_u_209 {
   struct list_head d_child ;
   struct rcu_head d_rcu ;
};
#line 89
struct dentry_operations;
#line 89
struct super_block;
#line 89 "include/linux/dcache.h"
struct dentry {
   atomic_t d_count ;
   unsigned int d_flags ;
   spinlock_t d_lock ;
   int d_mounted ;
   struct inode *d_inode ;
   struct hlist_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct list_head d_lru ;
   union __anonunion_d_u_209 d_u ;
   struct list_head d_subdirs ;
   struct list_head d_alias ;
   unsigned long d_time ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   void *d_fsdata ;
   unsigned char d_iname[32] ;
};
#line 134 "include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , struct nameidata * ) ;
   int (*d_hash)(struct dentry * , struct qstr * ) ;
   int (*d_compare)(struct dentry * , struct qstr * , struct qstr * ) ;
   int (*d_delete)(struct dentry * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
};
#line 61 "include/linux/radix-tree.h"
struct radix_tree_node;
#line 61 "include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 16 "include/linux/fiemap.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3] ;
};
#line 385 "include/linux/fs.h"
struct export_operations;
#line 391
struct poll_table_struct;
#line 392
struct kstatfs;
#line 447 "include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   uid_t ia_uid ;
   gid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 106 "include/linux/quota.h"
struct if_dqblk {
   __u64 dqb_bhardlimit ;
   __u64 dqb_bsoftlimit ;
   __u64 dqb_curspace ;
   __u64 dqb_ihardlimit ;
   __u64 dqb_isoftlimit ;
   __u64 dqb_curinodes ;
   __u64 dqb_btime ;
   __u64 dqb_itime ;
   __u32 dqb_valid ;
};
#line 127 "include/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 50 "include/linux/dqblk_xfs.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8] ;
};
#line 137 "include/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 137 "include/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 143 "include/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 17 "include/linux/dqblk_qtree.h"
struct dquot;
#line 182 "include/linux/quota.h"
typedef __kernel_uid32_t qid_t;
#line 183 "include/linux/quota.h"
typedef long long qsize_t;
#line 197 "include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 212
struct quota_format_type;
#line 214 "include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 264 "include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   unsigned int dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   short dq_type ;
   struct mem_dqblk dq_dqb ;
};
#line 284 "include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block *sb , int type ) ;
   int (*read_file_info)(struct super_block *sb , int type ) ;
   int (*write_file_info)(struct super_block *sb , int type ) ;
   int (*free_file_info)(struct super_block *sb , int type ) ;
   int (*read_dqblk)(struct dquot *dquot ) ;
   int (*commit_dqblk)(struct dquot *dquot ) ;
   int (*release_dqblk)(struct dquot *dquot ) ;
};
#line 295 "include/linux/quota.h"
struct dquot_operations {
   int (*initialize)(struct inode * , int  ) ;
   int (*drop)(struct inode * ) ;
   int (*alloc_space)(struct inode * , qsize_t  , int  ) ;
   int (*alloc_inode)(struct inode  const  * , qsize_t  ) ;
   int (*free_space)(struct inode * , qsize_t  ) ;
   int (*free_inode)(struct inode  const  * , qsize_t  ) ;
   int (*transfer)(struct inode * , struct iattr * ) ;
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   int (*reserve_space)(struct inode * , qsize_t  , int  ) ;
   int (*claim_space)(struct inode * , qsize_t  ) ;
   void (*release_rsv)(struct inode * , qsize_t  ) ;
   qsize_t (*get_reserved_space)(struct inode * ) ;
};
#line 321 "include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , char * , int  ) ;
   int (*quota_off)(struct super_block * , int  , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
   int (*set_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
   int (*get_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
   int (*set_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
};
#line 335 "include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 390 "include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2] ;
   struct mem_dqinfo info[2] ;
   struct quota_format_ops *ops[2] ;
};
#line 512 "include/linux/fs.h"
struct writeback_control;
#line 555 "include/linux/fs.h"
union __anonunion_arg_215 {
   char *buf ;
   void *data ;
};
#line 555 "include/linux/fs.h"
struct __anonstruct_read_descriptor_t_214 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_215 arg ;
   int error ;
};
#line 555 "include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_214 read_descriptor_t;
#line 568 "include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page *page , struct writeback_control *wbc ) ;
   int (*readpage)(struct file * , struct page * ) ;
   void (*sync_page)(struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page *page ) ;
   int (*readpages)(struct file *filp , struct address_space *mapping , struct list_head *pages ,
                    unsigned int nr_pages ) ;
   int (*write_begin)(struct file * , struct address_space *mapping , loff_t pos ,
                      unsigned int len , unsigned int flags , struct page **pagep ,
                      void **fsdata ) ;
   int (*write_end)(struct file * , struct address_space *mapping , loff_t pos , unsigned int len ,
                    unsigned int copied , struct page *page , void *fsdata ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned long  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  *iov , loff_t offset ,
                        unsigned long nr_segs ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , read_descriptor_t * , unsigned long  ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
};
#line 619 "include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct prio_tree_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   spinlock_t i_mmap_lock ;
   unsigned int truncate_count ;
   unsigned long nrpages ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   struct address_space *assoc_mapping ;
} __attribute__((__aligned__(sizeof(long )))) ;
#line 643
struct hd_struct;
#line 643
struct gendisk;
#line 643 "include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   int bd_openers ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_holder ;
   int bd_holders ;
   struct list_head bd_holder_list ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 717
struct posix_acl;
#line 720
struct inode_operations;
#line 720
struct file_operations;
#line 720
struct file_lock;
#line 720
struct cdev;
#line 720 "include/linux/fs.h"
union __anonunion____missing_field_name_216 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 720 "include/linux/fs.h"
struct inode {
   struct hlist_node i_hash ;
   struct list_head i_list ;
   struct list_head i_sb_list ;
   struct list_head i_dentry ;
   unsigned long i_ino ;
   atomic_t i_count ;
   unsigned int i_nlink ;
   uid_t i_uid ;
   gid_t i_gid ;
   dev_t i_rdev ;
   u64 i_version ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   blkcnt_t i_blocks ;
   unsigned int i_blkbits ;
   unsigned short i_bytes ;
   umode_t i_mode ;
   spinlock_t i_lock ;
   struct mutex i_mutex ;
   struct rw_semaphore i_alloc_sem ;
   struct inode_operations  const  *i_op ;
   struct file_operations  const  *i_fop ;
   struct super_block *i_sb ;
   struct file_lock *i_flock ;
   struct address_space *i_mapping ;
   struct address_space i_data ;
   struct dquot *i_dquot[2] ;
   struct list_head i_devices ;
   union __anonunion____missing_field_name_216 __annonCompField25 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_mark_entries ;
   struct list_head inotify_watches ;
   struct mutex inotify_mutex ;
   unsigned long i_state ;
   unsigned long dirtied_when ;
   unsigned int i_flags ;
   atomic_t i_writecount ;
   void *i_security ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   void *i_private ;
};
#line 875 "include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   uid_t uid ;
   uid_t euid ;
   int signum ;
};
#line 886 "include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 909 "include/linux/fs.h"
union __anonunion_f_u_217 {
   struct list_head fu_list ;
   struct rcu_head fu_rcuhead ;
};
#line 909 "include/linux/fs.h"
struct file {
   union __anonunion_f_u_217 f_u ;
   struct path f_path ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct address_space *f_mapping ;
   unsigned long f_mnt_write_state ;
};
#line 1028 "include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 1030 "include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 1035 "include/linux/fs.h"
struct lock_manager_operations {
   int (*fl_compare_owner)(struct file_lock * , struct file_lock * ) ;
   void (*fl_notify)(struct file_lock * ) ;
   int (*fl_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
   void (*fl_break)(struct file_lock * ) ;
   int (*fl_mylease)(struct file_lock * , struct file_lock * ) ;
   int (*fl_change)(struct file_lock ** , int  ) ;
};
#line 8 "include/linux/nfs_fs_i.h"
struct nlm_lockowner;
#line 13 "include/linux/nfs_fs_i.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 19
struct nfs4_lock_state;
#line 20 "include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 1057 "include/linux/fs.h"
struct fasync_struct;
#line 1057 "include/linux/fs.h"
struct __anonstruct_afs_219 {
   struct list_head link ;
   int state ;
};
#line 1057 "include/linux/fs.h"
union __anonunion_fl_u_218 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_219 afs ;
};
#line 1057 "include/linux/fs.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned char fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_218 fl_u ;
};
#line 1282 "include/linux/fs.h"
struct fasync_struct {
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
};
#line 1317
struct file_system_type;
#line 1317
struct super_operations;
#line 1317
struct xattr_handler;
#line 1317
struct mtd_info;
#line 1317 "include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned long s_blocksize ;
   unsigned char s_blocksize_bits ;
   unsigned char s_dirt ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   struct mutex s_lock ;
   int s_count ;
   int s_need_sync ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_head s_anon ;
   struct list_head s_files ;
   struct list_head s_dentry_lru ;
   int s_nr_dentry_unused ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct list_head s_instances ;
   struct quota_info s_dquot ;
   int s_frozen ;
   wait_queue_head_t s_wait_unfrozen ;
   char s_id[32] ;
   void *s_fs_info ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   u32 s_time_gran ;
   char *s_subtype ;
   char *s_options ;
};
#line 1436 "include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1483 "include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*readdir)(struct file * , void * , int (*)(void * , char const   * , int  ,
                                                   loff_t  , u64  , unsigned int  ) ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   int (*ioctl)(struct inode * , struct file * , unsigned int  , unsigned long  ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t id ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , struct dentry * , int datasync ) ;
   int (*aio_fsync)(struct kiocb * , int datasync ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
};
#line 1512 "include/linux/fs.h"
struct inode_operations {
   int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
   struct dentry *(*lookup)(struct inode * , struct dentry * , struct nameidata * ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , int  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , int  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   void (*truncate)(struct inode * ) ;
   int (*permission)(struct inode * , int  ) ;
   int (*check_acl)(struct inode * , int  ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount *mnt , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   void (*truncate_range)(struct inode * , loff_t  , loff_t  ) ;
   long (*fallocate)(struct inode *inode , int mode , loff_t offset , loff_t len ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64 start , u64 len ) ;
};
#line 1556 "include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block *sb ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * ) ;
   int (*write_inode)(struct inode * , int  ) ;
   void (*drop_inode)(struct inode * ) ;
   void (*delete_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   void (*write_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block *sb , int wait ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*clear_inode)(struct inode * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct vfsmount * ) ;
   int (*show_stats)(struct seq_file * , struct vfsmount * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
};
#line 1739 "include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   int (*get_sb)(struct file_system_type * , int  , char const   * , void * , struct vfsmount * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct list_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
   struct lock_class_key i_alloc_sem_key ;
};
#line 58 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
enum chips {
    it87 = 0,
    it8712 = 1,
    it8716 = 2,
    it8718 = 3,
    it8720 = 4
} ;
#line 244 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
struct it87_sio_data {
   enum chips type ;
   u8 revision ;
   u8 vid_value ;
   u8 skip_vid ;
   u8 skip_pwm ;
};
#line 256 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
struct it87_data {
   struct device *hwmon_dev ;
   enum chips type ;
   u8 revision ;
   unsigned short addr ;
   char const   *name ;
   struct mutex update_lock ;
   char valid ;
   unsigned long last_updated ;
   u8 in[9] ;
   u8 in_max[8] ;
   u8 in_min[8] ;
   u8 has_fan ;
   u16 fan[5] ;
   u16 fan_min[5] ;
   s8 temp[3] ;
   s8 temp_high[3] ;
   s8 temp_low[3] ;
   u8 sensor ;
   u8 fan_div[3] ;
   u8 vid ;
   u8 vrm ;
   u32 alarms ;
   u8 fan_main_ctrl ;
   u8 fan_ctl ;
   u8 manual_pwm_ctl[3] ;
};
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 21 "include/linux/log2.h"
extern  __attribute__((__noreturn__)) int ____ilog2_NaN(void)  __attribute__((__const__)) ;
#line 172 "include/linux/kernel.h"
extern unsigned long simple_strtoul(char const   * , char ** , unsigned int  ) ;
#line 173
extern long simple_strtol(char const   * , char ** , unsigned int  ) ;
#line 180
extern int ( /* format attribute */  sprintf)(char *buf , char const   *fmt  , ...) ;
#line 240
extern int ( /* format attribute */  printk)(char const   *fmt  , ...) ;
#line 347 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
extern struct pv_cpu_ops pv_cpu_ops ;
#line 55 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/string_64.h"
extern void *memset(void *s , int c , size_t n ) ;
#line 64
extern int strcmp(char const   *cs , char const   *ct ) ;
#line 339 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
__inline static void slow_down_io(void) 
{ 


  {
#line 341
  (*(pv_cpu_ops.io_delay))();
#line 347
  return;
}
}
#line 9 "include/asm-generic/getorder.h"
__inline static int get_order(unsigned long size )  __attribute__((__const__)) ;
#line 9 "include/asm-generic/getorder.h"
__inline static int get_order(unsigned long size ) 
{ 
  int order ;

  {
#line 13
  size = (size - 1UL) >> (12 - 1);
#line 14
  order = -1;
#line 15
  while (1) {
#line 16
    size = size >> 1;
#line 17
    order = order + 1;
#line 15
    if (size) {

    } else {
#line 15
      break;
    }
  }
#line 19
  return (order);
}
}
#line 27 "include/linux/err.h"
__inline static long PTR_ERR(void const   *ptr ) 
{ 


  {
#line 29
  return ((long )ptr);
}
}
#line 32 "include/linux/err.h"
__inline static long IS_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
#line 34
  tmp = __builtin_expect(! (! ((unsigned long )ptr >= 0xfffffffffffff001UL)), 0);
#line 34
  return (tmp);
}
}
#line 107 "include/linux/mutex.h"
extern void __mutex_init(struct mutex *lock , char const   *name , struct lock_class_key *key ) ;
#line 136
void mutex_lock(struct mutex *lock ) ;
#line 152
void mutex_unlock(struct mutex *lock ) ;
#line 110 "include/linux/ioport.h"
extern struct resource ioport_resource ;
#line 146
extern struct resource *__request_region(struct resource * , resource_size_t start ,
                                         resource_size_t n , char const   *name ,
                                         int flags ) ;
#line 157
extern void __release_region(struct resource * , resource_size_t  , resource_size_t  ) ;
#line 82 "include/linux/jiffies.h"
extern unsigned long volatile   jiffies  __attribute__((__section__(".data"))) ;
#line 314 "include/linux/gfp.h"
extern unsigned long __get_free_pages(gfp_t gfp_mask , unsigned int order ) ;
#line 112 "include/linux/sysfs.h"
extern int ( __attribute__((__warn_unused_result__)) sysfs_create_group)(struct kobject *kobj ,
                                                                         struct attribute_group  const  *grp ) ;
#line 116
extern void sysfs_remove_group(struct kobject *kobj , struct attribute_group  const  *grp ) ;
#line 79 "include/linux/kobject.h"
__inline static char const   *kobject_name(struct kobject  const  *kobj ) 
{ 


  {
#line 81
  return (kobj->name);
}
}
#line 173 "include/linux/moduleparam.h"
extern int param_set_ushort(char const   *val , struct kernel_param *kp ) ;
#line 174
extern int param_get_ushort(char *buffer , struct kernel_param *kp ) ;
#line 198
extern int param_set_bool(char const   *val , struct kernel_param *kp ) ;
#line 199
extern int param_get_bool(char *buffer , struct kernel_param *kp ) ;
#line 195 "include/linux/rcupdate.h"
__inline static void rcu_read_lock_sched_notrace(void)  __attribute__((__no_instrument_function__)) ;
#line 195 "include/linux/rcupdate.h"
__inline static void rcu_read_lock_sched_notrace(void) 
{ 


  {
#line 197
  while (1) {
#line 197
    break;
  }
#line 199
  return;
}
}
#line 138 "include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 81 "include/trace/events/kmem.h"
extern struct tracepoint __tracepoint_kmalloc ;
#line 81 "include/trace/events/kmem.h"
__inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
                                   size_t bytes_alloc , gfp_t gfp_flags ) 
{ 
  void **it_func ;
  void **_________p1 ;
  long tmp ;

  {
#line 81
  tmp = __builtin_expect(! (! __tracepoint_kmalloc.state), 0);
#line 81
  if (tmp) {
#line 81
    while (1) {
#line 81
      rcu_read_lock_sched_notrace();
#line 81
      _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
#line 81
      while (1) {
#line 81
        break;
      }
#line 81
      it_func = _________p1;
#line 81
      if (it_func) {
#line 81
        while (1) {
#line 81
          (*((void (*)(unsigned long call_site , void const   *ptr , size_t bytes_req ,
                       size_t bytes_alloc , gfp_t gfp_flags ))*it_func))(call_site,
                                                                         ptr, bytes_req,
                                                                         bytes_alloc,
                                                                         gfp_flags);
#line 81
          it_func = it_func + 1;
#line 81
          if (*it_func) {

          } else {
#line 81
            break;
          }
        }
      } else {

      }
#line 81
      rcu_read_lock_sched_notrace();
#line 81
      break;
    }
  } else {

  }
#line 81
  return;
}
}
#line 63 "include/linux/kmemleak.h"
__inline static void kmemleak_alloc(void const   *ptr , size_t size , int min_count ,
                                    gfp_t gfp ) 
{ 


  {
#line 66
  return;
}
}
#line 142 "include/linux/slub_def.h"
extern struct kmem_cache kmalloc_caches[12 + 2] ;
#line 148 "include/linux/slub_def.h"
__inline static int ( __attribute__((__always_inline__)) kmalloc_index)(size_t size ) 
{ 
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;
  int tmp___7 ;
  int tmp___8 ;
  int tmp___9 ;
  int tmp___10 ;
  int tmp___11 ;
  int tmp___12 ;
  int tmp___13 ;
  int tmp___14 ;
  int tmp___15 ;
  int tmp___16 ;
  int tmp___17 ;
  int tmp___18 ;
  int tmp___19 ;
  int tmp___20 ;
  int tmp___21 ;
  int tmp___22 ;
  int tmp___23 ;
  int tmp___24 ;
  int tmp___25 ;
  int tmp___26 ;
  int tmp___27 ;
  int tmp___28 ;
  int tmp___29 ;
  int tmp___30 ;
  int tmp___31 ;
  int tmp___32 ;
  int tmp___33 ;
  int tmp___34 ;
  int tmp___35 ;
  int tmp___36 ;
  int tmp___37 ;
  int tmp___38 ;
  int tmp___39 ;
  int tmp___40 ;
  int tmp___41 ;
  int tmp___42 ;
  int tmp___43 ;
  int tmp___44 ;
  int tmp___45 ;
  int tmp___46 ;
  int tmp___47 ;
  int tmp___48 ;
  int tmp___49 ;
  int tmp___50 ;
  int tmp___51 ;
  int tmp___52 ;
  int tmp___53 ;
  int tmp___54 ;
  int tmp___55 ;
  int tmp___56 ;
  int tmp___57 ;
  int tmp___58 ;
  int tmp___59 ;
  int tmp___60 ;
  int tmp___61 ;
  int tmp___62 ;
  int tmp___63 ;
  int tmp___64 ;
  int tmp___65 ;

  {
#line 150
  if (! size) {
#line 151
    return (0);
  } else {

  }
#line 153
  if (size <= (size_t )8) {
#line 154
    if (8 < 1) {
#line 154
      tmp = ____ilog2_NaN();
#line 154
      tmp___65 = tmp;
    } else {
#line 154
      if (8ULL & (1ULL << 63)) {
#line 154
        tmp___64 = 63;
      } else {
#line 154
        if (8ULL & (1ULL << 62)) {
#line 154
          tmp___63 = 62;
        } else {
#line 154
          if (8ULL & (1ULL << 61)) {
#line 154
            tmp___62 = 61;
          } else {
#line 154
            if (8ULL & (1ULL << 60)) {
#line 154
              tmp___61 = 60;
            } else {
#line 154
              if (8ULL & (1ULL << 59)) {
#line 154
                tmp___60 = 59;
              } else {
#line 154
                if (8ULL & (1ULL << 58)) {
#line 154
                  tmp___59 = 58;
                } else {
#line 154
                  if (8ULL & (1ULL << 57)) {
#line 154
                    tmp___58 = 57;
                  } else {
#line 154
                    if (8ULL & (1ULL << 56)) {
#line 154
                      tmp___57 = 56;
                    } else {
#line 154
                      if (8ULL & (1ULL << 55)) {
#line 154
                        tmp___56 = 55;
                      } else {
#line 154
                        if (8ULL & (1ULL << 54)) {
#line 154
                          tmp___55 = 54;
                        } else {
#line 154
                          if (8ULL & (1ULL << 53)) {
#line 154
                            tmp___54 = 53;
                          } else {
#line 154
                            if (8ULL & (1ULL << 52)) {
#line 154
                              tmp___53 = 52;
                            } else {
#line 154
                              if (8ULL & (1ULL << 51)) {
#line 154
                                tmp___52 = 51;
                              } else {
#line 154
                                if (8ULL & (1ULL << 50)) {
#line 154
                                  tmp___51 = 50;
                                } else {
#line 154
                                  if (8ULL & (1ULL << 49)) {
#line 154
                                    tmp___50 = 49;
                                  } else {
#line 154
                                    if (8ULL & (1ULL << 48)) {
#line 154
                                      tmp___49 = 48;
                                    } else {
#line 154
                                      if (8ULL & (1ULL << 47)) {
#line 154
                                        tmp___48 = 47;
                                      } else {
#line 154
                                        if (8ULL & (1ULL << 46)) {
#line 154
                                          tmp___47 = 46;
                                        } else {
#line 154
                                          if (8ULL & (1ULL << 45)) {
#line 154
                                            tmp___46 = 45;
                                          } else {
#line 154
                                            if (8ULL & (1ULL << 44)) {
#line 154
                                              tmp___45 = 44;
                                            } else {
#line 154
                                              if (8ULL & (1ULL << 43)) {
#line 154
                                                tmp___44 = 43;
                                              } else {
#line 154
                                                if (8ULL & (1ULL << 42)) {
#line 154
                                                  tmp___43 = 42;
                                                } else {
#line 154
                                                  if (8ULL & (1ULL << 41)) {
#line 154
                                                    tmp___42 = 41;
                                                  } else {
#line 154
                                                    if (8ULL & (1ULL << 40)) {
#line 154
                                                      tmp___41 = 40;
                                                    } else {
#line 154
                                                      if (8ULL & (1ULL << 39)) {
#line 154
                                                        tmp___40 = 39;
                                                      } else {
#line 154
                                                        if (8ULL & (1ULL << 38)) {
#line 154
                                                          tmp___39 = 38;
                                                        } else {
#line 154
                                                          if (8ULL & (1ULL << 37)) {
#line 154
                                                            tmp___38 = 37;
                                                          } else {
#line 154
                                                            if (8ULL & (1ULL << 36)) {
#line 154
                                                              tmp___37 = 36;
                                                            } else {
#line 154
                                                              if (8ULL & (1ULL << 35)) {
#line 154
                                                                tmp___36 = 35;
                                                              } else {
#line 154
                                                                if (8ULL & (1ULL << 34)) {
#line 154
                                                                  tmp___35 = 34;
                                                                } else {
#line 154
                                                                  if (8ULL & (1ULL << 33)) {
#line 154
                                                                    tmp___34 = 33;
                                                                  } else {
#line 154
                                                                    if (8ULL & (1ULL << 32)) {
#line 154
                                                                      tmp___33 = 32;
                                                                    } else {
#line 154
                                                                      if (8ULL & (1ULL << 31)) {
#line 154
                                                                        tmp___32 = 31;
                                                                      } else {
#line 154
                                                                        if (8ULL & (1ULL << 30)) {
#line 154
                                                                          tmp___31 = 30;
                                                                        } else {
#line 154
                                                                          if (8ULL & (1ULL << 29)) {
#line 154
                                                                            tmp___30 = 29;
                                                                          } else {
#line 154
                                                                            if (8ULL & (1ULL << 28)) {
#line 154
                                                                              tmp___29 = 28;
                                                                            } else {
#line 154
                                                                              if (8ULL & (1ULL << 27)) {
#line 154
                                                                                tmp___28 = 27;
                                                                              } else {
#line 154
                                                                                if (8ULL & (1ULL << 26)) {
#line 154
                                                                                  tmp___27 = 26;
                                                                                } else {
#line 154
                                                                                  if (8ULL & (1ULL << 25)) {
#line 154
                                                                                    tmp___26 = 25;
                                                                                  } else {
#line 154
                                                                                    if (8ULL & (1ULL << 24)) {
#line 154
                                                                                      tmp___25 = 24;
                                                                                    } else {
#line 154
                                                                                      if (8ULL & (1ULL << 23)) {
#line 154
                                                                                        tmp___24 = 23;
                                                                                      } else {
#line 154
                                                                                        if (8ULL & (1ULL << 22)) {
#line 154
                                                                                          tmp___23 = 22;
                                                                                        } else {
#line 154
                                                                                          if (8ULL & (1ULL << 21)) {
#line 154
                                                                                            tmp___22 = 21;
                                                                                          } else {
#line 154
                                                                                            if (8ULL & (1ULL << 20)) {
#line 154
                                                                                              tmp___21 = 20;
                                                                                            } else {
#line 154
                                                                                              if (8ULL & (1ULL << 19)) {
#line 154
                                                                                                tmp___20 = 19;
                                                                                              } else {
#line 154
                                                                                                if (8ULL & (1ULL << 18)) {
#line 154
                                                                                                  tmp___19 = 18;
                                                                                                } else {
#line 154
                                                                                                  if (8ULL & (1ULL << 17)) {
#line 154
                                                                                                    tmp___18 = 17;
                                                                                                  } else {
#line 154
                                                                                                    if (8ULL & (1ULL << 16)) {
#line 154
                                                                                                      tmp___17 = 16;
                                                                                                    } else {
#line 154
                                                                                                      if (8ULL & (1ULL << 15)) {
#line 154
                                                                                                        tmp___16 = 15;
                                                                                                      } else {
#line 154
                                                                                                        if (8ULL & (1ULL << 14)) {
#line 154
                                                                                                          tmp___15 = 14;
                                                                                                        } else {
#line 154
                                                                                                          if (8ULL & (1ULL << 13)) {
#line 154
                                                                                                            tmp___14 = 13;
                                                                                                          } else {
#line 154
                                                                                                            if (8ULL & (1ULL << 12)) {
#line 154
                                                                                                              tmp___13 = 12;
                                                                                                            } else {
#line 154
                                                                                                              if (8ULL & (1ULL << 11)) {
#line 154
                                                                                                                tmp___12 = 11;
                                                                                                              } else {
#line 154
                                                                                                                if (8ULL & (1ULL << 10)) {
#line 154
                                                                                                                  tmp___11 = 10;
                                                                                                                } else {
#line 154
                                                                                                                  if (8ULL & (1ULL << 9)) {
#line 154
                                                                                                                    tmp___10 = 9;
                                                                                                                  } else {
#line 154
                                                                                                                    if (8ULL & (1ULL << 8)) {
#line 154
                                                                                                                      tmp___9 = 8;
                                                                                                                    } else {
#line 154
                                                                                                                      if (8ULL & (1ULL << 7)) {
#line 154
                                                                                                                        tmp___8 = 7;
                                                                                                                      } else {
#line 154
                                                                                                                        if (8ULL & (1ULL << 6)) {
#line 154
                                                                                                                          tmp___7 = 6;
                                                                                                                        } else {
#line 154
                                                                                                                          if (8ULL & (1ULL << 5)) {
#line 154
                                                                                                                            tmp___6 = 5;
                                                                                                                          } else {
#line 154
                                                                                                                            if (8ULL & (1ULL << 4)) {
#line 154
                                                                                                                              tmp___5 = 4;
                                                                                                                            } else {
#line 154
                                                                                                                              if (8ULL & (1ULL << 3)) {
#line 154
                                                                                                                                tmp___4 = 3;
                                                                                                                              } else {
#line 154
                                                                                                                                if (8ULL & (1ULL << 2)) {
#line 154
                                                                                                                                  tmp___3 = 2;
                                                                                                                                } else {
#line 154
                                                                                                                                  if (8ULL & (1ULL << 1)) {
#line 154
                                                                                                                                    tmp___2 = 1;
                                                                                                                                  } else {
#line 154
                                                                                                                                    if (8ULL & (1ULL << 0)) {
#line 154
                                                                                                                                      tmp___1 = 0;
                                                                                                                                    } else {
#line 154
                                                                                                                                      tmp___0 = ____ilog2_NaN();
#line 154
                                                                                                                                      tmp___1 = tmp___0;
                                                                                                                                    }
#line 154
                                                                                                                                    tmp___2 = tmp___1;
                                                                                                                                  }
#line 154
                                                                                                                                  tmp___3 = tmp___2;
                                                                                                                                }
#line 154
                                                                                                                                tmp___4 = tmp___3;
                                                                                                                              }
#line 154
                                                                                                                              tmp___5 = tmp___4;
                                                                                                                            }
#line 154
                                                                                                                            tmp___6 = tmp___5;
                                                                                                                          }
#line 154
                                                                                                                          tmp___7 = tmp___6;
                                                                                                                        }
#line 154
                                                                                                                        tmp___8 = tmp___7;
                                                                                                                      }
#line 154
                                                                                                                      tmp___9 = tmp___8;
                                                                                                                    }
#line 154
                                                                                                                    tmp___10 = tmp___9;
                                                                                                                  }
#line 154
                                                                                                                  tmp___11 = tmp___10;
                                                                                                                }
#line 154
                                                                                                                tmp___12 = tmp___11;
                                                                                                              }
#line 154
                                                                                                              tmp___13 = tmp___12;
                                                                                                            }
#line 154
                                                                                                            tmp___14 = tmp___13;
                                                                                                          }
#line 154
                                                                                                          tmp___15 = tmp___14;
                                                                                                        }
#line 154
                                                                                                        tmp___16 = tmp___15;
                                                                                                      }
#line 154
                                                                                                      tmp___17 = tmp___16;
                                                                                                    }
#line 154
                                                                                                    tmp___18 = tmp___17;
                                                                                                  }
#line 154
                                                                                                  tmp___19 = tmp___18;
                                                                                                }
#line 154
                                                                                                tmp___20 = tmp___19;
                                                                                              }
#line 154
                                                                                              tmp___21 = tmp___20;
                                                                                            }
#line 154
                                                                                            tmp___22 = tmp___21;
                                                                                          }
#line 154
                                                                                          tmp___23 = tmp___22;
                                                                                        }
#line 154
                                                                                        tmp___24 = tmp___23;
                                                                                      }
#line 154
                                                                                      tmp___25 = tmp___24;
                                                                                    }
#line 154
                                                                                    tmp___26 = tmp___25;
                                                                                  }
#line 154
                                                                                  tmp___27 = tmp___26;
                                                                                }
#line 154
                                                                                tmp___28 = tmp___27;
                                                                              }
#line 154
                                                                              tmp___29 = tmp___28;
                                                                            }
#line 154
                                                                            tmp___30 = tmp___29;
                                                                          }
#line 154
                                                                          tmp___31 = tmp___30;
                                                                        }
#line 154
                                                                        tmp___32 = tmp___31;
                                                                      }
#line 154
                                                                      tmp___33 = tmp___32;
                                                                    }
#line 154
                                                                    tmp___34 = tmp___33;
                                                                  }
#line 154
                                                                  tmp___35 = tmp___34;
                                                                }
#line 154
                                                                tmp___36 = tmp___35;
                                                              }
#line 154
                                                              tmp___37 = tmp___36;
                                                            }
#line 154
                                                            tmp___38 = tmp___37;
                                                          }
#line 154
                                                          tmp___39 = tmp___38;
                                                        }
#line 154
                                                        tmp___40 = tmp___39;
                                                      }
#line 154
                                                      tmp___41 = tmp___40;
                                                    }
#line 154
                                                    tmp___42 = tmp___41;
                                                  }
#line 154
                                                  tmp___43 = tmp___42;
                                                }
#line 154
                                                tmp___44 = tmp___43;
                                              }
#line 154
                                              tmp___45 = tmp___44;
                                            }
#line 154
                                            tmp___46 = tmp___45;
                                          }
#line 154
                                          tmp___47 = tmp___46;
                                        }
#line 154
                                        tmp___48 = tmp___47;
                                      }
#line 154
                                      tmp___49 = tmp___48;
                                    }
#line 154
                                    tmp___50 = tmp___49;
                                  }
#line 154
                                  tmp___51 = tmp___50;
                                }
#line 154
                                tmp___52 = tmp___51;
                              }
#line 154
                              tmp___53 = tmp___52;
                            }
#line 154
                            tmp___54 = tmp___53;
                          }
#line 154
                          tmp___55 = tmp___54;
                        }
#line 154
                        tmp___56 = tmp___55;
                      }
#line 154
                      tmp___57 = tmp___56;
                    }
#line 154
                    tmp___58 = tmp___57;
                  }
#line 154
                  tmp___59 = tmp___58;
                }
#line 154
                tmp___60 = tmp___59;
              }
#line 154
              tmp___61 = tmp___60;
            }
#line 154
            tmp___62 = tmp___61;
          }
#line 154
          tmp___63 = tmp___62;
        }
#line 154
        tmp___64 = tmp___63;
      }
#line 154
      tmp___65 = tmp___64;
    }
#line 154
    return (tmp___65);
  } else {

  }
#line 156
  if ((8 <= 32 && size > (size_t )64) && size <= (size_t )96) {
#line 157
    return (1);
  } else {

  }
#line 158
  if ((8 <= 64 && size > (size_t )128) && size <= (size_t )192) {
#line 159
    return (2);
  } else {

  }
#line 160
  if (size <= (size_t )8) {
#line 160
    return (3);
  } else {

  }
#line 161
  if (size <= (size_t )16) {
#line 161
    return (4);
  } else {

  }
#line 162
  if (size <= (size_t )32) {
#line 162
    return (5);
  } else {

  }
#line 163
  if (size <= (size_t )64) {
#line 163
    return (6);
  } else {

  }
#line 164
  if (size <= (size_t )128) {
#line 164
    return (7);
  } else {

  }
#line 165
  if (size <= (size_t )256) {
#line 165
    return (8);
  } else {

  }
#line 166
  if (size <= (size_t )512) {
#line 166
    return (9);
  } else {

  }
#line 167
  if (size <= (size_t )1024) {
#line 167
    return (10);
  } else {

  }
#line 168
  if (size <= (size_t )(2 * 1024)) {
#line 168
    return (11);
  } else {

  }
#line 169
  if (size <= (size_t )(4 * 1024)) {
#line 169
    return (12);
  } else {

  }
#line 174
  if (size <= (size_t )(8 * 1024)) {
#line 174
    return (13);
  } else {

  }
#line 175
  if (size <= (size_t )(16 * 1024)) {
#line 175
    return (14);
  } else {

  }
#line 176
  if (size <= (size_t )(32 * 1024)) {
#line 176
    return (15);
  } else {

  }
#line 177
  if (size <= (size_t )(64 * 1024)) {
#line 177
    return (16);
  } else {

  }
#line 178
  if (size <= (size_t )(128 * 1024)) {
#line 178
    return (17);
  } else {

  }
#line 179
  if (size <= (size_t )(256 * 1024)) {
#line 179
    return (18);
  } else {

  }
#line 180
  if (size <= (size_t )(512 * 1024)) {
#line 180
    return (19);
  } else {

  }
#line 181
  if (size <= (size_t )(1024 * 1024)) {
#line 181
    return (20);
  } else {

  }
#line 182
  if (size <= (size_t )((2 * 1024) * 1024)) {
#line 182
    return (21);
  } else {

  }
#line 183
  return (-1);
}
}
#line 200 "include/linux/slub_def.h"
__inline static struct kmem_cache *( __attribute__((__always_inline__)) kmalloc_slab)(size_t size ) 
{ 
  int index ;
  int tmp ;

  {
#line 202
  tmp = kmalloc_index(size);
#line 202
  index = tmp;
#line 204
  if (index == 0) {
#line 205
    return ((void *)0);
  } else {

  }
#line 207
  return (& kmalloc_caches[index]);
}
}
#line 217
extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
#line 218
extern void *__kmalloc(size_t size , gfp_t flags ) ;
#line 223 "include/linux/slub_def.h"
__inline static void *( __attribute__((__always_inline__)) kmem_cache_alloc_notrace)(struct kmem_cache *s ,
                                                                                     gfp_t gfpflags ) 
{ 
  void *tmp ;

  {
#line 226
  tmp = kmem_cache_alloc(s, gfpflags);
#line 226
  return (tmp);
}
}
#line 230 "include/linux/slub_def.h"
__inline static void *( __attribute__((__always_inline__)) kmalloc_large)(size_t size ,
                                                                          gfp_t flags ) 
{ 
  unsigned int order ;
  int tmp ;
  void *ret ;
  unsigned long tmp___0 ;

  {
#line 232
  tmp = get_order(size);
#line 232
  order = tmp;
#line 233
  tmp___0 = __get_free_pages(flags | 16384U, order);
#line 233
  ret = (void *)tmp___0;
#line 235
  kmemleak_alloc(ret, size, 1, flags);
#line 236
  trace_kmalloc((unsigned long )((void *)0), ret, size, (1UL << 12) << order, flags);
#line 238
  return (ret);
}
}
#line 241 "include/linux/slub_def.h"
__inline static void *( __attribute__((__always_inline__)) kmalloc)(size_t size ,
                                                                    gfp_t flags ) 
{ 
  void *ret ;
  void *tmp ;
  struct kmem_cache *s ;
  struct kmem_cache *tmp___0 ;
  void *tmp___1 ;

  {
#line 245
  if (0) {
#line 246
    if (size > 2UL * (1UL << 12)) {
#line 247
      tmp = kmalloc_large(size, flags);
#line 247
      return (tmp);
    } else {

    }
#line 249
    if (! (flags & 1U)) {
#line 250
      tmp___0 = kmalloc_slab(size);
#line 250
      s = tmp___0;
#line 252
      if (! s) {
#line 253
        return ((void *)16);
      } else {

      }
#line 255
      ret = kmem_cache_alloc_notrace(s, flags);
#line 257
      trace_kmalloc((unsigned long )((void *)0), ret, size, s->size, flags);
#line 259
      return (ret);
    } else {

    }
  } else {

  }
#line 262
  tmp___1 = __kmalloc(size, flags);
#line 262
  return (tmp___1);
}
}
#line 313 "include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 315
  tmp = kmalloc(size, flags | 32768U);
#line 315
  return (tmp);
}
}
#line 68 "include/linux/module.h"
int init_module(void) ;
#line 69
void cleanup_module(void) ;
#line 88
extern struct module __this_module ;
#line 321 "include/linux/device.h"
extern int ( __attribute__((__warn_unused_result__)) device_create_file)(struct device *device ,
                                                                         struct device_attribute *entry ) ;
#line 433 "include/linux/device.h"
__inline static char const   *dev_name(struct device  const  *dev ) 
{ 
  char const   *tmp ;

  {
#line 435
  tmp = kobject_name(& dev->kobj);
#line 435
  return (tmp);
}
}
#line 494
extern void *dev_get_drvdata(struct device  const  *dev ) ;
#line 495
extern void dev_set_drvdata(struct device *dev , void *data ) ;
#line 575
extern char const   *dev_driver_string(struct device  const  *dev ) ;
#line 35 "include/linux/platform_device.h"
extern void platform_device_unregister(struct platform_device * ) ;
#line 40
extern struct resource *platform_get_resource(struct platform_device * , unsigned int  ,
                                              unsigned int  ) ;
#line 51
extern struct platform_device *platform_device_alloc(char const   *name , int id ) ;
#line 52
extern int platform_device_add_resources(struct platform_device *pdev , struct resource *res ,
                                         unsigned int num ) ;
#line 53
extern int platform_device_add_data(struct platform_device *pdev , void const   *data ,
                                    size_t size ) ;
#line 54
extern int platform_device_add(struct platform_device *pdev ) ;
#line 56
extern void platform_device_put(struct platform_device *pdev ) ;
#line 68
extern int platform_driver_register(struct platform_driver * ) ;
#line 69
extern void platform_driver_unregister(struct platform_driver * ) ;
#line 19 "include/linux/hwmon.h"
extern struct device *hwmon_device_register(struct device *dev ) ;
#line 21
extern void hwmon_device_unregister(struct device *dev ) ;
#line 24 "include/linux/hwmon.h"
__inline static int SENSORS_LIMIT(long value , long low , long high ) 
{ 


  {
#line 26
  if (value < low) {
#line 27
    return (low);
  } else
#line 28
  if (value > high) {
#line 29
    return (high);
  } else {
#line 31
    return (value);
  }
}
}
#line 26 "include/linux/hwmon-vid.h"
extern int vid_from_reg(int val , u8 vrm ) ;
#line 27
extern u8 vid_which_vrm(void) ;
#line 42 "include/linux/dmi.h"
extern char const   *dmi_get_system_info(int field ) ;
#line 243 "include/linux/acpi.h"
extern int acpi_check_resource_conflict(struct resource *res ) ;
#line 118 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/io_64.h"
__inline static unsigned char inb(unsigned short port ) 
{ 
  unsigned char _v ;

  {
#line 118
  __asm__  volatile   ("in"
                       "b"
                       " %"
                       "w"
                       "1,%"
                       ""
                       "0": "=a" (_v): "Nd" (port));
#line 118
  return (_v);
}
}
#line 118 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/io_64.h"
__inline static unsigned char inb_p(unsigned short port ) 
{ 
  unsigned char _v ;

  {
#line 118
  __asm__  volatile   ("in"
                       "b"
                       " %"
                       "w"
                       "1,%"
                       ""
                       "0": "=a" (_v): "Nd" (port));
#line 118
  slow_down_io();
#line 118
  return (_v);
}
}
#line 127 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/io_64.h"
__inline static void outb(unsigned char value , unsigned short port ) 
{ 


  {
#line 127
  __asm__  volatile   ("out"
                       "b"
                       " %"
                       "b"
                       "0,%"
                       "w"
                       "1": : "a" (value), "Nd" (port));
#line 127
  return;
}
}
#line 127 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/io_64.h"
__inline static void outb_p(unsigned char value , unsigned short port ) 
{ 


  {
#line 127
  __asm__  volatile   ("out"
                       "b"
                       " %"
                       "b"
                       "0,%"
                       "w"
                       "1": : "a" (value), "Nd" (port));
#line 127
  slow_down_io();
#line 127
  return;
}
}
#line 60 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static unsigned short force_id  ;
#line 61 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __param_str_force_id[9]  = 
#line 61
  {      'f',      'o',      'r',      'c', 
        'e',      '_',      'i',      'd', 
        '\000'};
#line 61 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct kernel_param  const  __param_force_id  __attribute__((__used__, __unused__,
__section__("__param"), __aligned__(sizeof(void *))))  =    {__param_str_force_id, 0, 0, & param_set_ushort, & param_get_ushort, {& force_id}};
#line 61 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_force_idtype61[25]  __attribute__((__used__, __unused__,
__section__(".modinfo")))  = 
#line 61
  {      'p',      'a',      'r',      'm', 
        't',      'y',      'p',      'e', 
        '=',      'f',      'o',      'r', 
        'c',      'e',      '_',      'i', 
        'd',      ':',      'u',      's', 
        'h',      'o',      'r',      't', 
        '\000'};
#line 62 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_force_id62[46]  __attribute__((__used__, __unused__, __section__(".modinfo")))  = 
#line 62
  {      'p',      'a',      'r',      'm', 
        '=',      'f',      'o',      'r', 
        'c',      'e',      '_',      'i', 
        'd',      ':',      'O',      'v', 
        'e',      'r',      'r',      'i', 
        'd',      'e',      ' ',      't', 
        'h',      'e',      ' ',      'd', 
        'e',      't',      'e',      'c', 
        't',      'e',      'd',      ' ', 
        'd',      'e',      'v',      'i', 
        'c',      'e',      ' ',      'I', 
        'D',      '\000'};
#line 64 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct platform_device *pdev  ;
#line 77 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
__inline static int superio_inb(int reg ) 
{ 
  unsigned char tmp ;

  {
#line 80
  outb(reg, 46);
#line 81
  tmp = inb(47);
#line 81
  return (tmp);
}
}
#line 84 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int superio_inw(int reg ) 
{ 
  int val ;
  int tmp ;
  unsigned char tmp___0 ;
  unsigned char tmp___1 ;

  {
#line 87
  tmp = reg;
#line 87
  reg = reg + 1;
#line 87
  outb(tmp, 46);
#line 88
  tmp___0 = inb(47);
#line 88
  val = (int )tmp___0 << 8;
#line 89
  outb(reg, 46);
#line 90
  tmp___1 = inb(47);
#line 90
  val = val | (int )tmp___1;
#line 91
  return (val);
}
}
#line 94 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
__inline static void superio_select(int ldn ) 
{ 


  {
#line 97
  outb(7, 46);
#line 98
  outb(ldn, 47);
#line 99
  return;
}
}
#line 101 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
__inline static void superio_enter(void) 
{ 


  {
#line 104
  outb(135, 46);
#line 105
  outb(1, 46);
#line 106
  outb(85, 46);
#line 107
  outb(85, 46);
#line 108
  return;
}
}
#line 110 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
__inline static void superio_exit(void) 
{ 


  {
#line 113
  outb(2, 46);
#line 114
  outb(2, 47);
#line 115
  return;
}
}
#line 133 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int update_vbat  ;
#line 136 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int fix_pwm_polarity  ;
#line 172 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static u8 const   IT87_REG_FAN[5]  = {      13,      14,      15,      128, 
        130};
#line 173 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static u8 const   IT87_REG_FAN_MIN[5]  = {      16,      17,      18,      132, 
        134};
#line 174 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static u8 const   IT87_REG_FANX[5]  = {      24,      25,      26,      129, 
        131};
#line 175 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static u8 const   IT87_REG_FANX_MIN[5]  = {      27,      28,      29,      133, 
        135};
#line 196 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
__inline static u8 FAN_TO_REG(long rpm , int div ) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 198
  if (rpm == 0L) {
#line 199
    return (255);
  } else {

  }
#line 200
  tmp = SENSORS_LIMIT(rpm, 1, 1000000);
#line 200
  rpm = tmp;
#line 201
  tmp___0 = SENSORS_LIMIT((1350000L + (rpm * (long )div) / 2L) / (rpm * (long )div),
                          1, 254);
#line 201
  return (tmp___0);
}
}
#line 205 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
__inline static u16 FAN16_TO_REG(long rpm ) 
{ 
  int tmp ;

  {
#line 207
  if (rpm == 0L) {
#line 208
    return (65535);
  } else {

  }
#line 209
  tmp = SENSORS_LIMIT((1350000L + rpm) / (rpm * 2L), 1, 65534);
#line 209
  return (tmp);
}
}
#line 223 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int DIV_TO_REG(int val ) 
{ 
  int answer ;

  {
#line 225
  answer = 0;
#line 226
  while (1) {
#line 226
    if (answer < 7) {
#line 226
      val = val >> 1;
#line 226
      if (val) {

      } else {
#line 226
        break;
      }
    } else {
#line 226
      break;
    }
#line 227
    answer = answer + 1;
  }
#line 228
  return (answer);
}
}
#line 232 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static unsigned int const   pwm_freq[8]  = 
#line 232
  {      48000000 / 128,      24000000 / 128,      12000000 / 128,      8000000 / 128, 
        6000000 / 128,      3000000 / 128,      1500000 / 128,      750000 / 128};
#line 286 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
__inline static int has_16bit_fans(struct it87_data  const  *data ) 
{ 


  {
#line 291
  return ((((((unsigned int const   )data->type == (unsigned int const   )it87 && (int const   )data->revision >= (int const   )3) || ((unsigned int const   )data->type == (unsigned int const   )it8712 && (int const   )data->revision >= (int const   )8)) || (unsigned int const   )data->type == (unsigned int const   )it8716) || (unsigned int const   )data->type == (unsigned int const   )it8718) || (unsigned int const   )data->type == (unsigned int const   )it8720);
}
}
#line 298
static int it87_probe(struct platform_device *pdev___0 )  __attribute__((__section__(".devinit.text"))) ;
#line 299
static int it87_remove(struct platform_device *pdev___0 )  __attribute__((__section__(".devexit.text"))) ;
#line 301
static int it87_read_value(struct it87_data *data , u8 reg ) ;
#line 302
static void it87_write_value(struct it87_data *data , u8 reg , u8 value ) ;
#line 303
static struct it87_data *it87_update_device(struct device *dev ) ;
#line 304
static int it87_check_pwm(struct device *dev )  __attribute__((__section__(".devinit.text"))) ;
#line 305
static void it87_init_device(struct platform_device *pdev___0 )  __attribute__((__section__(".devinit.text"))) ;
#line 308 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct platform_driver it87_driver  =    {& it87_probe, & it87_remove, 0, 0, 0, {"it87", 0, & __this_module, 0, (_Bool)0,
                                           0, 0, 0, 0, 0, 0, 0, 0}, 0};
#line 317 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_in(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 320
  __mptr = attr;
#line 320
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 321
  nr = sensor_attr->index;
#line 323
  tmp = it87_update_device(dev);
#line 323
  data = tmp;
#line 324
  tmp___0 = sprintf(buf, "%d\n", (int )data->in[nr] * 16);
#line 324
  return (tmp___0);
}
}
#line 327 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_in_min(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 330
  __mptr = attr;
#line 330
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 331
  nr = sensor_attr->index;
#line 333
  tmp = it87_update_device(dev);
#line 333
  data = tmp;
#line 334
  tmp___0 = sprintf(buf, "%d\n", (int )data->in_min[nr] * 16);
#line 334
  return (tmp___0);
}
}
#line 337 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_in_max(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 340
  __mptr = attr;
#line 340
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 341
  nr = sensor_attr->index;
#line 343
  tmp = it87_update_device(dev);
#line 343
  data = tmp;
#line 344
  tmp___0 = sprintf(buf, "%d\n", (int )data->in_max[nr] * 16);
#line 344
  return (tmp___0);
}
}
#line 347 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_in_min(struct device *dev , struct device_attribute *attr , char const   *buf ,
                          size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  unsigned long val ;
  unsigned long tmp___0 ;
  int tmp___1 ;

  {
#line 350
  __mptr = attr;
#line 350
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 351
  nr = sensor_attr->index;
#line 353
  tmp = dev_get_drvdata(dev);
#line 353
  data = tmp;
#line 354
  tmp___0 = simple_strtoul(buf, (void *)0, 10);
#line 354
  val = tmp___0;
#line 356
  mutex_lock(& data->update_lock);
#line 357
  tmp___1 = SENSORS_LIMIT((val + 8UL) / 16UL, 0, 255);
#line 357
  data->in_min[nr] = tmp___1;
#line 358
  it87_write_value(data, 49 + nr * 2, data->in_min[nr]);
#line 360
  mutex_unlock(& data->update_lock);
#line 361
  return (count);
}
}
#line 363 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_in_max(struct device *dev , struct device_attribute *attr , char const   *buf ,
                          size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  unsigned long val ;
  unsigned long tmp___0 ;
  int tmp___1 ;

  {
#line 366
  __mptr = attr;
#line 366
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 367
  nr = sensor_attr->index;
#line 369
  tmp = dev_get_drvdata(dev);
#line 369
  data = tmp;
#line 370
  tmp___0 = simple_strtoul(buf, (void *)0, 10);
#line 370
  val = tmp___0;
#line 372
  mutex_lock(& data->update_lock);
#line 373
  tmp___1 = SENSORS_LIMIT((val + 8UL) / 16UL, 0, 255);
#line 373
  data->in_max[nr] = tmp___1;
#line 374
  it87_write_value(data, 48 + nr * 2, data->in_max[nr]);
#line 376
  mutex_unlock(& data->update_lock);
#line 377
  return (count);
}
}
#line 390 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in0_input  =    {{{"in0_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 0};
#line 391 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in0_min  =    {{{"in0_min", 0, ((256 | 32) | 4) | 128}, & show_in_min, & set_in_min}, 0};
#line 391 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in0_max  =    {{{"in0_max", 0, ((256 | 32) | 4) | 128}, & show_in_max, & set_in_max}, 0};
#line 392 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in1_input  =    {{{"in1_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 1};
#line 393 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in1_min  =    {{{"in1_min", 0, ((256 | 32) | 4) | 128}, & show_in_min, & set_in_min}, 1};
#line 393 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in1_max  =    {{{"in1_max", 0, ((256 | 32) | 4) | 128}, & show_in_max, & set_in_max}, 1};
#line 394 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in2_input  =    {{{"in2_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 2};
#line 395 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in2_min  =    {{{"in2_min", 0, ((256 | 32) | 4) | 128}, & show_in_min, & set_in_min}, 2};
#line 395 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in2_max  =    {{{"in2_max", 0, ((256 | 32) | 4) | 128}, & show_in_max, & set_in_max}, 2};
#line 396 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in3_input  =    {{{"in3_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 3};
#line 397 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in3_min  =    {{{"in3_min", 0, ((256 | 32) | 4) | 128}, & show_in_min, & set_in_min}, 3};
#line 397 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in3_max  =    {{{"in3_max", 0, ((256 | 32) | 4) | 128}, & show_in_max, & set_in_max}, 3};
#line 398 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in4_input  =    {{{"in4_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 4};
#line 399 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in4_min  =    {{{"in4_min", 0, ((256 | 32) | 4) | 128}, & show_in_min, & set_in_min}, 4};
#line 399 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in4_max  =    {{{"in4_max", 0, ((256 | 32) | 4) | 128}, & show_in_max, & set_in_max}, 4};
#line 400 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in5_input  =    {{{"in5_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 5};
#line 401 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in5_min  =    {{{"in5_min", 0, ((256 | 32) | 4) | 128}, & show_in_min, & set_in_min}, 5};
#line 401 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in5_max  =    {{{"in5_max", 0, ((256 | 32) | 4) | 128}, & show_in_max, & set_in_max}, 5};
#line 402 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in6_input  =    {{{"in6_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 6};
#line 403 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in6_min  =    {{{"in6_min", 0, ((256 | 32) | 4) | 128}, & show_in_min, & set_in_min}, 6};
#line 403 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in6_max  =    {{{"in6_max", 0, ((256 | 32) | 4) | 128}, & show_in_max, & set_in_max}, 6};
#line 404 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in7_input  =    {{{"in7_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 7};
#line 405 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in7_min  =    {{{"in7_min", 0, ((256 | 32) | 4) | 128}, & show_in_min, & set_in_min}, 7};
#line 405 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in7_max  =    {{{"in7_max", 0, ((256 | 32) | 4) | 128}, & show_in_max, & set_in_max}, 7};
#line 406 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in8_input  =    {{{"in8_input", 0, (256 | 32) | 4}, & show_in, (void *)0}, 8};
#line 409 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_temp(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 412
  __mptr = attr;
#line 412
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 413
  nr = sensor_attr->index;
#line 415
  tmp = it87_update_device(dev);
#line 415
  data = tmp;
#line 416
  tmp___0 = sprintf(buf, "%d\n", (int )data->temp[nr] * 1000);
#line 416
  return (tmp___0);
}
}
#line 418 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_temp_max(struct device *dev , struct device_attribute *attr ,
                             char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 421
  __mptr = attr;
#line 421
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 422
  nr = sensor_attr->index;
#line 424
  tmp = it87_update_device(dev);
#line 424
  data = tmp;
#line 425
  tmp___0 = sprintf(buf, "%d\n", (int )data->temp_high[nr] * 1000);
#line 425
  return (tmp___0);
}
}
#line 427 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_temp_min(struct device *dev , struct device_attribute *attr ,
                             char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 430
  __mptr = attr;
#line 430
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 431
  nr = sensor_attr->index;
#line 433
  tmp = it87_update_device(dev);
#line 433
  data = tmp;
#line 434
  tmp___0 = sprintf(buf, "%d\n", (int )data->temp_low[nr] * 1000);
#line 434
  return (tmp___0);
}
}
#line 436 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_temp_max(struct device *dev , struct device_attribute *attr , char const   *buf ,
                            size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  int val ;
  long tmp___0 ;
  int tmp___1 ;

  {
#line 439
  __mptr = attr;
#line 439
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 440
  nr = sensor_attr->index;
#line 442
  tmp = dev_get_drvdata(dev);
#line 442
  data = tmp;
#line 443
  tmp___0 = simple_strtol(buf, (void *)0, 10);
#line 443
  val = tmp___0;
#line 445
  mutex_lock(& data->update_lock);
#line 446
  tmp___1 = SENSORS_LIMIT(val < 0 ? (val - 500) / 1000 : (val + 500) / 1000, -128,
                          127);
#line 446
  data->temp_high[nr] = tmp___1;
#line 447
  it87_write_value(data, 64 + nr * 2, data->temp_high[nr]);
#line 448
  mutex_unlock(& data->update_lock);
#line 449
  return (count);
}
}
#line 451 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_temp_min(struct device *dev , struct device_attribute *attr , char const   *buf ,
                            size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  int val ;
  long tmp___0 ;
  int tmp___1 ;

  {
#line 454
  __mptr = attr;
#line 454
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 455
  nr = sensor_attr->index;
#line 457
  tmp = dev_get_drvdata(dev);
#line 457
  data = tmp;
#line 458
  tmp___0 = simple_strtol(buf, (void *)0, 10);
#line 458
  val = tmp___0;
#line 460
  mutex_lock(& data->update_lock);
#line 461
  tmp___1 = SENSORS_LIMIT(val < 0 ? (val - 500) / 1000 : (val + 500) / 1000, -128,
                          127);
#line 461
  data->temp_low[nr] = tmp___1;
#line 462
  it87_write_value(data, 65 + nr * 2, data->temp_low[nr]);
#line 463
  mutex_unlock(& data->update_lock);
#line 464
  return (count);
}
}
#line 474 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_input  =    {{{"temp1_input", 0, (256 | 32) | 4}, & show_temp, (void *)0}, 1 - 1};
#line 474 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_max  =    {{{"temp1_max", 0, ((256 | 32) | 4) | 128}, & show_temp_max, & set_temp_max}, 1 - 1};
#line 474 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_min  =    {{{"temp1_min", 0, ((256 | 32) | 4) | 128}, & show_temp_min, & set_temp_min}, 1 - 1};
#line 475 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp2_input  =    {{{"temp2_input", 0, (256 | 32) | 4}, & show_temp, (void *)0}, 2 - 1};
#line 475 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp2_max  =    {{{"temp2_max", 0, ((256 | 32) | 4) | 128}, & show_temp_max, & set_temp_max}, 2 - 1};
#line 475 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp2_min  =    {{{"temp2_min", 0, ((256 | 32) | 4) | 128}, & show_temp_min, & set_temp_min}, 2 - 1};
#line 476 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp3_input  =    {{{"temp3_input", 0, (256 | 32) | 4}, & show_temp, (void *)0}, 3 - 1};
#line 476 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp3_max  =    {{{"temp3_max", 0, ((256 | 32) | 4) | 128}, & show_temp_max, & set_temp_max}, 3 - 1};
#line 476 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp3_min  =    {{{"temp3_min", 0, ((256 | 32) | 4) | 128}, & show_temp_min, & set_temp_min}, 3 - 1};
#line 478 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_sensor(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  u8 reg ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;

  {
#line 481
  __mptr = attr;
#line 481
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 482
  nr = sensor_attr->index;
#line 484
  tmp = it87_update_device(dev);
#line 484
  data = tmp;
#line 485
  reg = data->sensor;
#line 487
  if ((int )reg & (1 << nr)) {
#line 488
    tmp___0 = sprintf(buf, "3\n");
#line 488
    return (tmp___0);
  } else {

  }
#line 489
  if ((int )reg & (8 << nr)) {
#line 490
    tmp___1 = sprintf(buf, "4\n");
#line 490
    return (tmp___1);
  } else {

  }
#line 491
  tmp___2 = sprintf(buf, "0\n");
#line 491
  return (tmp___2);
}
}
#line 493 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_sensor(struct device *dev , struct device_attribute *attr , char const   *buf ,
                          size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  int val ;
  long tmp___0 ;
  char const   *tmp___1 ;
  char const   *tmp___2 ;

  {
#line 496
  __mptr = attr;
#line 496
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 497
  nr = sensor_attr->index;
#line 499
  tmp = dev_get_drvdata(dev);
#line 499
  data = tmp;
#line 500
  tmp___0 = simple_strtol(buf, (void *)0, 10);
#line 500
  val = tmp___0;
#line 502
  mutex_lock(& data->update_lock);
#line 504
  data->sensor = (int )data->sensor & ~ (1 << nr);
#line 505
  data->sensor = (int )data->sensor & ~ (8 << nr);
#line 506
  if (val == 2) {
#line 507
    tmp___1 = dev_name(dev);
#line 507
    tmp___2 = dev_driver_string(dev);
#line 507
    printk("<4>%s %s: Sensor type 2 is deprecated, please use 4 instead\n", tmp___2,
           tmp___1);
#line 509
    val = 4;
  } else {

  }
#line 512
  if (val == 3) {
#line 513
    data->sensor = (int )data->sensor | (1 << nr);
  } else
#line 514
  if (val == 4) {
#line 515
    data->sensor = (int )data->sensor | (8 << nr);
  } else
#line 516
  if (val != 0) {
#line 517
    mutex_unlock(& data->update_lock);
#line 518
    return (-22);
  } else {

  }
#line 520
  it87_write_value(data, 81, data->sensor);
#line 521
  mutex_unlock(& data->update_lock);
#line 522
  return (count);
}
}
#line 528 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_type  =    {{{"temp1_type", 0, ((256 | 32) | 4) | 128}, & show_sensor, & set_sensor}, 1 - 1};
#line 529 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp2_type  =    {{{"temp2_type", 0, ((256 | 32) | 4) | 128}, & show_sensor, & set_sensor}, 2 - 1};
#line 530 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp3_type  =    {{{"temp3_type", 0, ((256 | 32) | 4) | 128}, & show_sensor, & set_sensor}, 3 - 1};
#line 533 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_fan(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 536
  __mptr = attr;
#line 536
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 537
  nr = sensor_attr->index;
#line 539
  tmp = it87_update_device(dev);
#line 539
  data = tmp;
#line 540
  tmp___0 = sprintf(buf, "%d\n", (int )data->fan[nr] == 0 ? -1 : ((int )data->fan[nr] == 255 ? 0 : 1350000 / ((int )data->fan[nr] * (1 << (int )data->fan_div[nr]))));
#line 540
  return (tmp___0);
}
}
#line 543 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_fan_min(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 546
  __mptr = attr;
#line 546
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 547
  nr = sensor_attr->index;
#line 549
  tmp = it87_update_device(dev);
#line 549
  data = tmp;
#line 550
  tmp___0 = sprintf(buf, "%d\n", (int )data->fan_min[nr] == 0 ? -1 : ((int )data->fan_min[nr] == 255 ? 0 : 1350000 / ((int )data->fan_min[nr] * (1 << (int )data->fan_div[nr]))));
#line 550
  return (tmp___0);
}
}
#line 553 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_fan_div(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 556
  __mptr = attr;
#line 556
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 557
  nr = sensor_attr->index;
#line 559
  tmp = it87_update_device(dev);
#line 559
  data = tmp;
#line 560
  tmp___0 = sprintf(buf, "%d\n", 1 << (int )data->fan_div[nr]);
#line 560
  return (tmp___0);
}
}
#line 562 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_pwm_enable(struct device *dev , struct device_attribute *attr ,
                               char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 565
  __mptr = attr;
#line 565
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 566
  nr = sensor_attr->index;
#line 568
  tmp = it87_update_device(dev);
#line 568
  data = tmp;
#line 569
  tmp___0 = sprintf(buf, "%d\n", (int )data->fan_main_ctrl & (1 << nr) ? 1 : 0);
#line 569
  return (tmp___0);
}
}
#line 571 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_pwm(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 574
  __mptr = attr;
#line 574
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 575
  nr = sensor_attr->index;
#line 577
  tmp = it87_update_device(dev);
#line 577
  data = tmp;
#line 578
  tmp___0 = sprintf(buf, "%d\n", data->manual_pwm_ctl[nr]);
#line 578
  return (tmp___0);
}
}
#line 580 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_pwm_freq(struct device *dev , struct device_attribute *attr ,
                             char *buf ) 
{ 
  struct it87_data *data ;
  struct it87_data *tmp ;
  int index ;
  int tmp___0 ;

  {
#line 583
  tmp = it87_update_device(dev);
#line 583
  data = tmp;
#line 584
  index = ((int )data->fan_ctl >> 4) & 7;
#line 586
  tmp___0 = sprintf(buf, "%u\n", pwm_freq[index]);
#line 586
  return (tmp___0);
}
}
#line 588 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_fan_min(struct device *dev , struct device_attribute *attr , char const   *buf ,
                           size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  int val ;
  long tmp___0 ;
  u8 reg ;
  int tmp___1 ;
  u8 tmp___2 ;

  {
#line 591
  __mptr = attr;
#line 591
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 592
  nr = sensor_attr->index;
#line 594
  tmp = dev_get_drvdata(dev);
#line 594
  data = tmp;
#line 595
  tmp___0 = simple_strtol(buf, (void *)0, 10);
#line 595
  val = tmp___0;
#line 598
  mutex_lock(& data->update_lock);
#line 599
  tmp___1 = it87_read_value(data, 11);
#line 599
  reg = tmp___1;
#line 600
  switch (nr) {
  case 0: 
#line 601
  data->fan_div[nr] = (int )reg & 7;
#line 601
  break;
  case 1: 
#line 602
  data->fan_div[nr] = ((int )reg >> 3) & 7;
#line 602
  break;
  case 2: 
#line 603
  data->fan_div[nr] = (int )reg & 64 ? 3 : 1;
#line 603
  break;
  }
#line 606
  tmp___2 = FAN_TO_REG(val, 1 << (int )data->fan_div[nr]);
#line 606
  data->fan_min[nr] = tmp___2;
#line 607
  it87_write_value(data, IT87_REG_FAN_MIN[nr], data->fan_min[nr]);
#line 608
  mutex_unlock(& data->update_lock);
#line 609
  return (count);
}
}
#line 611 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_fan_div(struct device *dev , struct device_attribute *attr , char const   *buf ,
                           size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  unsigned long val ;
  unsigned long tmp___0 ;
  int min ;
  u8 old ;
  int tmp___1 ;
  int tmp___2 ;
  u8 tmp___3 ;

  {
#line 614
  __mptr = attr;
#line 614
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 615
  nr = sensor_attr->index;
#line 617
  tmp = dev_get_drvdata(dev);
#line 617
  data = tmp;
#line 618
  tmp___0 = simple_strtoul(buf, (void *)0, 10);
#line 618
  val = tmp___0;
#line 622
  mutex_lock(& data->update_lock);
#line 623
  tmp___1 = it87_read_value(data, 11);
#line 623
  old = tmp___1;
#line 626
  min = (int )data->fan_min[nr] == 0 ? -1 : ((int )data->fan_min[nr] == 255 ? 0 : 1350000 / ((int )data->fan_min[nr] * (1 << (int )data->fan_div[nr])));
#line 628
  switch (nr) {
  case 1: 
  case 0: 
#line 631
  tmp___2 = DIV_TO_REG(val);
#line 631
  data->fan_div[nr] = tmp___2;
#line 632
  break;
  case 2: 
#line 634
  if (val < 8UL) {
#line 635
    data->fan_div[nr] = 1;
  } else {
#line 637
    data->fan_div[nr] = 3;
  }
  }
#line 639
  val = (int )old & 128;
#line 640
  val = val | (unsigned long )((int )data->fan_div[0] & 7);
#line 641
  val = val | (unsigned long )(((int )data->fan_div[1] & 7) << 3);
#line 642
  if ((int )data->fan_div[2] == 3) {
#line 643
    val = val | (unsigned long )(1 << 6);
  } else {

  }
#line 644
  it87_write_value(data, 11, val);
#line 647
  tmp___3 = FAN_TO_REG(min, 1 << (int )data->fan_div[nr]);
#line 647
  data->fan_min[nr] = tmp___3;
#line 648
  it87_write_value(data, IT87_REG_FAN_MIN[nr], data->fan_min[nr]);
#line 650
  mutex_unlock(& data->update_lock);
#line 651
  return (count);
}
}
#line 653 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_pwm_enable(struct device *dev , struct device_attribute *attr ,
                              char const   *buf , size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  int val ;
  long tmp___0 ;
  int tmp___1 ;

  {
#line 656
  __mptr = attr;
#line 656
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 657
  nr = sensor_attr->index;
#line 659
  tmp = dev_get_drvdata(dev);
#line 659
  data = tmp;
#line 660
  tmp___0 = simple_strtol(buf, (void *)0, 10);
#line 660
  val = tmp___0;
#line 662
  mutex_lock(& data->update_lock);
#line 664
  if (val == 0) {
#line 667
    tmp___1 = it87_read_value(data, 20);
#line 668
    it87_write_value(data, 20, tmp___1 | (1 << nr));
#line 670
    data->fan_main_ctrl = (int )data->fan_main_ctrl & ~ (1 << nr);
#line 671
    it87_write_value(data, 19, data->fan_main_ctrl);
  } else
#line 672
  if (val == 1) {
#line 674
    data->fan_main_ctrl = (int )data->fan_main_ctrl | (1 << nr);
#line 675
    it87_write_value(data, 19, data->fan_main_ctrl);
#line 677
    it87_write_value(data, 21 + nr, (int )data->manual_pwm_ctl[nr] >> 1);
  } else {
#line 679
    mutex_unlock(& data->update_lock);
#line 680
    return (-22);
  }
#line 683
  mutex_unlock(& data->update_lock);
#line 684
  return (count);
}
}
#line 686 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_pwm(struct device *dev , struct device_attribute *attr , char const   *buf ,
                       size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  int val ;
  long tmp___0 ;

  {
#line 689
  __mptr = attr;
#line 689
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 690
  nr = sensor_attr->index;
#line 692
  tmp = dev_get_drvdata(dev);
#line 692
  data = tmp;
#line 693
  tmp___0 = simple_strtol(buf, (void *)0, 10);
#line 693
  val = tmp___0;
#line 695
  if (val < 0 || val > 255) {
#line 696
    return (-22);
  } else {

  }
#line 698
  mutex_lock(& data->update_lock);
#line 699
  data->manual_pwm_ctl[nr] = val;
#line 700
  if ((int )data->fan_main_ctrl & (1 << nr)) {
#line 701
    it87_write_value(data, 21 + nr, (int )data->manual_pwm_ctl[nr] >> 1);
  } else {

  }
#line 702
  mutex_unlock(& data->update_lock);
#line 703
  return (count);
}
}
#line 705 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_pwm_freq(struct device *dev , struct device_attribute *attr , char const   *buf ,
                            size_t count ) 
{ 
  struct it87_data *data ;
  void *tmp ;
  unsigned long val ;
  unsigned long tmp___0 ;
  int i ;
  int tmp___1 ;

  {
#line 708
  tmp = dev_get_drvdata(dev);
#line 708
  data = tmp;
#line 709
  tmp___0 = simple_strtoul(buf, (void *)0, 10);
#line 709
  val = tmp___0;
#line 713
  i = 0;
#line 713
  while (1) {
#line 713
    if (i < 7) {

    } else {
#line 713
      break;
    }
#line 714
    if (val > (unsigned long )((pwm_freq[i] + pwm_freq[i + 1]) / (unsigned int const   )2)) {
#line 715
      break;
    } else {

    }
#line 713
    i = i + 1;
  }
#line 718
  mutex_lock(& data->update_lock);
#line 719
  tmp___1 = it87_read_value(data, 20);
#line 719
  data->fan_ctl = tmp___1 & 143;
#line 720
  data->fan_ctl = (int )data->fan_ctl | (i << 4);
#line 721
  it87_write_value(data, 20, data->fan_ctl);
#line 722
  mutex_unlock(& data->update_lock);
#line 724
  return (count);
}
}
#line 735 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan1_input  =    {{{"fan1_input", 0, (256 | 32) | 4}, & show_fan, (void *)0}, 1 - 1};
#line 735 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan1_min  =    {{{"fan1_min", 0, ((256 | 32) | 4) | 128}, & show_fan_min, & set_fan_min}, 1 - 1};
#line 735 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan1_div  =    {{{"fan1_div", 0, ((256 | 32) | 4) | 128}, & show_fan_div, & set_fan_div}, 1 - 1};
#line 736 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan2_input  =    {{{"fan2_input", 0, (256 | 32) | 4}, & show_fan, (void *)0}, 2 - 1};
#line 736 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan2_min  =    {{{"fan2_min", 0, ((256 | 32) | 4) | 128}, & show_fan_min, & set_fan_min}, 2 - 1};
#line 736 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan2_div  =    {{{"fan2_div", 0, ((256 | 32) | 4) | 128}, & show_fan_div, & set_fan_div}, 2 - 1};
#line 737 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan3_input  =    {{{"fan3_input", 0, (256 | 32) | 4}, & show_fan, (void *)0}, 3 - 1};
#line 737 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan3_min  =    {{{"fan3_min", 0, ((256 | 32) | 4) | 128}, & show_fan_min, & set_fan_min}, 3 - 1};
#line 737 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan3_div  =    {{{"fan3_div", 0, ((256 | 32) | 4) | 128}, & show_fan_div, & set_fan_div}, 3 - 1};
#line 748 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_pwm1_enable  =    {{{"pwm1_enable", 0, ((256 | 32) | 4) | 128}, & show_pwm_enable, & set_pwm_enable},
    1 - 1};
#line 748 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_pwm1  =    {{{"pwm1", 0, ((256 | 32) | 4) | 128}, & show_pwm, & set_pwm}, 1 - 1};
#line 748 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct device_attribute dev_attr_pwm1_freq  =    {{"pwm1_freq", 0, 1 == 1 ? ((256 | 32) | 4) | 128 : (256 | 32) | 4}, & show_pwm_freq,
    1 == 1 ? & set_pwm_freq : (void *)0};
#line 749 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_pwm2_enable  =    {{{"pwm2_enable", 0, ((256 | 32) | 4) | 128}, & show_pwm_enable, & set_pwm_enable},
    2 - 1};
#line 749 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_pwm2  =    {{{"pwm2", 0, ((256 | 32) | 4) | 128}, & show_pwm, & set_pwm}, 2 - 1};
#line 749 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct device_attribute dev_attr_pwm2_freq  =    {{"pwm2_freq", 0, 2 == 1 ? ((256 | 32) | 4) | 128 : (256 | 32) | 4}, & show_pwm_freq,
    2 == 1 ? & set_pwm_freq : (void *)0};
#line 750 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_pwm3_enable  =    {{{"pwm3_enable", 0, ((256 | 32) | 4) | 128}, & show_pwm_enable, & set_pwm_enable},
    3 - 1};
#line 750 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_pwm3  =    {{{"pwm3", 0, ((256 | 32) | 4) | 128}, & show_pwm, & set_pwm}, 3 - 1};
#line 750 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct device_attribute dev_attr_pwm3_freq  =    {{"pwm3_freq", 0, 3 == 1 ? ((256 | 32) | 4) | 128 : (256 | 32) | 4}, & show_pwm_freq,
    3 == 1 ? & set_pwm_freq : (void *)0};
#line 753 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_fan16(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 756
  __mptr = attr;
#line 756
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 757
  nr = sensor_attr->index;
#line 758
  tmp = it87_update_device(dev);
#line 758
  data = tmp;
#line 759
  tmp___0 = sprintf(buf, "%d\n", (int )data->fan[nr] == 0 ? -1 : ((int )data->fan[nr] == 65535 ? 0 : 1350000 / ((int )data->fan[nr] * 2)));
#line 759
  return (tmp___0);
}
}
#line 762 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_fan16_min(struct device *dev , struct device_attribute *attr ,
                              char *buf ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 765
  __mptr = attr;
#line 765
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 766
  nr = sensor_attr->index;
#line 767
  tmp = it87_update_device(dev);
#line 767
  data = tmp;
#line 768
  tmp___0 = sprintf(buf, "%d\n", (int )data->fan_min[nr] == 0 ? -1 : ((int )data->fan_min[nr] == 65535 ? 0 : 1350000 / ((int )data->fan_min[nr] * 2)));
#line 768
  return (tmp___0);
}
}
#line 771 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t set_fan16_min(struct device *dev , struct device_attribute *attr ,
                             char const   *buf , size_t count ) 
{ 
  struct sensor_device_attribute *sensor_attr ;
  struct device_attribute  const  *__mptr ;
  int nr ;
  struct it87_data *data ;
  void *tmp ;
  int val ;
  long tmp___0 ;

  {
#line 774
  __mptr = attr;
#line 774
  sensor_attr = (struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr));
#line 775
  nr = sensor_attr->index;
#line 776
  tmp = dev_get_drvdata(dev);
#line 776
  data = tmp;
#line 777
  tmp___0 = simple_strtol(buf, (void *)0, 10);
#line 777
  val = tmp___0;
#line 779
  mutex_lock(& data->update_lock);
#line 780
  data->fan_min[nr] = FAN16_TO_REG(val);
#line 781
  it87_write_value(data, IT87_REG_FAN_MIN[nr], (int )data->fan_min[nr] & 255);
#line 783
  it87_write_value(data, IT87_REG_FANX_MIN[nr], (int )data->fan_min[nr] >> 8);
#line 785
  mutex_unlock(& data->update_lock);
#line 786
  return (count);
}
}
#line 800 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan1_input16  =    {{{"fan1_input", 0, (256 | 32) | 4}, & show_fan16, (void *)0}, 1 - 1};
#line 800 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan1_min16  =    {{{"fan1_min", 0, ((256 | 32) | 4) | 128}, & show_fan16_min, & set_fan16_min},
    1 - 1};
#line 801 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan2_input16  =    {{{"fan2_input", 0, (256 | 32) | 4}, & show_fan16, (void *)0}, 2 - 1};
#line 801 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan2_min16  =    {{{"fan2_min", 0, ((256 | 32) | 4) | 128}, & show_fan16_min, & set_fan16_min},
    2 - 1};
#line 802 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan3_input16  =    {{{"fan3_input", 0, (256 | 32) | 4}, & show_fan16, (void *)0}, 3 - 1};
#line 802 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan3_min16  =    {{{"fan3_min", 0, ((256 | 32) | 4) | 128}, & show_fan16_min, & set_fan16_min},
    3 - 1};
#line 803 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan4_input16  =    {{{"fan4_input", 0, (256 | 32) | 4}, & show_fan16, (void *)0}, 4 - 1};
#line 803 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan4_min16  =    {{{"fan4_min", 0, ((256 | 32) | 4) | 128}, & show_fan16_min, & set_fan16_min},
    4 - 1};
#line 804 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan5_input16  =    {{{"fan5_input", 0, (256 | 32) | 4}, & show_fan16, (void *)0}, 5 - 1};
#line 804 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan5_min16  =    {{{"fan5_min", 0, ((256 | 32) | 4) | 128}, & show_fan16_min, & set_fan16_min},
    5 - 1};
#line 807 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_alarms(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 809
  tmp = it87_update_device(dev);
#line 809
  data = tmp;
#line 810
  tmp___0 = sprintf(buf, "%u\n", data->alarms);
#line 810
  return (tmp___0);
}
}
#line 812 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct device_attribute dev_attr_alarms  =    {{"alarms", 0, (256 | 32) | 4}, & show_alarms, (void *)0};
#line 814 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_alarm(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  int bitnr ;
  struct device_attribute  const  *__mptr ;
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;

  {
#line 817
  __mptr = attr;
#line 817
  bitnr = ((struct sensor_device_attribute *)((char *)__mptr - (unsigned int )(& ((struct sensor_device_attribute *)0)->dev_attr)))->index;
#line 818
  tmp = it87_update_device(dev);
#line 818
  data = tmp;
#line 819
  tmp___0 = sprintf(buf, "%u\n", (data->alarms >> bitnr) & 1U);
#line 819
  return (tmp___0);
}
}
#line 821 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in0_alarm  =    {{{"in0_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 8};
#line 822 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in1_alarm  =    {{{"in1_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 9};
#line 823 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in2_alarm  =    {{{"in2_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 10};
#line 824 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in3_alarm  =    {{{"in3_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 11};
#line 825 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in4_alarm  =    {{{"in4_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 12};
#line 826 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in5_alarm  =    {{{"in5_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 13};
#line 827 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in6_alarm  =    {{{"in6_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 14};
#line 828 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_in7_alarm  =    {{{"in7_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 15};
#line 829 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan1_alarm  =    {{{"fan1_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 0};
#line 830 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan2_alarm  =    {{{"fan2_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 1};
#line 831 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan3_alarm  =    {{{"fan3_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 2};
#line 832 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan4_alarm  =    {{{"fan4_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 3};
#line 833 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_fan5_alarm  =    {{{"fan5_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 6};
#line 834 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp1_alarm  =    {{{"temp1_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 16};
#line 835 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp2_alarm  =    {{{"temp2_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 17};
#line 836 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct sensor_device_attribute sensor_dev_attr_temp3_alarm  =    {{{"temp3_alarm", 0, (256 | 32) | 4}, & show_alarm, (void *)0}, 18};
#line 838 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_vrm_reg(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct it87_data *data ;
  void *tmp ;
  int tmp___0 ;

  {
#line 841
  tmp = dev_get_drvdata(dev);
#line 841
  data = tmp;
#line 842
  tmp___0 = sprintf(buf, "%u\n", data->vrm);
#line 842
  return (tmp___0);
}
}
#line 844 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t store_vrm_reg(struct device *dev , struct device_attribute *attr ,
                             char const   *buf , size_t count ) 
{ 
  struct it87_data *data ;
  void *tmp ;
  u32 val ;
  unsigned long tmp___0 ;

  {
#line 847
  tmp = dev_get_drvdata(dev);
#line 847
  data = tmp;
#line 850
  tmp___0 = simple_strtoul(buf, (void *)0, 10);
#line 850
  val = tmp___0;
#line 851
  data->vrm = val;
#line 853
  return (count);
}
}
#line 855 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct device_attribute dev_attr_vrm  =    {{"vrm", 0, ((256 | 32) | 4) | 128}, & show_vrm_reg, & store_vrm_reg};
#line 857 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_vid_reg(struct device *dev , struct device_attribute *attr , char *buf ) 
{ 
  struct it87_data *data ;
  struct it87_data *tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 860
  tmp = it87_update_device(dev);
#line 860
  data = tmp;
#line 861
  tmp___0 = vid_from_reg(data->vid, data->vrm);
#line 861
  tmp___1 = sprintf(buf, "%ld\n", (long )tmp___0);
#line 861
  return (tmp___1);
}
}
#line 863 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct device_attribute dev_attr_cpu0_vid  =    {{"cpu0_vid", 0, (256 | 32) | 4}, & show_vid_reg, (void *)0};
#line 865 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static ssize_t show_name(struct device *dev , struct device_attribute *devattr , char *buf ) 
{ 
  struct it87_data *data ;
  void *tmp ;
  int tmp___0 ;

  {
#line 868
  tmp = dev_get_drvdata(dev);
#line 868
  data = tmp;
#line 869
  tmp___0 = sprintf(buf, "%s\n", data->name);
#line 869
  return (tmp___0);
}
}
#line 871 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct device_attribute dev_attr_name  =    {{"name", 0, (256 | 32) | 4}, & show_name, (void *)0};
#line 873 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct attribute *it87_attributes[51]  = 
#line 873
  {      & sensor_dev_attr_in0_input.dev_attr.attr,      & sensor_dev_attr_in1_input.dev_attr.attr,      & sensor_dev_attr_in2_input.dev_attr.attr,      & sensor_dev_attr_in3_input.dev_attr.attr, 
        & sensor_dev_attr_in4_input.dev_attr.attr,      & sensor_dev_attr_in5_input.dev_attr.attr,      & sensor_dev_attr_in6_input.dev_attr.attr,      & sensor_dev_attr_in7_input.dev_attr.attr, 
        & sensor_dev_attr_in8_input.dev_attr.attr,      & sensor_dev_attr_in0_min.dev_attr.attr,      & sensor_dev_attr_in1_min.dev_attr.attr,      & sensor_dev_attr_in2_min.dev_attr.attr, 
        & sensor_dev_attr_in3_min.dev_attr.attr,      & sensor_dev_attr_in4_min.dev_attr.attr,      & sensor_dev_attr_in5_min.dev_attr.attr,      & sensor_dev_attr_in6_min.dev_attr.attr, 
        & sensor_dev_attr_in7_min.dev_attr.attr,      & sensor_dev_attr_in0_max.dev_attr.attr,      & sensor_dev_attr_in1_max.dev_attr.attr,      & sensor_dev_attr_in2_max.dev_attr.attr, 
        & sensor_dev_attr_in3_max.dev_attr.attr,      & sensor_dev_attr_in4_max.dev_attr.attr,      & sensor_dev_attr_in5_max.dev_attr.attr,      & sensor_dev_attr_in6_max.dev_attr.attr, 
        & sensor_dev_attr_in7_max.dev_attr.attr,      & sensor_dev_attr_in0_alarm.dev_attr.attr,      & sensor_dev_attr_in1_alarm.dev_attr.attr,      & sensor_dev_attr_in2_alarm.dev_attr.attr, 
        & sensor_dev_attr_in3_alarm.dev_attr.attr,      & sensor_dev_attr_in4_alarm.dev_attr.attr,      & sensor_dev_attr_in5_alarm.dev_attr.attr,      & sensor_dev_attr_in6_alarm.dev_attr.attr, 
        & sensor_dev_attr_in7_alarm.dev_attr.attr,      & sensor_dev_attr_temp1_input.dev_attr.attr,      & sensor_dev_attr_temp2_input.dev_attr.attr,      & sensor_dev_attr_temp3_input.dev_attr.attr, 
        & sensor_dev_attr_temp1_max.dev_attr.attr,      & sensor_dev_attr_temp2_max.dev_attr.attr,      & sensor_dev_attr_temp3_max.dev_attr.attr,      & sensor_dev_attr_temp1_min.dev_attr.attr, 
        & sensor_dev_attr_temp2_min.dev_attr.attr,      & sensor_dev_attr_temp3_min.dev_attr.attr,      & sensor_dev_attr_temp1_type.dev_attr.attr,      & sensor_dev_attr_temp2_type.dev_attr.attr, 
        & sensor_dev_attr_temp3_type.dev_attr.attr,      & sensor_dev_attr_temp1_alarm.dev_attr.attr,      & sensor_dev_attr_temp2_alarm.dev_attr.attr,      & sensor_dev_attr_temp3_alarm.dev_attr.attr, 
        & dev_attr_alarms.attr,      & dev_attr_name.attr,      (void *)0};
#line 929 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct attribute_group  const  it87_group  =    {0, 0, it87_attributes};
#line 933 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct attribute *it87_attributes_opt[36]  = 
#line 933
  {      & sensor_dev_attr_fan1_input16.dev_attr.attr,      & sensor_dev_attr_fan1_min16.dev_attr.attr,      & sensor_dev_attr_fan2_input16.dev_attr.attr,      & sensor_dev_attr_fan2_min16.dev_attr.attr, 
        & sensor_dev_attr_fan3_input16.dev_attr.attr,      & sensor_dev_attr_fan3_min16.dev_attr.attr,      & sensor_dev_attr_fan4_input16.dev_attr.attr,      & sensor_dev_attr_fan4_min16.dev_attr.attr, 
        & sensor_dev_attr_fan5_input16.dev_attr.attr,      & sensor_dev_attr_fan5_min16.dev_attr.attr,      & sensor_dev_attr_fan1_input.dev_attr.attr,      & sensor_dev_attr_fan1_min.dev_attr.attr, 
        & sensor_dev_attr_fan1_div.dev_attr.attr,      & sensor_dev_attr_fan2_input.dev_attr.attr,      & sensor_dev_attr_fan2_min.dev_attr.attr,      & sensor_dev_attr_fan2_div.dev_attr.attr, 
        & sensor_dev_attr_fan3_input.dev_attr.attr,      & sensor_dev_attr_fan3_min.dev_attr.attr,      & sensor_dev_attr_fan3_div.dev_attr.attr,      & sensor_dev_attr_fan1_alarm.dev_attr.attr, 
        & sensor_dev_attr_fan2_alarm.dev_attr.attr,      & sensor_dev_attr_fan3_alarm.dev_attr.attr,      & sensor_dev_attr_fan4_alarm.dev_attr.attr,      & sensor_dev_attr_fan5_alarm.dev_attr.attr, 
        & sensor_dev_attr_pwm1_enable.dev_attr.attr,      & sensor_dev_attr_pwm2_enable.dev_attr.attr,      & sensor_dev_attr_pwm3_enable.dev_attr.attr,      & sensor_dev_attr_pwm1.dev_attr.attr, 
        & sensor_dev_attr_pwm2.dev_attr.attr,      & sensor_dev_attr_pwm3.dev_attr.attr,      & dev_attr_pwm1_freq.attr,      & dev_attr_pwm2_freq.attr, 
        & dev_attr_pwm3_freq.attr,      & dev_attr_vrm.attr,      & dev_attr_cpu0_vid.attr,      (void *)0};
#line 976 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct attribute_group  const  it87_group_opt  =    {0, 0, it87_attributes_opt};
#line 981
static int it87_find(unsigned short *address , struct it87_sio_data *sio_data )  __attribute__((__section__(".init.text"),
__no_instrument_function__)) ;
#line 981 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int it87_find(unsigned short *address , struct it87_sio_data *sio_data ) 
{ 
  int err ;
  u16 chip_type ;
  char const   *board_vendor ;
  char const   *board_name ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int reg ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;

  {
#line 984
  err = -19;
#line 988
  superio_enter();
#line 989
  if (force_id) {
#line 989
    chip_type = force_id;
  } else {
#line 989
    tmp = superio_inw(32);
#line 989
    chip_type = tmp;
  }
#line 991
  switch ((int )chip_type) {
  case 34565: 
#line 993
  sio_data->type = it87;
#line 994
  break;
  case 34578: 
#line 996
  sio_data->type = it8712;
#line 997
  break;
  case 34598: 
  case 34582: 
#line 1000
  sio_data->type = it8716;
#line 1001
  break;
  case 34584: 
#line 1003
  sio_data->type = it8718;
#line 1004
  break;
  case 34592: 
#line 1006
  sio_data->type = it8720;
#line 1007
  break;
  case 65535: 
#line 1009
  goto exit;
  default: 
#line 1011
  printk("<7>it87: Unsupported chip (DEVID=0x%x)\n", chip_type);
#line 1013
  goto exit;
  }
#line 1016
  superio_select(4);
#line 1017
  tmp___0 = superio_inb(48);
#line 1017
  if (tmp___0 & 1) {

  } else {
#line 1018
    printk("<6>it87: Device not activated, skipping\n");
#line 1019
    goto exit;
  }
#line 1022
  tmp___1 = superio_inw(96);
#line 1022
  *address = tmp___1 & ~ (8 - 1);
#line 1023
  if ((int )*address == 0) {
#line 1024
    printk("<6>it87: Base address not set, skipping\n");
#line 1025
    goto exit;
  } else {

  }
#line 1028
  err = 0;
#line 1029
  tmp___2 = superio_inb(34);
#line 1029
  sio_data->revision = tmp___2 & 15;
#line 1030
  printk("<6>it87: Found IT%04xF chip at 0x%x, revision %d\n", chip_type, *address,
         sio_data->revision);
#line 1034
  if ((unsigned int )sio_data->type == (unsigned int )it87) {
#line 1036
    sio_data->skip_vid = 1;
  } else {
#line 1040
    superio_select(7);
#line 1042
    reg = superio_inb(39);
#line 1043
    if (reg & 15) {
#line 1044
      printk("<6>it87: VID is disabled (pins used for GPIO)\n");
#line 1045
      sio_data->skip_vid = 1;
    } else {

    }
#line 1048
    if (((unsigned int )sio_data->type == (unsigned int )it8718 || (unsigned int )sio_data->type == (unsigned int )it8720) && ! sio_data->skip_vid) {
#line 1050
      tmp___3 = superio_inb(252);
#line 1050
      sio_data->vid_value = tmp___3;
    } else {

    }
#line 1052
    reg = superio_inb(44);
#line 1053
    if (reg & (1 << 0)) {
#line 1054
      printk("<6>it87: in3 is VCC (+5V)\n");
    } else {

    }
#line 1055
    if (reg & (1 << 1)) {
#line 1056
      printk("<6>it87: in7 is VCCH (+5V Stand-By)\n");
    } else {

    }
  }
#line 1060
  board_vendor = dmi_get_system_info(DMI_BOARD_VENDOR);
#line 1061
  board_name = dmi_get_system_info(DMI_BOARD_NAME);
#line 1062
  if (board_vendor && board_name) {
#line 1063
    tmp___4 = strcmp(board_vendor, "nVIDIA");
#line 1063
    if (tmp___4 == 0) {
#line 1063
      tmp___5 = strcmp(board_name, "FN68PT");
#line 1063
      if (tmp___5 == 0) {
#line 1071
        printk("<6>it87: Disabling pwm2 due to hardware constraints\n");
#line 1073
        sio_data->skip_pwm = 1 << 1;
      } else {

      }
    } else {

    }
  } else {

  }
  exit: 
#line 1078
  superio_exit();
#line 1079
  return (err);
}
}
#line 1090 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   *names[5]  = {      "it87",      "it8712",      "it8716",      "it8718", 
        "it8720"};
#line 1126 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct lock_class_key __key___4  ;
#line 1082
static int it87_probe(struct platform_device *pdev___0 )  __attribute__((__section__(".devinit.text"))) ;
#line 1082 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int it87_probe(struct platform_device *pdev___0 ) 
{ 
  struct it87_data *data ;
  struct resource *res ;
  struct device *dev ;
  struct it87_sio_data *sio_data ;
  int err ;
  int enable_pwm_interface ;
  char const   *tmp ;
  char const   *tmp___0 ;
  struct resource *tmp___1 ;
  void *tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  long tmp___6 ;
  long tmp___7 ;

  {
#line 1086
  dev = & pdev___0->dev;
#line 1087
  sio_data = dev->platform_data;
#line 1088
  err = 0;
#line 1098
  res = platform_get_resource(pdev___0, 256, 0);
#line 1099
  tmp___1 = __request_region(& ioport_resource, res->start, 2, "it87", 0);
#line 1099
  if (tmp___1) {

  } else {
#line 1100
    tmp = dev_name(dev);
#line 1100
    tmp___0 = dev_driver_string(dev);
#line 1100
    printk("<3>%s %s: Failed to request region 0x%lx-0x%lx\n", tmp___0, tmp, (unsigned long )res->start,
           (unsigned long )((res->start + (resource_size_t )2) - (resource_size_t )1));
#line 1103
    err = -16;
#line 1104
    goto ERROR0;
  }
#line 1107
  tmp___2 = kzalloc(sizeof(struct it87_data ), (16U | 64U) | 128U);
#line 1107
  data = tmp___2;
#line 1107
  if (data) {

  } else {
#line 1108
    err = -12;
#line 1109
    goto ERROR1;
  }
#line 1112
  data->addr = res->start;
#line 1113
  data->type = sio_data->type;
#line 1114
  data->revision = sio_data->revision;
#line 1115
  data->name = names[sio_data->type];
#line 1118
  tmp___3 = it87_read_value(data, 0);
#line 1118
  if (tmp___3 & 128) {
#line 1120
    err = -19;
#line 1121
    goto ERROR2;
  } else {
#line 1118
    tmp___4 = it87_read_value(data, 88);
#line 1118
    if (tmp___4 != 144) {
#line 1120
      err = -19;
#line 1121
      goto ERROR2;
    } else {

    }
  }
#line 1124
  dev_set_drvdata(& pdev___0->dev, data);
#line 1126
  while (1) {
#line 1126
    __mutex_init(& data->update_lock, "&data->update_lock", & __key___4);
#line 1126
    break;
  }
#line 1129
  enable_pwm_interface = it87_check_pwm(dev);
#line 1132
  it87_init_device(pdev___0);
#line 1135
  err = sysfs_create_group(& dev->kobj, & it87_group);
#line 1135
  if (err) {
#line 1136
    goto ERROR2;
  } else {

  }
#line 1139
  tmp___5 = has_16bit_fans(data);
#line 1139
  if (tmp___5) {
#line 1141
    if ((int )data->has_fan & (1 << 0)) {
#line 1142
      err = device_create_file(dev, & sensor_dev_attr_fan1_input16.dev_attr);
#line 1142
      if (err) {
#line 1148
        goto ERROR4;
      } else {
#line 1142
        err = device_create_file(dev, & sensor_dev_attr_fan1_min16.dev_attr);
#line 1142
        if (err) {
#line 1148
          goto ERROR4;
        } else {
#line 1142
          err = device_create_file(dev, & sensor_dev_attr_fan1_alarm.dev_attr);
#line 1142
          if (err) {
#line 1148
            goto ERROR4;
          } else {

          }
        }
      }
    } else {

    }
#line 1150
    if ((int )data->has_fan & (1 << 1)) {
#line 1151
      err = device_create_file(dev, & sensor_dev_attr_fan2_input16.dev_attr);
#line 1151
      if (err) {
#line 1157
        goto ERROR4;
      } else {
#line 1151
        err = device_create_file(dev, & sensor_dev_attr_fan2_min16.dev_attr);
#line 1151
        if (err) {
#line 1157
          goto ERROR4;
        } else {
#line 1151
          err = device_create_file(dev, & sensor_dev_attr_fan2_alarm.dev_attr);
#line 1151
          if (err) {
#line 1157
            goto ERROR4;
          } else {

          }
        }
      }
    } else {

    }
#line 1159
    if ((int )data->has_fan & (1 << 2)) {
#line 1160
      err = device_create_file(dev, & sensor_dev_attr_fan3_input16.dev_attr);
#line 1160
      if (err) {
#line 1166
        goto ERROR4;
      } else {
#line 1160
        err = device_create_file(dev, & sensor_dev_attr_fan3_min16.dev_attr);
#line 1160
        if (err) {
#line 1166
          goto ERROR4;
        } else {
#line 1160
          err = device_create_file(dev, & sensor_dev_attr_fan3_alarm.dev_attr);
#line 1160
          if (err) {
#line 1166
            goto ERROR4;
          } else {

          }
        }
      }
    } else {

    }
#line 1168
    if ((int )data->has_fan & (1 << 3)) {
#line 1169
      err = device_create_file(dev, & sensor_dev_attr_fan4_input16.dev_attr);
#line 1169
      if (err) {
#line 1175
        goto ERROR4;
      } else {
#line 1169
        err = device_create_file(dev, & sensor_dev_attr_fan4_min16.dev_attr);
#line 1169
        if (err) {
#line 1175
          goto ERROR4;
        } else {
#line 1169
          err = device_create_file(dev, & sensor_dev_attr_fan4_alarm.dev_attr);
#line 1169
          if (err) {
#line 1175
            goto ERROR4;
          } else {

          }
        }
      }
    } else {

    }
#line 1177
    if ((int )data->has_fan & (1 << 4)) {
#line 1178
      err = device_create_file(dev, & sensor_dev_attr_fan5_input16.dev_attr);
#line 1178
      if (err) {
#line 1184
        goto ERROR4;
      } else {
#line 1178
        err = device_create_file(dev, & sensor_dev_attr_fan5_min16.dev_attr);
#line 1178
        if (err) {
#line 1184
          goto ERROR4;
        } else {
#line 1178
          err = device_create_file(dev, & sensor_dev_attr_fan5_alarm.dev_attr);
#line 1178
          if (err) {
#line 1184
            goto ERROR4;
          } else {

          }
        }
      }
    } else {

    }
  } else {
#line 1188
    if ((int )data->has_fan & (1 << 0)) {
#line 1189
      err = device_create_file(dev, & sensor_dev_attr_fan1_input.dev_attr);
#line 1189
      if (err) {
#line 1197
        goto ERROR4;
      } else {
#line 1189
        err = device_create_file(dev, & sensor_dev_attr_fan1_min.dev_attr);
#line 1189
        if (err) {
#line 1197
          goto ERROR4;
        } else {
#line 1189
          err = device_create_file(dev, & sensor_dev_attr_fan1_div.dev_attr);
#line 1189
          if (err) {
#line 1197
            goto ERROR4;
          } else {
#line 1189
            err = device_create_file(dev, & sensor_dev_attr_fan1_alarm.dev_attr);
#line 1189
            if (err) {
#line 1197
              goto ERROR4;
            } else {

            }
          }
        }
      }
    } else {

    }
#line 1199
    if ((int )data->has_fan & (1 << 1)) {
#line 1200
      err = device_create_file(dev, & sensor_dev_attr_fan2_input.dev_attr);
#line 1200
      if (err) {
#line 1208
        goto ERROR4;
      } else {
#line 1200
        err = device_create_file(dev, & sensor_dev_attr_fan2_min.dev_attr);
#line 1200
        if (err) {
#line 1208
          goto ERROR4;
        } else {
#line 1200
          err = device_create_file(dev, & sensor_dev_attr_fan2_div.dev_attr);
#line 1200
          if (err) {
#line 1208
            goto ERROR4;
          } else {
#line 1200
            err = device_create_file(dev, & sensor_dev_attr_fan2_alarm.dev_attr);
#line 1200
            if (err) {
#line 1208
              goto ERROR4;
            } else {

            }
          }
        }
      }
    } else {

    }
#line 1210
    if ((int )data->has_fan & (1 << 2)) {
#line 1211
      err = device_create_file(dev, & sensor_dev_attr_fan3_input.dev_attr);
#line 1211
      if (err) {
#line 1219
        goto ERROR4;
      } else {
#line 1211
        err = device_create_file(dev, & sensor_dev_attr_fan3_min.dev_attr);
#line 1211
        if (err) {
#line 1219
          goto ERROR4;
        } else {
#line 1211
          err = device_create_file(dev, & sensor_dev_attr_fan3_div.dev_attr);
#line 1211
          if (err) {
#line 1219
            goto ERROR4;
          } else {
#line 1211
            err = device_create_file(dev, & sensor_dev_attr_fan3_alarm.dev_attr);
#line 1211
            if (err) {
#line 1219
              goto ERROR4;
            } else {

            }
          }
        }
      }
    } else {

    }
  }
#line 1223
  if (enable_pwm_interface) {
#line 1224
    if (! ((int )sio_data->skip_pwm & (1 << 0))) {
#line 1225
      err = device_create_file(dev, & sensor_dev_attr_pwm1_enable.dev_attr);
#line 1225
      if (err) {
#line 1231
        goto ERROR4;
      } else {
#line 1225
        err = device_create_file(dev, & sensor_dev_attr_pwm1.dev_attr);
#line 1225
        if (err) {
#line 1231
          goto ERROR4;
        } else {
#line 1225
          err = device_create_file(dev, & dev_attr_pwm1_freq);
#line 1225
          if (err) {
#line 1231
            goto ERROR4;
          } else {

          }
        }
      }
    } else {

    }
#line 1233
    if (! ((int )sio_data->skip_pwm & (1 << 1))) {
#line 1234
      err = device_create_file(dev, & sensor_dev_attr_pwm2_enable.dev_attr);
#line 1234
      if (err) {
#line 1240
        goto ERROR4;
      } else {
#line 1234
        err = device_create_file(dev, & sensor_dev_attr_pwm2.dev_attr);
#line 1234
        if (err) {
#line 1240
          goto ERROR4;
        } else {
#line 1234
          err = device_create_file(dev, & dev_attr_pwm2_freq);
#line 1234
          if (err) {
#line 1240
            goto ERROR4;
          } else {

          }
        }
      }
    } else {

    }
#line 1242
    if (! ((int )sio_data->skip_pwm & (1 << 2))) {
#line 1243
      err = device_create_file(dev, & sensor_dev_attr_pwm3_enable.dev_attr);
#line 1243
      if (err) {
#line 1249
        goto ERROR4;
      } else {
#line 1243
        err = device_create_file(dev, & sensor_dev_attr_pwm3.dev_attr);
#line 1243
        if (err) {
#line 1249
          goto ERROR4;
        } else {
#line 1243
          err = device_create_file(dev, & dev_attr_pwm3_freq);
#line 1243
          if (err) {
#line 1249
            goto ERROR4;
          } else {

          }
        }
      }
    } else {

    }
  } else {

  }
#line 1253
  if (! sio_data->skip_vid) {
#line 1254
    data->vrm = vid_which_vrm();
#line 1256
    data->vid = sio_data->vid_value;
#line 1257
    err = device_create_file(dev, & dev_attr_vrm);
#line 1257
    if (err) {
#line 1261
      goto ERROR4;
    } else {
#line 1257
      err = device_create_file(dev, & dev_attr_cpu0_vid);
#line 1257
      if (err) {
#line 1261
        goto ERROR4;
      } else {

      }
    }
  } else {

  }
#line 1264
  data->hwmon_dev = hwmon_device_register(dev);
#line 1265
  tmp___7 = IS_ERR(data->hwmon_dev);
#line 1265
  if (tmp___7) {
#line 1266
    tmp___6 = PTR_ERR(data->hwmon_dev);
#line 1266
    err = tmp___6;
#line 1267
    goto ERROR4;
  } else {

  }
#line 1270
  return (0);
  ERROR4: 
#line 1273
  sysfs_remove_group(& dev->kobj, & it87_group);
#line 1274
  sysfs_remove_group(& dev->kobj, & it87_group_opt);
  ERROR2: 
#line 1276
  dev_set_drvdata(& pdev___0->dev, (void *)0);
#line 1277
  kfree(data);
  ERROR1: 
#line 1279
  __release_region(& ioport_resource, res->start, 2);
  ERROR0: 
#line 1281
  return (err);
}
}
#line 1284
static int it87_remove(struct platform_device *pdev___0 )  __attribute__((__section__(".devexit.text"))) ;
#line 1284 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int it87_remove(struct platform_device *pdev___0 ) 
{ 
  struct it87_data *data ;
  void *tmp ;

  {
#line 1286
  tmp = dev_get_drvdata(& pdev___0->dev);
#line 1286
  data = tmp;
#line 1288
  hwmon_device_unregister(data->hwmon_dev);
#line 1289
  sysfs_remove_group(& pdev___0->dev.kobj, & it87_group);
#line 1290
  sysfs_remove_group(& pdev___0->dev.kobj, & it87_group_opt);
#line 1292
  __release_region(& ioport_resource, data->addr, 2);
#line 1293
  dev_set_drvdata(& pdev___0->dev, (void *)0);
#line 1294
  kfree(data);
#line 1296
  return (0);
}
}
#line 1302 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int it87_read_value(struct it87_data *data , u8 reg ) 
{ 
  unsigned char tmp ;

  {
#line 1304
  outb_p(reg, (int )data->addr + 0);
#line 1305
  tmp = inb_p((int )data->addr + 1);
#line 1305
  return (tmp);
}
}
#line 1311 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static void it87_write_value(struct it87_data *data , u8 reg , u8 value ) 
{ 


  {
#line 1313
  outb_p(reg, (int )data->addr + 0);
#line 1314
  outb_p(value, (int )data->addr + 1);
#line 1315
  return;
}
}
#line 1318
static int it87_check_pwm(struct device *dev )  __attribute__((__section__(".devinit.text"))) ;
#line 1318 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int it87_check_pwm(struct device *dev ) 
{ 
  struct it87_data *data ;
  void *tmp ;
  int tmp___0 ;
  int tmp___1 ;
  int i ;
  u8 pwm[3] ;
  int tmp___2 ;
  char const   *tmp___3 ;
  char const   *tmp___4 ;
  char const   *tmp___5 ;
  char const   *tmp___6 ;
  char const   *tmp___7 ;
  char const   *tmp___8 ;
  char const   *tmp___9 ;
  char const   *tmp___10 ;

  {
#line 1320
  tmp = dev_get_drvdata(dev);
#line 1320
  data = tmp;
#line 1324
  tmp___1 = it87_read_value(data, 20);
#line 1324
  tmp___0 = tmp___1;
#line 1325
  if ((tmp___0 & 135) == 0) {
#line 1326
    if (fix_pwm_polarity) {
#line 1333
      i = 0;
#line 1333
      while (1) {
#line 1333
        if (i < 3) {

        } else {
#line 1333
          break;
        }
#line 1334
        tmp___2 = it87_read_value(data, 21 + i);
#line 1334
        pwm[i] = tmp___2;
#line 1333
        i = i + 1;
      }
#line 1341
      if (! ((((int )pwm[0] | (int )pwm[1]) | (int )pwm[2]) & 128)) {
#line 1342
        tmp___3 = dev_name(dev);
#line 1342
        tmp___4 = dev_driver_string(dev);
#line 1342
        printk("<6>%s %s: Reconfiguring PWM to active high polarity\n", tmp___4, tmp___3);
#line 1344
        it87_write_value(data, 20, tmp___0 | 135);
#line 1346
        i = 0;
#line 1346
        while (1) {
#line 1346
          if (i < 3) {

          } else {
#line 1346
            break;
          }
#line 1347
          it87_write_value(data, 21 + i, 127 & ~ ((int )pwm[i]));
#line 1346
          i = i + 1;
        }
#line 1350
        return (1);
      } else {

      }
#line 1353
      tmp___5 = dev_name(dev);
#line 1353
      tmp___6 = dev_driver_string(dev);
#line 1353
      printk("<6>%s %s: PWM configuration is too broken to be fixed\n", tmp___6, tmp___5);
    } else {

    }
#line 1357
    tmp___7 = dev_name(dev);
#line 1357
    tmp___8 = dev_driver_string(dev);
#line 1357
    printk("<6>%s %s: Detected broken BIOS defaults, disabling PWM interface\n", tmp___8,
           tmp___7);
#line 1359
    return (0);
  } else
#line 1360
  if (fix_pwm_polarity) {
#line 1361
    tmp___9 = dev_name(dev);
#line 1361
    tmp___10 = dev_driver_string(dev);
#line 1361
    printk("<6>%s %s: PWM configuration looks sane, won\'t touch\n", tmp___10, tmp___9);
  } else {

  }
#line 1365
  return (1);
}
}
#line 1369
static void it87_init_device(struct platform_device *pdev___0 )  __attribute__((__section__(".devinit.text"))) ;
#line 1369 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static void it87_init_device(struct platform_device *pdev___0 ) 
{ 
  struct it87_data *data ;
  void *tmp ;
  int tmp___0 ;
  int i ;
  int tmp___1 ;
  char const   *tmp___2 ;
  char const   *tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;

  {
#line 1371
  tmp = dev_get_drvdata(& pdev___0->dev);
#line 1371
  data = tmp;
#line 1381
  i = 0;
#line 1381
  while (1) {
#line 1381
    if (i < 3) {

    } else {
#line 1381
      break;
    }
#line 1382
    data->manual_pwm_ctl[i] = 255;
#line 1381
    i = i + 1;
  }
#line 1390
  i = 0;
#line 1390
  while (1) {
#line 1390
    if (i < 8) {

    } else {
#line 1390
      break;
    }
#line 1391
    tmp___0 = it87_read_value(data, 49 + i * 2);
#line 1392
    if (tmp___0 == 255) {
#line 1393
      it87_write_value(data, 49 + i * 2, 0);
    } else {

    }
#line 1390
    i = i + 1;
  }
#line 1395
  i = 0;
#line 1395
  while (1) {
#line 1395
    if (i < 3) {

    } else {
#line 1395
      break;
    }
#line 1396
    tmp___0 = it87_read_value(data, 64 + i * 2);
#line 1397
    if (tmp___0 == 255) {
#line 1398
      it87_write_value(data, 64 + i * 2, 127);
    } else {

    }
#line 1395
    i = i + 1;
  }
#line 1402
  tmp___0 = it87_read_value(data, 81);
#line 1403
  if ((tmp___0 & 63) == 0) {
#line 1405
    tmp___0 = (tmp___0 & 192) | 42;
#line 1406
    it87_write_value(data, 81, tmp___0);
  } else {

  }
#line 1408
  data->sensor = tmp___0;
#line 1411
  tmp___0 = it87_read_value(data, 80);
#line 1412
  if ((tmp___0 & 255) == 0) {
#line 1414
    it87_write_value(data, 80, 255);
  } else {

  }
#line 1418
  tmp___1 = it87_read_value(data, 19);
#line 1418
  data->fan_main_ctrl = tmp___1;
#line 1419
  if (((int )data->fan_main_ctrl & 112) == 0) {
#line 1421
    data->fan_main_ctrl = (int )data->fan_main_ctrl | 112;
#line 1422
    it87_write_value(data, 19, data->fan_main_ctrl);
  } else {

  }
#line 1424
  data->has_fan = ((int )data->fan_main_ctrl >> 4) & 7;
#line 1427
  tmp___4 = has_16bit_fans(data);
#line 1427
  if (tmp___4) {
#line 1428
    tmp___0 = it87_read_value(data, 12);
#line 1429
    if ((~ tmp___0 & 7) & (int )data->has_fan) {
#line 1430
      tmp___2 = dev_name(& pdev___0->dev);
#line 1430
      tmp___3 = dev_driver_string(& pdev___0->dev);
#line 1430
      printk("<7>%s %s: Setting fan1-3 to 16-bit mode\n", tmp___3, tmp___2);
#line 1432
      it87_write_value(data, 12, tmp___0 | 7);
    } else {

    }
#line 1436
    if ((unsigned int )data->type != (unsigned int )it87) {
#line 1437
      if (tmp___0 & (1 << 4)) {
#line 1438
        data->has_fan = (int )data->has_fan | (1 << 3);
      } else {

      }
#line 1439
      if (tmp___0 & (1 << 5)) {
#line 1440
        data->has_fan = (int )data->has_fan | (1 << 4);
      } else {

      }
    } else {

    }
  } else {

  }
#line 1446
  i = 0;
#line 1446
  while (1) {
#line 1446
    if (i < 3) {

    } else {
#line 1446
      break;
    }
#line 1447
    if ((int )data->fan_main_ctrl & (1 << i)) {
#line 1449
      tmp___0 = it87_read_value(data, 21 + i);
#line 1450
      if (tmp___0 & 128) {

      } else {
#line 1457
        data->manual_pwm_ctl[i] = (tmp___0 & 127) << 1;
      }
    } else {

    }
#line 1446
    i = i + 1;
  }
#line 1463
  tmp___5 = it87_read_value(data, 0);
#line 1463
  it87_write_value(data, 0, (tmp___5 & 54) | (update_vbat ? 65 : 1));
#line 1466
  return;
}
}
#line 1468 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct it87_data *it87_update_device(struct device *dev ) 
{ 
  struct it87_data *data ;
  void *tmp ;
  int i ;
  int tmp___0 ;
  int tmp___1 ;
  int tmp___2 ;
  int tmp___3 ;
  int tmp___4 ;
  int tmp___5 ;
  int tmp___6 ;
  int tmp___7 ;
  int tmp___8 ;
  int tmp___9 ;
  int tmp___10 ;
  int tmp___11 ;
  int tmp___12 ;
  int tmp___13 ;
  int tmp___14 ;
  int tmp___15 ;
  int tmp___16 ;
  int tmp___17 ;
  int tmp___18 ;
  int tmp___19 ;
  int tmp___20 ;

  {
#line 1470
  tmp = dev_get_drvdata(dev);
#line 1470
  data = tmp;
#line 1473
  mutex_lock(& data->update_lock);
#line 1475
  if ((long )((data->last_updated + 250UL) + (unsigned long )(250 / 2)) - (long )jiffies < 0L || ! data->valid) {
#line 1478
    if (update_vbat) {
#line 1481
      tmp___0 = it87_read_value(data, 0);
#line 1481
      it87_write_value(data, 0, tmp___0 | 64);
    } else {

    }
#line 1484
    i = 0;
#line 1484
    while (1) {
#line 1484
      if (i <= 7) {

      } else {
#line 1484
        break;
      }
#line 1485
      tmp___1 = it87_read_value(data, 32 + i);
#line 1485
      data->in[i] = tmp___1;
#line 1487
      tmp___2 = it87_read_value(data, 49 + i * 2);
#line 1487
      data->in_min[i] = tmp___2;
#line 1489
      tmp___3 = it87_read_value(data, 48 + i * 2);
#line 1489
      data->in_max[i] = tmp___3;
#line 1484
      i = i + 1;
    }
#line 1493
    tmp___4 = it87_read_value(data, 32 + 8);
#line 1493
    data->in[8] = tmp___4;
#line 1496
    i = 0;
#line 1496
    while (1) {
#line 1496
      if (i < 5) {

      } else {
#line 1496
        break;
      }
#line 1498
      if (! ((int )data->has_fan & (1 << i))) {
#line 1499
        goto __Cont;
      } else {

      }
#line 1501
      tmp___5 = it87_read_value(data, IT87_REG_FAN_MIN[i]);
#line 1501
      data->fan_min[i] = tmp___5;
#line 1503
      tmp___6 = it87_read_value(data, IT87_REG_FAN[i]);
#line 1503
      data->fan[i] = tmp___6;
#line 1506
      tmp___9 = has_16bit_fans(data);
#line 1506
      if (tmp___9) {
#line 1507
        tmp___7 = it87_read_value(data, IT87_REG_FANX[i]);
#line 1507
        data->fan[i] = (int )data->fan[i] | (tmp___7 << 8);
#line 1509
        tmp___8 = it87_read_value(data, IT87_REG_FANX_MIN[i]);
#line 1509
        data->fan_min[i] = (int )data->fan_min[i] | (tmp___8 << 8);
      } else {

      }
      __Cont: /* CIL Label */ 
#line 1496
      i = i + 1;
    }
#line 1513
    i = 0;
#line 1513
    while (1) {
#line 1513
      if (i < 3) {

      } else {
#line 1513
        break;
      }
#line 1514
      tmp___10 = it87_read_value(data, 41 + i);
#line 1514
      data->temp[i] = tmp___10;
#line 1516
      tmp___11 = it87_read_value(data, 64 + i * 2);
#line 1516
      data->temp_high[i] = tmp___11;
#line 1518
      tmp___12 = it87_read_value(data, 65 + i * 2);
#line 1518
      data->temp_low[i] = tmp___12;
#line 1513
      i = i + 1;
    }
#line 1523
    if ((int )data->has_fan & 7) {
#line 1523
      tmp___13 = has_16bit_fans(data);
#line 1523
      if (tmp___13) {

      } else {
#line 1524
        i = it87_read_value(data, 11);
#line 1525
        data->fan_div[0] = i & 7;
#line 1526
        data->fan_div[1] = (i >> 3) & 7;
#line 1527
        data->fan_div[2] = i & 64 ? 3 : 1;
      }
    } else {

    }
#line 1530
    tmp___14 = it87_read_value(data, 1);
#line 1530
    tmp___15 = it87_read_value(data, 2);
#line 1530
    tmp___16 = it87_read_value(data, 3);
#line 1530
    data->alarms = (tmp___14 | (tmp___15 << 8)) | (tmp___16 << 16);
#line 1534
    tmp___17 = it87_read_value(data, 19);
#line 1534
    data->fan_main_ctrl = tmp___17;
#line 1536
    tmp___18 = it87_read_value(data, 20);
#line 1536
    data->fan_ctl = tmp___18;
#line 1538
    tmp___19 = it87_read_value(data, 81);
#line 1538
    data->sensor = tmp___19;
#line 1542
    if ((unsigned int )data->type == (unsigned int )it8712 || (unsigned int )data->type == (unsigned int )it8716) {
#line 1543
      tmp___20 = it87_read_value(data, 10);
#line 1543
      data->vid = tmp___20;
#line 1546
      data->vid = (int )data->vid & 63;
    } else {

    }
#line 1548
    data->last_updated = jiffies;
#line 1549
    data->valid = 1;
  } else {

  }
#line 1552
  mutex_unlock(& data->update_lock);
#line 1554
  return (data);
}
}
#line 1557
static int it87_device_add(unsigned short address , struct it87_sio_data  const  *sio_data )  __attribute__((__section__(".init.text"),
__no_instrument_function__)) ;
#line 1557 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int it87_device_add(unsigned short address , struct it87_sio_data  const  *sio_data ) 
{ 
  struct resource res ;
  int err ;

  {
#line 1560
  res.start = (int )address + 5;
#line 1560
  res.end = (((int )address + 5) + 2) - 1;
#line 1560
  res.name = "it87";
#line 1560
  res.flags = 256;
#line 1560
  res.parent = 0;
#line 1560
  res.sibling = 0;
#line 1560
  res.child = 0;
#line 1568
  err = acpi_check_resource_conflict(& res);
#line 1569
  if (err) {
#line 1570
    goto exit;
  } else {

  }
#line 1572
  pdev = platform_device_alloc("it87", address);
#line 1573
  if (! pdev) {
#line 1574
    err = -12;
#line 1575
    printk("<3>it87: Device allocation failed\n");
#line 1576
    goto exit;
  } else {

  }
#line 1579
  err = platform_device_add_resources(pdev, & res, 1);
#line 1580
  if (err) {
#line 1581
    printk("<3>it87: Device resource addition failed (%d)\n", err);
#line 1583
    goto exit_device_put;
  } else {

  }
#line 1586
  err = platform_device_add_data(pdev, sio_data, sizeof(struct it87_sio_data ));
#line 1588
  if (err) {
#line 1589
    printk("<3>it87: Platform data allocation failed\n");
#line 1590
    goto exit_device_put;
  } else {

  }
#line 1593
  err = platform_device_add(pdev);
#line 1594
  if (err) {
#line 1595
    printk("<3>it87: Device addition failed (%d)\n", err);
#line 1597
    goto exit_device_put;
  } else {

  }
#line 1600
  return (0);
  exit_device_put: 
#line 1603
  platform_device_put(pdev);
  exit: 
#line 1605
  return (err);
}
}
#line 1608
static int sm_it87_init(void)  __attribute__((__section__(".init.text"), __no_instrument_function__)) ;
#line 1608 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int sm_it87_init(void) 
{ 
  int err ;
  unsigned short isa_address ;
  struct it87_sio_data sio_data ;

  {
#line 1611
  isa_address = 0;
#line 1614
  memset(& sio_data, 0, sizeof(struct it87_sio_data ));
#line 1615
  err = it87_find(& isa_address, & sio_data);
#line 1616
  if (err) {
#line 1617
    return (err);
  } else {

  }
#line 1618
  err = platform_driver_register(& it87_driver);
#line 1619
  if (err) {
#line 1620
    return (err);
  } else {

  }
#line 1622
  err = it87_device_add(isa_address, & sio_data);
#line 1623
  if (err) {
#line 1624
    platform_driver_unregister(& it87_driver);
#line 1625
    return (err);
  } else {

  }
#line 1628
  return (0);
}
}
#line 1631
static void sm_it87_exit(void)  __attribute__((__section__(".exit.text"))) ;
#line 1631 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static void sm_it87_exit(void) 
{ 


  {
#line 1633
  platform_device_unregister(pdev);
#line 1634
  platform_driver_unregister(& it87_driver);
#line 1635
  return;
}
}
#line 1638 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_author1639[57]  __attribute__((__used__, __unused__, __section__(".modinfo")))  = 
#line 1638
  {      'a',      'u',      't',      'h', 
        'o',      'r',      '=',      'C', 
        'h',      'r',      'i',      's', 
        ' ',      'G',      'a',      'u', 
        't',      'h',      'r',      'o', 
        'n',      ',',      ' ',      'J', 
        'e',      'a',      'n',      ' ', 
        'D',      'e',      'l',      'v', 
        'a',      'r',      'e',      ' ', 
        '<',      'k',      'h',      'a', 
        'l',      'i',      '@',      'l', 
        'i',      'n',      'u',      'x', 
        '-',      'f',      'r',      '.', 
        'o',      'r',      'g',      '>', 
        '\000'};
#line 1640 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_description1640[65]  __attribute__((__used__, __unused__,
__section__(".modinfo")))  = 
#line 1640
  {      'd',      'e',      's',      'c', 
        'r',      'i',      'p',      't', 
        'i',      'o',      'n',      '=', 
        'I',      'T',      '8',      '7', 
        '0',      '5',      'F',      '/', 
        '8',      '7',      '1',      '2', 
        'F',      '/',      '8',      '7', 
        '1',      '6',      'F',      '/', 
        '8',      '7',      '1',      '8', 
        'F',      '/',      '8',      '7', 
        '2',      '0',      'F',      '/', 
        '8',      '7',      '2',      '6', 
        'F',      ',',      ' ',      'S', 
        'i',      'S',      '9',      '5', 
        '0',      ' ',      'd',      'r', 
        'i',      'v',      'e',      'r', 
        '\000'};
#line 1641 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __param_str_update_vbat[12]  = 
#line 1641
  {      'u',      'p',      'd',      'a', 
        't',      'e',      '_',      'v', 
        'b',      'a',      't',      '\000'};
#line 1641 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct kernel_param  const  __param_update_vbat  __attribute__((__used__, __unused__,
__section__("__param"), __aligned__(sizeof(void *))))  =    {__param_str_update_vbat, 0, 0, & param_set_bool, & param_get_bool, {& update_vbat}};
#line 1641 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_update_vbattype1641[26]  __attribute__((__used__, __unused__,
__section__(".modinfo")))  = 
#line 1641
  {      'p',      'a',      'r',      'm', 
        't',      'y',      'p',      'e', 
        '=',      'u',      'p',      'd', 
        'a',      't',      'e',      '_', 
        'v',      'b',      'a',      't', 
        ':',      'b',      'o',      'o', 
        'l',      '\000'};
#line 1642 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_update_vbat1642[62]  __attribute__((__used__, __unused__,
__section__(".modinfo")))  = 
#line 1642
  {      'p',      'a',      'r',      'm', 
        '=',      'u',      'p',      'd', 
        'a',      't',      'e',      '_', 
        'v',      'b',      'a',      't', 
        ':',      'U',      'p',      'd', 
        'a',      't',      'e',      ' ', 
        'v',      'b',      'a',      't', 
        ' ',      'i',      'f',      ' ', 
        's',      'e',      't',      ' ', 
        'e',      'l',      's',      'e', 
        ' ',      'r',      'e',      't', 
        'u',      'r',      'n',      ' ', 
        'p',      'o',      'w',      'e', 
        'r',      'u',      'p',      ' ', 
        'v',      'a',      'l',      'u', 
        'e',      '\000'};
#line 1643 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __param_str_fix_pwm_polarity[17]  = 
#line 1643
  {      'f',      'i',      'x',      '_', 
        'p',      'w',      'm',      '_', 
        'p',      'o',      'l',      'a', 
        'r',      'i',      't',      'y', 
        '\000'};
#line 1643 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static struct kernel_param  const  __param_fix_pwm_polarity  __attribute__((__used__,
__unused__, __section__("__param"), __aligned__(sizeof(void *))))  =    {__param_str_fix_pwm_polarity, 0, 0, & param_set_bool, & param_get_bool, {& fix_pwm_polarity}};
#line 1643 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_fix_pwm_polaritytype1643[31]  __attribute__((__used__, __unused__,
__section__(".modinfo")))  = 
#line 1643
  {      'p',      'a',      'r',      'm', 
        't',      'y',      'p',      'e', 
        '=',      'f',      'i',      'x', 
        '_',      'p',      'w',      'm', 
        '_',      'p',      'o',      'l', 
        'a',      'r',      'i',      't', 
        'y',      ':',      'b',      'o', 
        'o',      'l',      '\000'};
#line 1644 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_fix_pwm_polarity1644[68]  __attribute__((__used__, __unused__,
__section__(".modinfo")))  = 
#line 1644
  {      'p',      'a',      'r',      'm', 
        '=',      'f',      'i',      'x', 
        '_',      'p',      'w',      'm', 
        '_',      'p',      'o',      'l', 
        'a',      'r',      'i',      't', 
        'y',      ':',      'F',      'o', 
        'r',      'c',      'e',      ' ', 
        'P',      'W',      'M',      ' ', 
        'p',      'o',      'l',      'a', 
        'r',      'i',      't',      'y', 
        ' ',      't',      'o',      ' ', 
        'a',      'c',      't',      'i', 
        'v',      'e',      ' ',      'h', 
        'i',      'g',      'h',      ' ', 
        '(',      'D',      'A',      'N', 
        'G',      'E',      'R',      'O', 
        'U',      'S',      ')',      '\000'};
#line 1645 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static char const   __mod_license1645[12]  __attribute__((__used__, __unused__, __section__(".modinfo")))  = 
#line 1645
  {      'l',      'i',      'c',      'e', 
        'n',      's',      'e',      '=', 
        'G',      'P',      'L',      '\000'};
#line 1647 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
int init_module(void) 
{ 
  int tmp ;

  {
#line 1647
  tmp = sm_it87_init();
#line 1647
  return (tmp);
}
}
#line 1648 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
void cleanup_module(void) 
{ 


  {
#line 1648
  sm_it87_exit();
#line 1648
  return;
}
}
#line 1666
void ldv_check_final_state(void) ;
#line 1669
extern void ldv_check_return_value(int res ) ;
#line 1672
extern void ldv_check_return_value_probe(int res ) ;
#line 1675
extern void ldv_initialize(void) ;
#line 1678
extern void ldv_handler_precall(void) ;
#line 1681
extern int nondet_int(void) ;
#line 1684 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
int LDV_IN_INTERRUPT  ;
#line 1793 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
static int res_it87_probe_42  ;
#line 1687 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_1/drivers/hwmon/it87.c"
void main(void) 
{ 
  struct platform_device *var_group1 ;
  int tmp ;
  int ldv_s_it87_driver_platform_driver ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 1897
  LDV_IN_INTERRUPT = 1;
#line 1906
  ldv_initialize();
#line 2006
  ldv_handler_precall();
#line 2007
  tmp = sm_it87_init();
#line 2007
  if (tmp) {
#line 2008
    goto ldv_final;
  } else {

  }
#line 2009
  ldv_s_it87_driver_platform_driver = 0;
#line 2012
  while (1) {
#line 2012
    tmp___1 = nondet_int();
#line 2012
    if (tmp___1 || ! (ldv_s_it87_driver_platform_driver == 0)) {

    } else {
#line 2012
      break;
    }
#line 2016
    tmp___0 = nondet_int();
#line 2016
    switch (tmp___0) {
    case 0: 
#line 2021
    if (ldv_s_it87_driver_platform_driver == 0) {
#line 2120
      res_it87_probe_42 = it87_probe(var_group1);
#line 2121
      ldv_check_return_value(res_it87_probe_42);
#line 2122
      ldv_check_return_value_probe(res_it87_probe_42);
#line 2123
      if (res_it87_probe_42) {
#line 2124
        goto ldv_module_exit;
      } else {

      }
#line 2125
      ldv_s_it87_driver_platform_driver = ldv_s_it87_driver_platform_driver + 1;
    } else {

    }
#line 2131
    break;
    case 1: 
#line 2135
    if (ldv_s_it87_driver_platform_driver == 1) {
#line 2234
      ldv_handler_precall();
#line 2235
      it87_remove(var_group1);
#line 2236
      ldv_s_it87_driver_platform_driver = 0;
    } else {

    }
#line 2242
    break;
    default: 
#line 2243
    break;
    }
  }
  ldv_module_exit: 
#line 2349
  ldv_handler_precall();
#line 2350
  sm_it87_exit();
  ldv_final: 
#line 2353
  ldv_check_final_state();
#line 2356
  return;
}
}
#line 137 "include/linux/mutex.h"
int ( __attribute__((__warn_unused_result__)) mutex_lock_interruptible)(struct mutex *lock ) ;
#line 138
int ( __attribute__((__warn_unused_result__)) mutex_lock_killable)(struct mutex *lock ) ;
#line 151
int mutex_trylock(struct mutex *lock ) ;
#line 153
int atomic_dec_and_mutex_lock(atomic_t *cnt , struct mutex *lock ) ;
#line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
__inline static void ldv_error(void) 
{ 


  {
  LDV_ERROR: 
#line 12
  goto LDV_ERROR;
}
}
#line 25
extern int ldv_undef_int(void) ;
#line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 51
  return (exp);
}
}
#line 15 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_1/common-model/ldv_common_model.c"
int ldv_mutex  =    1;
#line 18 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_1/common-model/ldv_common_model.c"
int ( __attribute__((__warn_unused_result__)) mutex_lock_interruptible)(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 25
  if (ldv_mutex == 1) {

  } else {
#line 25
    ldv_error();
  }
#line 28
  nondetermined = ldv_undef_int();
#line 31
  if (nondetermined) {
#line 34
    ldv_mutex = 2;
#line 36
    return (0);
  } else {
#line 41
    return (-4);
  }
}
}
#line 46 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_1/common-model/ldv_common_model.c"
int ( __attribute__((__warn_unused_result__)) mutex_lock_killable)(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 53
  if (ldv_mutex == 1) {

  } else {
#line 53
    ldv_error();
  }
#line 56
  nondetermined = ldv_undef_int();
#line 59
  if (nondetermined) {
#line 62
    ldv_mutex = 2;
#line 64
    return (0);
  } else {
#line 69
    return (-4);
  }
}
}
#line 74 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_1/common-model/ldv_common_model.c"
int atomic_dec_and_mutex_lock(atomic_t *cnt , struct mutex *lock ) 
{ 
  int atomic_value_after_dec ;

  {
#line 79
  if (ldv_mutex == 1) {

  } else {
#line 79
    ldv_error();
  }
#line 82
  atomic_value_after_dec = ldv_undef_int();
#line 85
  if (atomic_value_after_dec == 0) {
#line 88
    ldv_mutex = 2;
#line 90
    return (1);
  } else {

  }
#line 94
  return (0);
}
}
#line 99 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_1/common-model/ldv_common_model.c"
void mutex_lock(struct mutex *lock ) 
{ 


  {
#line 104
  if (ldv_mutex == 1) {

  } else {
#line 104
    ldv_error();
  }
#line 106
  ldv_mutex = 2;
#line 107
  return;
}
}
#line 110 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_1/common-model/ldv_common_model.c"
int mutex_trylock(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 117
  if (ldv_mutex == 1) {

  } else {
#line 117
    ldv_error();
  }
#line 120
  nondetermined = ldv_undef_int();
#line 123
  if (nondetermined) {
#line 126
    ldv_mutex = 2;
#line 128
    return (1);
  } else {
#line 133
    return (0);
  }
}
}
#line 138 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_1/common-model/ldv_common_model.c"
void mutex_unlock(struct mutex *lock ) 
{ 


  {
#line 143
  if (ldv_mutex == 2) {

  } else {
#line 143
    ldv_error();
  }
#line 145
  ldv_mutex = 1;
#line 146
  return;
}
}
#line 149 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/it87.ko--X--defaultlinux--X--32_1--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_1/common-model/ldv_common_model.c"
void ldv_check_final_state(void) 
{ 


  {
#line 152
  if (ldv_mutex == 1) {

  } else {
#line 152
    ldv_error();
  }
#line 153
  return;
}
}
