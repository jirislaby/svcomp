/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 40 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
typedef __builtin_va_list __gnuc_va_list[1U];
#line 102 "/usr/lib/gcc/x86_64-linux-gnu/4.6/include/stdarg.h"
typedef __gnuc_va_list va_list[1U];
#line 19 "include/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 20 "include/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 22 "include/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "include/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "include/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "include/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 29 "include/asm-generic/int-ll64.h"
typedef long long __s64;
#line 30 "include/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 42 "include/asm-generic/int-ll64.h"
typedef signed char s8;
#line 43 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 46 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 48 "include/asm-generic/int-ll64.h"
typedef int s32;
#line 49 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 51 "include/asm-generic/int-ll64.h"
typedef long long s64;
#line 52 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 8 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
typedef unsigned short umode_t;
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
typedef u64 dma_addr_t;
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_mode_t;
#line 12 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned long __kernel_nlink_t;
#line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_off_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_pid_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_uid_t;
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_gid_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned long __kernel_size_t;
#line 19 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_ssize_t;
#line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_time_t;
#line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_clock_t;
#line 24 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_timer_t;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_clockid_t;
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long long __kernel_loff_t;
#line 41 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_uid_t __kernel_uid32_t;
#line 42 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_gid_t __kernel_gid32_t;
#line 18 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 21 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 23 "include/linux/types.h"
typedef __kernel_mode_t mode_t;
#line 24 "include/linux/types.h"
typedef __kernel_nlink_t nlink_t;
#line 25 "include/linux/types.h"
typedef __kernel_off_t off_t;
#line 26 "include/linux/types.h"
typedef __kernel_pid_t pid_t;
#line 31 "include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 36 "include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 37 "include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 50 "include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 59 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 64 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 74 "include/linux/types.h"
typedef __kernel_time_t time_t;
#line 107 "include/linux/types.h"
typedef __s32 int32_t;
#line 111 "include/linux/types.h"
typedef __u8 uint8_t;
#line 113 "include/linux/types.h"
typedef __u32 uint32_t;
#line 138 "include/linux/types.h"
typedef unsigned long sector_t;
#line 139 "include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 168 "include/linux/types.h"
typedef __u16 __le16;
#line 169 "include/linux/types.h"
typedef __u16 __be16;
#line 171 "include/linux/types.h"
typedef __u32 __be32;
#line 176 "include/linux/types.h"
typedef __u32 __wsum;
#line 179 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 180 "include/linux/types.h"
typedef unsigned int fmode_t;
#line 192 "include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int volatile   counter ;
};
#line 192 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 197 "include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long volatile   counter ;
};
#line 197 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
struct module;
#line 44 "include/linux/dynamic_debug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 110 "include/linux/kernel.h"
struct completion;
#line 111
struct pt_regs;
#line 210
struct pid;
#line 677
struct timespec;
#line 678
struct compat_timespec;
#line 679 "include/linux/kernel.h"
struct __anonstruct_ldv_1617_9 {
   unsigned long arg0 ;
   unsigned long arg1 ;
   unsigned long arg2 ;
   unsigned long arg3 ;
};
#line 679 "include/linux/kernel.h"
struct __anonstruct_futex_10 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 679 "include/linux/kernel.h"
struct __anonstruct_nanosleep_11 {
   clockid_t index ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};
#line 679
struct pollfd;
#line 679 "include/linux/kernel.h"
struct __anonstruct_poll_12 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 679 "include/linux/kernel.h"
union __anonunion_ldv_1640_8 {
   struct __anonstruct_ldv_1617_9 ldv_1617 ;
   struct __anonstruct_futex_10 futex ;
   struct __anonstruct_nanosleep_11 nanosleep ;
   struct __anonstruct_poll_12 poll ;
};
#line 679 "include/linux/kernel.h"
struct restart_block {
   long (*fn)(struct restart_block * ) ;
   union __anonunion_ldv_1640_8 ldv_1640 ;
};
#line 54 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
struct page;
#line 21 "include/asm-generic/getorder.h"
struct task_struct;
#line 22
struct exec_domain;
#line 23
struct mm_struct;
#line 213 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/segment.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 138 "include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 237 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ptrace.h"
struct kernel_vm86_regs {
   struct pt_regs pt ;
   unsigned short es ;
   unsigned short __esh ;
   unsigned short ds ;
   unsigned short __dsh ;
   unsigned short fs ;
   unsigned short __fsh ;
   unsigned short gs ;
   unsigned short __gsh ;
};
#line 203 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/vm86.h"
union __anonunion_ldv_1883_13 {
   struct pt_regs *regs ;
   struct kernel_vm86_regs *vm86 ;
};
#line 203 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/vm86.h"
struct math_emu_info {
   long ___orig_eip ;
   union __anonunion_ldv_1883_13 ldv_1883 ;
};
#line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 187 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_16 {
   pgdval_t pgd ;
};
#line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_16 pgd_t;
#line 284
struct file;
#line 306
struct seq_file;
#line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_ldv_2143_20 {
   unsigned int a ;
   unsigned int b ;
};
#line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_ldv_2158_21 {
   u16 limit0 ;
   u16 base0 ;
   unsigned char base1 ;
   unsigned char type : 4 ;
   unsigned char s : 1 ;
   unsigned char dpl : 2 ;
   unsigned char p : 1 ;
   unsigned char limit : 4 ;
   unsigned char avl : 1 ;
   unsigned char l : 1 ;
   unsigned char d : 1 ;
   unsigned char g : 1 ;
   unsigned char base2 ;
};
#line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
union __anonunion_ldv_2159_19 {
   struct __anonstruct_ldv_2143_20 ldv_2143 ;
   struct __anonstruct_ldv_2158_21 ldv_2158 ;
};
#line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct desc_struct {
   union __anonunion_ldv_2159_19 ldv_2159 ;
};
#line 290 "include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[64U] ;
};
#line 144 "include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 1114
struct thread_struct;
#line 353 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt.h"
struct raw_spinlock;
#line 90 "include/linux/personality.h"
struct map_segment;
#line 90 "include/linux/personality.h"
struct exec_domain {
   char const   *name ;
   void (*handler)(int  , struct pt_regs * ) ;
   unsigned char pers_low ;
   unsigned char pers_high ;
   unsigned long *signal_map ;
   unsigned long *signal_invmap ;
   struct map_segment *err_map ;
   struct map_segment *socktype_map ;
   struct map_segment *sockopt_map ;
   struct map_segment *af_map ;
   struct module *module ;
   struct exec_domain *next ;
};
#line 150 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct seq_operations;
#line 282 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_fsave_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u32 status ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_ldv_4657_25 {
   u64 rip ;
   u64 rdp ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_ldv_4663_26 {
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union __anonunion_ldv_4664_24 {
   struct __anonstruct_ldv_4657_25 ldv_4657 ;
   struct __anonstruct_ldv_4663_26 ldv_4663 ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union __anonunion_ldv_4673_27 {
   u32 padding1[12U] ;
   u32 sw_reserved[12U] ;
};
#line 300 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_fxsave_struct {
   u16 cwd ;
   u16 swd ;
   u16 twd ;
   u16 fop ;
   union __anonunion_ldv_4664_24 ldv_4664 ;
   u32 mxcsr ;
   u32 mxcsr_mask ;
   u32 st_space[32U] ;
   u32 xmm_space[64U] ;
   u32 padding[12U] ;
   union __anonunion_ldv_4673_27 ldv_4673 ;
};
#line 334 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct i387_soft_struct {
   u32 cwd ;
   u32 swd ;
   u32 twd ;
   u32 fip ;
   u32 fcs ;
   u32 foo ;
   u32 fos ;
   u32 st_space[20U] ;
   u8 ftop ;
   u8 changed ;
   u8 lookahead ;
   u8 no_update ;
   u8 rm ;
   u8 alimit ;
   struct math_emu_info *info ;
   u32 entry_eip ;
};
#line 355 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct ymmh_struct {
   u32 ymmh_space[64U] ;
};
#line 360 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct xsave_hdr_struct {
   u64 xstate_bv ;
   u64 reserved1[2U] ;
   u64 reserved2[5U] ;
};
#line 366 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct xsave_struct {
   struct i387_fxsave_struct i387 ;
   struct xsave_hdr_struct xsave_hdr ;
   struct ymmh_struct ymmh ;
};
#line 372 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
union thread_xstate {
   struct i387_fsave_struct fsave ;
   struct i387_fxsave_struct fxsave ;
   struct i387_soft_struct soft ;
   struct xsave_struct xsave ;
};
#line 412
struct kmem_cache;
#line 413
struct ds_context;
#line 413 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct thread_struct {
   struct desc_struct tls_array[3U] ;
   unsigned long sp0 ;
   unsigned long sp ;
   unsigned long usersp ;
   unsigned short es ;
   unsigned short ds ;
   unsigned short fsindex ;
   unsigned short gsindex ;
   unsigned long fs ;
   unsigned long gs ;
   unsigned long debugreg0 ;
   unsigned long debugreg1 ;
   unsigned long debugreg2 ;
   unsigned long debugreg3 ;
   unsigned long debugreg6 ;
   unsigned long debugreg7 ;
   unsigned long cr2 ;
   unsigned long trap_no ;
   unsigned long error_code ;
   union thread_xstate *xstate ;
   unsigned long *io_bitmap_ptr ;
   unsigned long iopl ;
   unsigned int io_bitmap_max ;
   unsigned long debugctlmsr ;
   struct ds_context *ds_ctx ;
};
#line 616 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_29 {
   unsigned long seg ;
};
#line 616 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_29 mm_segment_t;
#line 23 "include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 131 "include/asm-generic/atomic-long.h"
struct thread_info {
   struct task_struct *task ;
   struct exec_domain *exec_domain ;
   __u32 flags ;
   __u32 status ;
   __u32 cpu ;
   int preempt_count ;
   mm_segment_t addr_limit ;
   struct restart_block restart_block ;
   void *sysenter_return ;
   int uaccess_err ;
};
#line 56 "include/linux/prefetch.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 327 "include/linux/list.h"
struct hlist_node;
#line 327 "include/linux/list.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 543 "include/linux/list.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 8 "include/linux/bottom_half.h"
struct raw_spinlock {
   unsigned int slock ;
};
#line 10 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct raw_spinlock raw_spinlock_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct __anonstruct_raw_rwlock_t_30 {
   unsigned int lock ;
};
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct __anonstruct_raw_rwlock_t_30 raw_rwlock_t;
#line 17
struct lockdep_map;
#line 56 "include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 24 "include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 38 "include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 42 "include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 127 "include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 170 "include/linux/lockdep.h"
struct held_lock {
   u64 prev_chain_key ;
   unsigned long acquire_ip ;
   struct lockdep_map *instance ;
   struct lockdep_map *nest_lock ;
   u64 waittime_stamp ;
   u64 holdtime_stamp ;
   unsigned short class_idx : 13 ;
   unsigned char irq_context : 2 ;
   unsigned char trylock : 1 ;
   unsigned char read : 2 ;
   unsigned char check : 2 ;
   unsigned char hardirqs_off : 1 ;
   unsigned short references : 11 ;
};
#line 32 "include/linux/spinlock_types.h"
struct __anonstruct_spinlock_t_31 {
   raw_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 32 "include/linux/spinlock_types.h"
typedef struct __anonstruct_spinlock_t_31 spinlock_t;
#line 48 "include/linux/spinlock_types.h"
struct __anonstruct_rwlock_t_32 {
   raw_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 48 "include/linux/spinlock_types.h"
typedef struct __anonstruct_rwlock_t_32 rwlock_t;
#line 35 "include/linux/seqlock.h"
struct __anonstruct_seqlock_t_33 {
   unsigned int sequence ;
   spinlock_t lock ;
};
#line 35 "include/linux/seqlock.h"
typedef struct __anonstruct_seqlock_t_33 seqlock_t;
#line 104 "include/linux/math64.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 32 "include/linux/input.h"
struct input_id {
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
};
#line 58 "include/linux/input.h"
struct ff_replay {
   __u16 length ;
   __u16 delay ;
};
#line 792 "include/linux/input.h"
struct ff_trigger {
   __u16 button ;
   __u16 interval ;
};
#line 802 "include/linux/input.h"
struct ff_envelope {
   __u16 attack_length ;
   __u16 attack_level ;
   __u16 fade_length ;
   __u16 fade_level ;
};
#line 821 "include/linux/input.h"
struct ff_constant_effect {
   __s16 level ;
   struct ff_envelope envelope ;
};
#line 831 "include/linux/input.h"
struct ff_ramp_effect {
   __s16 start_level ;
   __s16 end_level ;
   struct ff_envelope envelope ;
};
#line 843 "include/linux/input.h"
struct ff_condition_effect {
   __u16 right_saturation ;
   __u16 left_saturation ;
   __s16 right_coeff ;
   __s16 left_coeff ;
   __u16 deadband ;
   __s16 center ;
};
#line 864 "include/linux/input.h"
struct ff_periodic_effect {
   __u16 waveform ;
   __u16 period ;
   __s16 magnitude ;
   __s16 offset ;
   __u16 phase ;
   struct ff_envelope envelope ;
   __u32 custom_len ;
   __s16 *custom_data ;
};
#line 895 "include/linux/input.h"
struct ff_rumble_effect {
   __u16 strong_magnitude ;
   __u16 weak_magnitude ;
};
#line 908 "include/linux/input.h"
union __anonunion_u_34 {
   struct ff_constant_effect constant ;
   struct ff_ramp_effect ramp ;
   struct ff_periodic_effect periodic ;
   struct ff_condition_effect condition[2U] ;
   struct ff_rumble_effect rumble ;
};
#line 908 "include/linux/input.h"
struct ff_effect {
   __u16 type ;
   __s16 id ;
   __u16 direction ;
   struct ff_trigger trigger ;
   struct ff_replay replay ;
   union __anonunion_u_34 u ;
};
#line 165 "include/linux/ioport.h"
struct device;
#line 186
struct kobject;
#line 187 "include/linux/ioport.h"
struct attribute {
   char const   *name ;
   struct module *owner ;
   mode_t mode ;
};
#line 33 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 40
struct vm_area_struct;
#line 75 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 81
struct sysfs_dirent;
#line 131 "include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 28 "include/linux/wait.h"
struct __wait_queue;
#line 28 "include/linux/wait.h"
typedef struct __wait_queue wait_queue_t;
#line 31 "include/linux/wait.h"
struct __wait_queue {
   unsigned int flags ;
   void *private ;
   int (*func)(wait_queue_t * , unsigned int  , int  , void * ) ;
   struct list_head task_list ;
};
#line 49 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 54 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 48 "include/linux/kobject.h"
struct kset;
#line 48
struct kobj_type;
#line 48 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned char state_initialized : 1 ;
   unsigned char state_in_sysfs : 1 ;
   unsigned char state_add_uevent_sent : 1 ;
   unsigned char state_remove_uevent_sent : 1 ;
   unsigned char uevent_suppress : 1 ;
};
#line 106 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops *sysfs_ops ;
   struct attribute **default_attrs ;
};
#line 112 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 119 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (*filter)(struct kset * , struct kobject * ) ;
   char const   *(*name)(struct kset * , struct kobject * ) ;
   int (*uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 136 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops *uevent_ops ;
};
#line 210
struct klist_node;
#line 37 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 112 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   uid_t uid ;
   gid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 98 "include/linux/nodemask.h"
struct __anonstruct_nodemask_t_35 {
   unsigned long bits[8U] ;
};
#line 98 "include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_35 nodemask_t;
#line 632 "include/linux/mmzone.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct thread_info *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 63 "include/linux/mutex.h"
struct mutex_waiter {
   struct list_head list ;
   struct task_struct *task ;
   void *magic ;
};
#line 154
struct rw_semaphore;
#line 156 "include/linux/mutex.h"
struct rw_semaphore {
   __s32 activity ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 741 "include/linux/mmzone.h"
struct ctl_table;
#line 32 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 41 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 42 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
};
#line 186
enum dpm_state {
    DPM_INVALID = 0,
    DPM_ON = 1,
    DPM_PREPARING = 2,
    DPM_RESUMING = 3,
    DPM_SUSPENDING = 4,
    DPM_OFF = 5,
    DPM_OFF_IRQ = 6
} ;
#line 196 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned char can_wakeup : 1 ;
   unsigned char should_wakeup : 1 ;
   enum dpm_state status ;
   struct list_head entry ;
};
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_82 {
   void *ldt ;
   int size ;
   struct mutex lock ;
   void *vdso ;
};
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_82 mm_context_t;
#line 33 "include/linux/kmod.h"
struct key;
#line 27 "include/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 28 "include/linux/elf.h"
typedef __u16 Elf64_Half;
#line 32 "include/linux/elf.h"
typedef __u32 Elf64_Word;
#line 33 "include/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 180 "include/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 188 "include/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 405
struct kernel_param;
#line 38 "include/linux/moduleparam.h"
struct kparam_string;
#line 38
struct kparam_array;
#line 38 "include/linux/moduleparam.h"
union __anonunion_ldv_9575_92 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 38 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   u16 perm ;
   u16 flags ;
   int (*set)(char const   * , struct kernel_param * ) ;
   int (*get)(char * , struct kernel_param * ) ;
   union __anonunion_ldv_9575_92 ldv_9575 ;
};
#line 55 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 61 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int *num ;
   int (*set)(char const   * , struct kernel_param * ) ;
   int (*get)(char * , struct kernel_param * ) ;
   unsigned int elemsize ;
   void *elem ;
};
#line 243
struct marker;
#line 33 "include/linux/marker.h"
typedef void marker_probe_func(void * , void * , char const   * , va_list * );
#line 34 "include/linux/marker.h"
struct marker_probe_closure {
   marker_probe_func *func ;
   void *probe_private ;
};
#line 40 "include/linux/marker.h"
struct marker {
   char const   *name ;
   char const   *format ;
   char state ;
   char ptype ;
   void (*call)(struct marker  const  * , void *  , ...) ;
   struct marker_probe_closure single ;
   struct marker_probe_closure *multi ;
   char const   *tp_name ;
   void *tp_cb ;
};
#line 210 "include/linux/marker.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 91 "include/linux/completion.h"
struct rcu_head {
   struct rcu_head *next ;
   void (*func)(struct rcu_head * ) ;
};
#line 315 "include/linux/rcupdate.h"
struct tracepoint;
#line 316 "include/linux/rcupdate.h"
struct tracepoint {
   char const   *name ;
   int state ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   void **funcs ;
};
#line 310 "include/linux/jiffies.h"
union ktime {
   s64 tv64 ;
};
#line 59 "include/linux/ktime.h"
typedef union ktime ktime_t;
#line 85 "include/linux/debugobjects.h"
struct tvec_base;
#line 86 "include/linux/debugobjects.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   struct tvec_base *base ;
   void *start_site ;
   char start_comm[16U] ;
   int start_pid ;
   struct lockdep_map lockdep_map ;
};
#line 245 "include/linux/timer.h"
struct hrtimer;
#line 246
enum hrtimer_restart;
#line 258
struct work_struct;
#line 18 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 35 "include/linux/workqueue.h"
struct delayed_work {
   struct work_struct work ;
   struct timer_list timer ;
};
#line 79 "include/linux/kmemleak.h"
struct kmem_cache_cpu {
   void **freelist ;
   struct page *page ;
   int node ;
   unsigned int offset ;
   unsigned int objsize ;
   unsigned int stat[18U] ;
};
#line 46 "include/linux/slub_def.h"
struct kmem_cache_node {
   spinlock_t list_lock ;
   unsigned long nr_partial ;
   struct list_head partial ;
   atomic_long_t nr_slabs ;
   atomic_long_t total_objects ;
   struct list_head full ;
};
#line 57 "include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 67 "include/linux/slub_def.h"
struct kmem_cache {
   unsigned long flags ;
   int size ;
   int objsize ;
   int offset ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_node local_node ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   unsigned long min_partial ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[512U] ;
   struct kmem_cache_cpu *cpu_slab[4096U] ;
};
#line 155 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/local.h"
struct mod_arch_specific {

};
#line 100 "include/trace/events/module.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 47 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 59
struct module_param_attrs;
#line 59 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 71
struct exception_table_entry;
#line 177
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2
} ;
#line 183
struct module_sect_attrs;
#line 183
struct module_notes_attrs;
#line 183
struct ftrace_event_call;
#line 183 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   unsigned int num_symtab ;
   char *strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   void *percpu ;
   char *args ;
   struct marker *markers ;
   unsigned int num_markers ;
   struct tracepoint *tracepoints ;
   unsigned int num_tracepoints ;
   char const   **trace_bprintk_fmt_start ;
   unsigned int num_trace_bprintk_fmt ;
   struct ftrace_event_call *trace_events ;
   unsigned int num_trace_events ;
   struct list_head modules_which_use_me ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   char *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 542
struct device_driver;
#line 719 "include/linux/module.h"
struct semaphore {
   spinlock_t lock ;
   unsigned int count ;
   struct list_head wait_list ;
};
#line 48 "include/linux/semaphore.h"
struct dma_map_ops;
#line 48 "include/linux/semaphore.h"
struct dev_archdata {
   void *acpi_handle ;
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct device_private;
#line 15
struct driver_private;
#line 16
struct class;
#line 17
struct class_private;
#line 18
struct bus_type;
#line 19
struct bus_type_private;
#line 20 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 49 "include/linux/device.h"
struct device_attribute;
#line 49
struct driver_attribute;
#line 49 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops *pm ;
   struct bus_type_private *p ;
};
#line 120 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group **groups ;
   struct dev_pm_ops *pm ;
   struct driver_private *p ;
};
#line 150 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 180
struct class_attribute;
#line 180 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*nodename)(struct device * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops *pm ;
   struct class_private *p ;
};
#line 206
struct device_type;
#line 237 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , char * ) ;
   ssize_t (*store)(struct class * , char const   * , size_t  ) ;
};
#line 269 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*nodename)(struct device * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops *pm ;
};
#line 296 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 357 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 366
struct dma_coherent_mem;
#line 366 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type *type ;
   struct semaphore sem ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *driver_data ;
   void *platform_data ;
   struct dev_pm_info power ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   dev_t devt ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group **groups ;
   void (*release)(struct device * ) ;
};
#line 394 "include/linux/rculist.h"
struct nameidata;
#line 395
struct path;
#line 396
struct vfsmount;
#line 397 "include/linux/rculist.h"
struct qstr {
   unsigned int hash ;
   unsigned int len ;
   unsigned char const   *name ;
};
#line 77 "include/linux/dcache.h"
struct inode;
#line 77 "include/linux/dcache.h"
union __anonunion_d_u_94 {
   struct list_head d_child ;
   struct rcu_head d_rcu ;
};
#line 77
struct dentry_operations;
#line 77
struct super_block;
#line 77 "include/linux/dcache.h"
struct dentry {
   atomic_t d_count ;
   unsigned int d_flags ;
   spinlock_t d_lock ;
   int d_mounted ;
   struct inode *d_inode ;
   struct hlist_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct list_head d_lru ;
   union __anonunion_d_u_94 d_u ;
   struct list_head d_subdirs ;
   struct list_head d_alias ;
   unsigned long d_time ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   void *d_fsdata ;
   unsigned char d_iname[32U] ;
};
#line 126 "include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , struct nameidata * ) ;
   int (*d_hash)(struct dentry * , struct qstr * ) ;
   int (*d_compare)(struct dentry * , struct qstr * , struct qstr * ) ;
   int (*d_delete)(struct dentry * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
};
#line 382 "include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 55 "include/linux/radix-tree.h"
struct radix_tree_node;
#line 55 "include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 193
struct prio_tree_node;
#line 193 "include/linux/radix-tree.h"
struct raw_prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
};
#line 19 "include/linux/prio_tree.h"
struct prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
   unsigned long start ;
   unsigned long last ;
};
#line 27 "include/linux/prio_tree.h"
struct prio_tree_root {
   struct prio_tree_node *prio_tree_node ;
   unsigned short index_bits ;
   unsigned short raw ;
};
#line 111
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 118
struct pid_namespace;
#line 118 "include/linux/prio_tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct rcu_head rcu ;
   struct upid numbers[1U] ;
};
#line 68 "include/linux/pid.h"
struct pid_link {
   struct hlist_node node ;
   struct pid *pid ;
};
#line 97 "include/linux/capability.h"
struct kernel_cap_struct {
   __u32 cap[2U] ;
};
#line 101 "include/linux/capability.h"
typedef struct kernel_cap_struct kernel_cap_t;
#line 570 "include/linux/capability.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "include/linux/fiemap.h"
struct export_operations;
#line 40
struct iovec;
#line 41
struct kiocb;
#line 42
struct pipe_inode_info;
#line 43
struct poll_table_struct;
#line 44
struct kstatfs;
#line 45
struct cred;
#line 409 "include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   uid_t ia_uid ;
   gid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 468 "include/linux/fs.h"
struct if_dqblk {
   __u64 dqb_bhardlimit ;
   __u64 dqb_bsoftlimit ;
   __u64 dqb_curspace ;
   __u64 dqb_ihardlimit ;
   __u64 dqb_isoftlimit ;
   __u64 dqb_curinodes ;
   __u64 dqb_btime ;
   __u64 dqb_itime ;
   __u32 dqb_valid ;
};
#line 117 "include/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 150 "include/linux/quota.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 75 "include/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 141 "include/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 142 "include/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 156
struct dquot;
#line 182 "include/linux/quota.h"
typedef __kernel_uid32_t qid_t;
#line 183 "include/linux/quota.h"
typedef long long qsize_t;
#line 186 "include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 208
struct quota_format_type;
#line 209 "include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 251 "include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   unsigned int dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   short dq_type ;
   struct mem_dqblk dq_dqb ;
};
#line 279 "include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 293 "include/linux/quota.h"
struct dquot_operations {
   int (*initialize)(struct inode * , int  ) ;
   int (*drop)(struct inode * ) ;
   int (*alloc_space)(struct inode * , qsize_t  , int  ) ;
   int (*alloc_inode)(struct inode  const  * , qsize_t  ) ;
   int (*free_space)(struct inode * , qsize_t  ) ;
   int (*free_inode)(struct inode  const  * , qsize_t  ) ;
   int (*transfer)(struct inode * , struct iattr * ) ;
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   int (*reserve_space)(struct inode * , qsize_t  , int  ) ;
   int (*claim_space)(struct inode * , qsize_t  ) ;
   void (*release_rsv)(struct inode * , qsize_t  ) ;
   qsize_t (*get_reserved_space)(struct inode * ) ;
};
#line 319 "include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , char * , int  ) ;
   int (*quota_off)(struct super_block * , int  , int  ) ;
   int (*quota_sync)(struct super_block * , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
   int (*set_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
   int (*get_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
   int (*set_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
};
#line 334 "include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 378 "include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops *ops[2U] ;
};
#line 401
struct address_space;
#line 402
struct writeback_control;
#line 558 "include/linux/fs.h"
union __anonunion_arg_97 {
   char *buf ;
   void *data ;
};
#line 558 "include/linux/fs.h"
struct __anonstruct_read_descriptor_t_96 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_97 arg ;
   int error ;
};
#line 558 "include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_96 read_descriptor_t;
#line 561 "include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   void (*sync_page)(struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned long  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  * , loff_t  ,
                        unsigned long  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , read_descriptor_t * , unsigned long  ) ;
};
#line 609
struct backing_dev_info;
#line 610 "include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct prio_tree_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   spinlock_t i_mmap_lock ;
   unsigned int truncate_count ;
   unsigned long nrpages ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   struct address_space *assoc_mapping ;
};
#line 631
struct hd_struct;
#line 631
struct gendisk;
#line 631 "include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   int bd_openers ;
   struct mutex bd_mutex ;
   struct semaphore bd_mount_sem ;
   struct list_head bd_inodes ;
   void *bd_holder ;
   int bd_holders ;
   struct list_head bd_holder_list ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct list_head bd_list ;
   struct backing_dev_info *bd_inode_backing_dev_info ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 701
struct posix_acl;
#line 702
struct inode_operations;
#line 702
struct file_operations;
#line 702
struct file_lock;
#line 702
struct cdev;
#line 702 "include/linux/fs.h"
union __anonunion_ldv_13011_98 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 702 "include/linux/fs.h"
struct inode {
   struct hlist_node i_hash ;
   struct list_head i_list ;
   struct list_head i_sb_list ;
   struct list_head i_dentry ;
   unsigned long i_ino ;
   atomic_t i_count ;
   unsigned int i_nlink ;
   uid_t i_uid ;
   gid_t i_gid ;
   dev_t i_rdev ;
   u64 i_version ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   blkcnt_t i_blocks ;
   unsigned int i_blkbits ;
   unsigned short i_bytes ;
   umode_t i_mode ;
   spinlock_t i_lock ;
   struct mutex i_mutex ;
   struct rw_semaphore i_alloc_sem ;
   struct inode_operations  const  *i_op ;
   struct file_operations  const  *i_fop ;
   struct super_block *i_sb ;
   struct file_lock *i_flock ;
   struct address_space *i_mapping ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion_ldv_13011_98 ldv_13011 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_mark_entries ;
   struct list_head inotify_watches ;
   struct mutex inotify_mutex ;
   unsigned long i_state ;
   unsigned long dirtied_when ;
   unsigned int i_flags ;
   atomic_t i_writecount ;
   void *i_security ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   void *i_private ;
};
#line 870 "include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   uid_t uid ;
   uid_t euid ;
   int signum ;
};
#line 878 "include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 901 "include/linux/fs.h"
union __anonunion_f_u_99 {
   struct list_head fu_list ;
   struct rcu_head fu_rcuhead ;
};
#line 901 "include/linux/fs.h"
struct file {
   union __anonunion_f_u_99 f_u ;
   struct path f_path ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct address_space *f_mapping ;
   unsigned long f_mnt_write_state ;
};
#line 1024
struct files_struct;
#line 1024 "include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 1025 "include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 1030 "include/linux/fs.h"
struct lock_manager_operations {
   int (*fl_compare_owner)(struct file_lock * , struct file_lock * ) ;
   void (*fl_notify)(struct file_lock * ) ;
   int (*fl_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
   void (*fl_break)(struct file_lock * ) ;
   int (*fl_mylease)(struct file_lock * , struct file_lock * ) ;
   int (*fl_change)(struct file_lock ** , int  ) ;
};
#line 163 "include/linux/nfs.h"
struct nlm_lockowner;
#line 164 "include/linux/nfs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 18 "include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 19 "include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 23
struct fasync_struct;
#line 23 "include/linux/nfs_fs_i.h"
struct __anonstruct_afs_101 {
   struct list_head link ;
   int state ;
};
#line 23 "include/linux/nfs_fs_i.h"
union __anonunion_fl_u_100 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_101 afs ;
};
#line 23 "include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned char fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   struct file_lock_operations *fl_ops ;
   struct lock_manager_operations *fl_lmops ;
   union __anonunion_fl_u_100 fl_u ;
};
#line 1133 "include/linux/fs.h"
struct fasync_struct {
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
};
#line 1310
struct file_system_type;
#line 1310
struct super_operations;
#line 1310
struct xattr_handler;
#line 1310
struct mtd_info;
#line 1310 "include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned long s_blocksize ;
   unsigned char s_blocksize_bits ;
   unsigned char s_dirt ;
   unsigned long long s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations *dq_op ;
   struct quotactl_ops *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   struct mutex s_lock ;
   int s_count ;
   int s_need_sync ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_head s_anon ;
   struct list_head s_files ;
   struct list_head s_dentry_lru ;
   int s_nr_dentry_unused ;
   struct block_device *s_bdev ;
   struct mtd_info *s_mtd ;
   struct list_head s_instances ;
   struct quota_info s_dquot ;
   int s_frozen ;
   wait_queue_head_t s_wait_unfrozen ;
   char s_id[32U] ;
   void *s_fs_info ;
   fmode_t s_mode ;
   struct mutex s_vfs_rename_mutex ;
   u32 s_time_gran ;
   char *s_subtype ;
   char *s_options ;
};
#line 1427 "include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1471 "include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*readdir)(struct file * , void * , int (*)(void * , char const   * , int  ,
                                                   loff_t  , u64  , unsigned int  ) ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   int (*ioctl)(struct inode * , struct file * , unsigned int  , unsigned long  ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , struct dentry * , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
};
#line 1511 "include/linux/fs.h"
struct inode_operations {
   int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
   struct dentry *(*lookup)(struct inode * , struct dentry * , struct nameidata * ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , int  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , int  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   void (*truncate)(struct inode * ) ;
   int (*permission)(struct inode * , int  ) ;
   int (*check_acl)(struct inode * , int  ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   void (*truncate_range)(struct inode * , loff_t  , loff_t  ) ;
   long (*fallocate)(struct inode * , int  , loff_t  , loff_t  ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
};
#line 1554 "include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * ) ;
   int (*write_inode)(struct inode * , int  ) ;
   void (*drop_inode)(struct inode * ) ;
   void (*delete_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   void (*write_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*clear_inode)(struct inode * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct vfsmount * ) ;
   int (*show_stats)(struct seq_file * , struct vfsmount * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
};
#line 1738 "include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   int (*get_sb)(struct file_system_type * , int  , char const   * , void * , struct vfsmount * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct list_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
   struct lock_class_key i_alloc_sem_key ;
};
#line 2191
struct bio;
#line 12 "include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 38 "include/linux/mod_devicetable.h"
struct usb_device_id {
   __u16 match_flags ;
   __u16 idVendor ;
   __u16 idProduct ;
   __u16 bcdDevice_lo ;
   __u16 bcdDevice_hi ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   kernel_ulong_t driver_info ;
};
#line 269 "include/linux/mod_devicetable.h"
struct input_device_id {
   kernel_ulong_t flags ;
   __u16 bustype ;
   __u16 vendor ;
   __u16 product ;
   __u16 version ;
   kernel_ulong_t evbit[1U] ;
   kernel_ulong_t keybit[12U] ;
   kernel_ulong_t relbit[1U] ;
   kernel_ulong_t absbit[1U] ;
   kernel_ulong_t mscbit[1U] ;
   kernel_ulong_t ledbit[1U] ;
   kernel_ulong_t sndbit[1U] ;
   kernel_ulong_t ffbit[2U] ;
   kernel_ulong_t swbit[1U] ;
   kernel_ulong_t driver_info ;
};
#line 464
struct ff_device;
#line 464
struct input_handle;
#line 464 "include/linux/mod_devicetable.h"
struct input_dev {
   char const   *name ;
   char const   *phys ;
   char const   *uniq ;
   struct input_id id ;
   unsigned long evbit[1U] ;
   unsigned long keybit[12U] ;
   unsigned long relbit[1U] ;
   unsigned long absbit[1U] ;
   unsigned long mscbit[1U] ;
   unsigned long ledbit[1U] ;
   unsigned long sndbit[1U] ;
   unsigned long ffbit[2U] ;
   unsigned long swbit[1U] ;
   unsigned int keycodemax ;
   unsigned int keycodesize ;
   void *keycode ;
   int (*setkeycode)(struct input_dev * , int  , int  ) ;
   int (*getkeycode)(struct input_dev * , int  , int * ) ;
   struct ff_device *ff ;
   unsigned int repeat_key ;
   struct timer_list timer ;
   int sync ;
   int abs[64U] ;
   int rep[2U] ;
   unsigned long key[12U] ;
   unsigned long led[1U] ;
   unsigned long snd[1U] ;
   unsigned long sw[1U] ;
   int absmax[64U] ;
   int absmin[64U] ;
   int absfuzz[64U] ;
   int absflat[64U] ;
   int absres[64U] ;
   int (*open)(struct input_dev * ) ;
   void (*close)(struct input_dev * ) ;
   int (*flush)(struct input_dev * , struct file * ) ;
   int (*event)(struct input_dev * , unsigned int  , unsigned int  , int  ) ;
   struct input_handle *grab ;
   spinlock_t event_lock ;
   struct mutex mutex ;
   unsigned int users ;
   int going_away ;
   struct device dev ;
   struct list_head h_list ;
   struct list_head node ;
};
#line 1133 "include/linux/input.h"
struct input_handler {
   void *private ;
   void (*event)(struct input_handle * , unsigned int  , unsigned int  , int  ) ;
   int (*connect)(struct input_handler * , struct input_dev * , struct input_device_id  const  * ) ;
   void (*disconnect)(struct input_handle * ) ;
   void (*start)(struct input_handle * ) ;
   struct file_operations  const  *fops ;
   int minor ;
   char const   *name ;
   struct input_device_id  const  *id_table ;
   struct input_device_id  const  *blacklist ;
   struct list_head h_list ;
   struct list_head node ;
};
#line 1235 "include/linux/input.h"
struct input_handle {
   void *private ;
   int open ;
   char const   *name ;
   struct input_dev *dev ;
   struct input_handler *handler ;
   struct list_head d_node ;
   struct list_head h_node ;
};
#line 1357 "include/linux/input.h"
struct ff_device {
   int (*upload)(struct input_dev * , struct ff_effect * , struct ff_effect * ) ;
   int (*erase)(struct input_dev * , int  ) ;
   int (*playback)(struct input_dev * , int  , int  ) ;
   void (*set_gain)(struct input_dev * , u16  ) ;
   void (*set_autocenter)(struct input_dev * , u16  ) ;
   void (*destroy)(struct ff_device * ) ;
   void *private ;
   unsigned long ffbit[2U] ;
   struct mutex mutex ;
   int max_effects ;
   struct ff_effect *effects ;
   struct file *effect_owners[] ;
};
#line 212 "include/linux/usb/ch9.h"
struct usb_device_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 bcdUSB ;
   __u8 bDeviceClass ;
   __u8 bDeviceSubClass ;
   __u8 bDeviceProtocol ;
   __u8 bMaxPacketSize0 ;
   __le16 idVendor ;
   __le16 idProduct ;
   __le16 bcdDevice ;
   __u8 iManufacturer ;
   __u8 iProduct ;
   __u8 iSerialNumber ;
   __u8 bNumConfigurations ;
};
#line 234 "include/linux/usb/ch9.h"
struct usb_config_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __le16 wTotalLength ;
   __u8 bNumInterfaces ;
   __u8 bConfigurationValue ;
   __u8 iConfiguration ;
   __u8 bmAttributes ;
   __u8 bMaxPower ;
};
#line 300 "include/linux/usb/ch9.h"
struct usb_interface_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bInterfaceNumber ;
   __u8 bAlternateSetting ;
   __u8 bNumEndpoints ;
   __u8 bInterfaceClass ;
   __u8 bInterfaceSubClass ;
   __u8 bInterfaceProtocol ;
   __u8 iInterface ;
};
#line 320 "include/linux/usb/ch9.h"
struct usb_endpoint_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bEndpointAddress ;
   __u8 bmAttributes ;
   __le16 wMaxPacketSize ;
   __u8 bInterval ;
   __u8 bRefresh ;
   __u8 bSynchAddress ;
};
#line 537 "include/linux/usb/ch9.h"
struct usb_ss_ep_comp_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bMaxBurst ;
   __u8 bmAttributes ;
   __u16 wBytesPerInterval ;
};
#line 594 "include/linux/usb/ch9.h"
struct usb_interface_assoc_descriptor {
   __u8 bLength ;
   __u8 bDescriptorType ;
   __u8 bFirstInterface ;
   __u8 bInterfaceCount ;
   __u8 bFunctionClass ;
   __u8 bFunctionSubClass ;
   __u8 bFunctionProtocol ;
   __u8 iFunction ;
};
#line 761
enum usb_device_speed {
    USB_SPEED_UNKNOWN = 0,
    USB_SPEED_LOW = 1,
    USB_SPEED_FULL = 2,
    USB_SPEED_HIGH = 3,
    USB_SPEED_VARIABLE = 4,
    USB_SPEED_SUPER = 5
} ;
#line 770
enum usb_device_state {
    USB_STATE_NOTATTACHED = 0,
    USB_STATE_ATTACHED = 1,
    USB_STATE_POWERED = 2,
    USB_STATE_RECONNECTING = 3,
    USB_STATE_UNAUTHENTICATED = 4,
    USB_STATE_DEFAULT = 5,
    USB_STATE_ADDRESS = 6,
    USB_STATE_CONFIGURED = 7,
    USB_STATE_SUSPENDED = 8
} ;
#line 782
enum irqreturn {
    IRQ_NONE = 0,
    IRQ_HANDLED = 1,
    IRQ_WAKE_THREAD = 2
} ;
#line 16 "include/linux/irqreturn.h"
typedef enum irqreturn irqreturn_t;
#line 33 "include/linux/irq.h"
struct proc_dir_entry;
#line 146
struct irqaction;
#line 49 "include/linux/sched.h"
struct rb_node {
   unsigned long rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 108 "include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 28 "include/linux/mm_types.h"
typedef atomic_long_t mm_counter_t;
#line 29 "include/linux/mm_types.h"
struct __anonstruct_ldv_16109_105 {
   u16 inuse ;
   u16 objects ;
};
#line 29 "include/linux/mm_types.h"
union __anonunion_ldv_16110_104 {
   atomic_t _mapcount ;
   struct __anonstruct_ldv_16109_105 ldv_16109 ;
};
#line 29 "include/linux/mm_types.h"
struct __anonstruct_ldv_16115_107 {
   unsigned long private ;
   struct address_space *mapping ;
};
#line 29 "include/linux/mm_types.h"
union __anonunion_ldv_16119_106 {
   struct __anonstruct_ldv_16115_107 ldv_16115 ;
   spinlock_t ptl ;
   struct kmem_cache *slab ;
   struct page *first_page ;
};
#line 29 "include/linux/mm_types.h"
union __anonunion_ldv_16123_108 {
   unsigned long index ;
   void *freelist ;
};
#line 29 "include/linux/mm_types.h"
struct page {
   unsigned long flags ;
   atomic_t _count ;
   union __anonunion_ldv_16110_104 ldv_16110 ;
   union __anonunion_ldv_16119_106 ldv_16119 ;
   union __anonunion_ldv_16123_108 ldv_16123 ;
   struct list_head lru ;
};
#line 127 "include/linux/mm_types.h"
struct __anonstruct_vm_set_110 {
   struct list_head list ;
   void *parent ;
   struct vm_area_struct *head ;
};
#line 127 "include/linux/mm_types.h"
union __anonunion_shared_109 {
   struct __anonstruct_vm_set_110 vm_set ;
   struct raw_prio_tree_node prio_tree_node ;
};
#line 127
struct anon_vma;
#line 127
struct vm_operations_struct;
#line 127
struct mempolicy;
#line 127 "include/linux/mm_types.h"
struct vm_area_struct {
   struct mm_struct *vm_mm ;
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct rb_node vm_rb ;
   union __anonunion_shared_109 shared ;
   struct list_head anon_vma_node ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   unsigned long vm_truncate_count ;
   struct mempolicy *vm_policy ;
};
#line 189 "include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 195 "include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 201
struct mmu_notifier_mm;
#line 201 "include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   void (*unmap_area)(struct mm_struct * , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long task_size ;
   unsigned long cached_hole_size ;
   unsigned long free_area_cache ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   int map_count ;
   struct rw_semaphore mmap_sem ;
   spinlock_t page_table_lock ;
   struct list_head mmlist ;
   mm_counter_t _file_rss ;
   mm_counter_t _anon_rss ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long reserved_vm ;
   unsigned long def_flags ;
   unsigned long nr_ptes ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[44U] ;
   cpumask_t cpu_vm_mask ;
   mm_context_t context ;
   unsigned int faultstamp ;
   unsigned int token_priority ;
   unsigned int last_interval ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct hlist_head ioctx_list ;
   struct task_struct *owner ;
   struct file *exe_file ;
   unsigned long num_exe_file_vmas ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
};
#line 7 "include/asm-generic/cputime.h"
typedef unsigned long cputime_t;
#line 113 "include/linux/sem.h"
struct sem_undo_list;
#line 126 "include/linux/sem.h"
struct sem_undo_list {
   atomic_t refcnt ;
   spinlock_t lock ;
   struct list_head list_proc ;
};
#line 135 "include/linux/sem.h"
struct sysv_sem {
   struct sem_undo_list *undo_list ;
};
#line 144
struct siginfo;
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct __anonstruct_sigset_t_111 {
   unsigned long sig[1U] ;
};
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
typedef struct __anonstruct_sigset_t_111 sigset_t;
#line 17 "include/asm-generic/signal-defs.h"
typedef void __signalfn_t(int  );
#line 18 "include/asm-generic/signal-defs.h"
typedef __signalfn_t *__sighandler_t;
#line 20 "include/asm-generic/signal-defs.h"
typedef void __restorefn_t(void);
#line 21 "include/asm-generic/signal-defs.h"
typedef __restorefn_t *__sigrestore_t;
#line 126 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct sigaction {
   __sighandler_t sa_handler ;
   unsigned long sa_flags ;
   __sigrestore_t sa_restorer ;
   sigset_t sa_mask ;
};
#line 173 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
struct k_sigaction {
   struct sigaction sa ;
};
#line 185 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/signal.h"
union sigval {
   int sival_int ;
   void *sival_ptr ;
};
#line 10 "include/asm-generic/siginfo.h"
typedef union sigval sigval_t;
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__kill_113 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__timer_114 {
   __kernel_timer_t _tid ;
   int _overrun ;
   char _pad[0U] ;
   sigval_t _sigval ;
   int _sys_private ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__rt_115 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   sigval_t _sigval ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__sigchld_116 {
   __kernel_pid_t _pid ;
   __kernel_uid32_t _uid ;
   int _status ;
   __kernel_clock_t _utime ;
   __kernel_clock_t _stime ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__sigfault_117 {
   void *_addr ;
};
#line 11 "include/asm-generic/siginfo.h"
struct __anonstruct__sigpoll_118 {
   long _band ;
   int _fd ;
};
#line 11 "include/asm-generic/siginfo.h"
union __anonunion__sifields_112 {
   int _pad[28U] ;
   struct __anonstruct__kill_113 _kill ;
   struct __anonstruct__timer_114 _timer ;
   struct __anonstruct__rt_115 _rt ;
   struct __anonstruct__sigchld_116 _sigchld ;
   struct __anonstruct__sigfault_117 _sigfault ;
   struct __anonstruct__sigpoll_118 _sigpoll ;
};
#line 11 "include/asm-generic/siginfo.h"
struct siginfo {
   int si_signo ;
   int si_errno ;
   int si_code ;
   union __anonunion__sifields_112 _sifields ;
};
#line 93 "include/asm-generic/siginfo.h"
typedef struct siginfo siginfo_t;
#line 293
struct user_struct;
#line 20 "include/linux/signal.h"
struct sigpending {
   struct list_head list ;
   sigset_t signal ;
};
#line 90 "include/linux/proportions.h"
struct prop_local_single {
   unsigned long events ;
   unsigned long period ;
   int shift ;
   spinlock_t lock ;
};
#line 10 "include/linux/seccomp.h"
struct __anonstruct_seccomp_t_121 {
   int mode ;
};
#line 10 "include/linux/seccomp.h"
typedef struct __anonstruct_seccomp_t_121 seccomp_t;
#line 21 "include/linux/seccomp.h"
struct plist_head {
   struct list_head prio_list ;
   struct list_head node_list ;
   spinlock_t *lock ;
};
#line 86 "include/linux/plist.h"
struct plist_node {
   int prio ;
   struct plist_head plist ;
};
#line 36 "include/linux/rtmutex.h"
struct rt_mutex_waiter;
#line 42 "include/linux/resource.h"
struct rlimit {
   unsigned long rlim_cur ;
   unsigned long rlim_max ;
};
#line 74
struct hrtimer_clock_base;
#line 75
struct hrtimer_cpu_base;
#line 84
enum hrtimer_restart {
    HRTIMER_NORESTART = 0,
    HRTIMER_RESTART = 1
} ;
#line 89 "include/linux/resource.h"
struct hrtimer {
   struct rb_node node ;
   ktime_t _expires ;
   ktime_t _softexpires ;
   enum hrtimer_restart (*function)(struct hrtimer * ) ;
   struct hrtimer_clock_base *base ;
   unsigned long state ;
   struct list_head cb_entry ;
   int start_pid ;
   void *start_site ;
   char start_comm[16U] ;
};
#line 130 "include/linux/hrtimer.h"
struct hrtimer_clock_base {
   struct hrtimer_cpu_base *cpu_base ;
   clockid_t index ;
   struct rb_root active ;
   struct rb_node *first ;
   ktime_t resolution ;
   ktime_t (*get_time)(void) ;
   ktime_t softirq_time ;
   ktime_t offset ;
};
#line 154 "include/linux/hrtimer.h"
struct hrtimer_cpu_base {
   spinlock_t lock ;
   struct hrtimer_clock_base clock_base[2U] ;
   ktime_t expires_next ;
   int hres_active ;
   unsigned long nr_events ;
};
#line 471 "include/linux/hrtimer.h"
struct task_io_accounting {
   u64 rchar ;
   u64 wchar ;
   u64 syscr ;
   u64 syscw ;
   u64 read_bytes ;
   u64 write_bytes ;
   u64 cancelled_write_bytes ;
};
#line 45 "include/linux/task_io_accounting.h"
struct latency_record {
   unsigned long backtrace[12U] ;
   unsigned int count ;
   unsigned long time ;
   unsigned long max ;
};
#line 841 "include/linux/sysctl.h"
struct nsproxy;
#line 842
struct ctl_table_root;
#line 843 "include/linux/sysctl.h"
struct ctl_table_set {
   struct list_head list ;
   struct ctl_table_set *parent ;
   int (*is_seen)(struct ctl_table_set * ) ;
};
#line 958
struct ctl_table_header;
#line 976 "include/linux/sysctl.h"
typedef int ctl_handler(struct ctl_table * , void * , size_t * , void * , size_t  );
#line 980 "include/linux/sysctl.h"
typedef int proc_handler(struct ctl_table * , int  , struct file * , void * , size_t * ,
                         loff_t * );
#line 1009 "include/linux/sysctl.h"
struct ctl_table {
   int ctl_name ;
   char const   *procname ;
   void *data ;
   int maxlen ;
   mode_t mode ;
   struct ctl_table *child ;
   struct ctl_table *parent ;
   proc_handler *proc_handler ;
   ctl_handler *strategy ;
   void *extra1 ;
   void *extra2 ;
};
#line 1066 "include/linux/sysctl.h"
struct ctl_table_root {
   struct list_head root_list ;
   struct ctl_table_set default_set ;
   struct ctl_table_set *(*lookup)(struct ctl_table_root * , struct nsproxy * ) ;
   int (*permissions)(struct ctl_table_root * , struct nsproxy * , struct ctl_table * ) ;
};
#line 1074 "include/linux/sysctl.h"
struct ctl_table_header {
   struct ctl_table *ctl_table ;
   struct list_head ctl_entry ;
   int used ;
   int count ;
   struct completion *unregistering ;
   struct ctl_table *ctl_table_arg ;
   struct ctl_table_root *root ;
   struct ctl_table_set *set ;
   struct ctl_table *attached_by ;
   struct ctl_table *attached_to ;
   struct ctl_table_header *parent ;
};
#line 29 "include/linux/key.h"
typedef int32_t key_serial_t;
#line 32 "include/linux/key.h"
typedef uint32_t key_perm_t;
#line 33
struct signal_struct;
#line 34
struct key_type;
#line 36
struct keyring_list;
#line 115
struct key_user;
#line 115 "include/linux/key.h"
union __anonunion_ldv_17992_122 {
   time_t expiry ;
   time_t revoked_at ;
};
#line 115 "include/linux/key.h"
union __anonunion_type_data_123 {
   struct list_head link ;
   unsigned long x[2U] ;
   void *p[2U] ;
};
#line 115 "include/linux/key.h"
union __anonunion_payload_124 {
   unsigned long value ;
   void *data ;
   struct keyring_list *subscriptions ;
};
#line 115 "include/linux/key.h"
struct key {
   atomic_t usage ;
   key_serial_t serial ;
   struct rb_node serial_node ;
   struct key_type *type ;
   struct rw_semaphore sem ;
   struct key_user *user ;
   void *security ;
   union __anonunion_ldv_17992_122 ldv_17992 ;
   uid_t uid ;
   gid_t gid ;
   key_perm_t perm ;
   unsigned short quotalen ;
   unsigned short datalen ;
   unsigned long flags ;
   char *description ;
   union __anonunion_type_data_123 type_data ;
   union __anonunion_payload_124 payload ;
};
#line 290 "include/linux/key.h"
struct group_info {
   atomic_t usage ;
   int ngroups ;
   int nblocks ;
   gid_t small_block[32U] ;
   gid_t *blocks[0U] ;
};
#line 76 "include/linux/cred.h"
struct thread_group_cred {
   atomic_t usage ;
   pid_t tgid ;
   spinlock_t lock ;
   struct key *session_keyring ;
   struct key *process_keyring ;
   struct rcu_head rcu ;
};
#line 90 "include/linux/cred.h"
struct cred {
   atomic_t usage ;
   atomic_t subscribers ;
   void *put_addr ;
   unsigned int magic ;
   uid_t uid ;
   gid_t gid ;
   uid_t suid ;
   gid_t sgid ;
   uid_t euid ;
   gid_t egid ;
   uid_t fsuid ;
   gid_t fsgid ;
   unsigned int securebits ;
   kernel_cap_t cap_inheritable ;
   kernel_cap_t cap_permitted ;
   kernel_cap_t cap_effective ;
   kernel_cap_t cap_bset ;
   unsigned char jit_keyring ;
   struct key *thread_keyring ;
   struct key *request_key_auth ;
   struct thread_group_cred *tgcred ;
   void *security ;
   struct user_struct *user ;
   struct group_info *group_info ;
   struct rcu_head rcu ;
};
#line 276
struct futex_pi_state;
#line 277
struct robust_list_head;
#line 278
struct fs_struct;
#line 279
struct bts_context;
#line 280
struct perf_counter_context;
#line 147 "include/linux/sched.h"
struct cfs_rq;
#line 148
struct task_group;
#line 350
struct user_namespace;
#line 44 "include/linux/aio_abi.h"
struct io_event {
   __u64 data ;
   __u64 obj ;
   __s64 res ;
   __s64 res2 ;
};
#line 106 "include/linux/aio_abi.h"
struct iovec {
   void *iov_base ;
   __kernel_size_t iov_len ;
};
#line 54 "include/linux/uio.h"
struct kioctx;
#line 55 "include/linux/uio.h"
union __anonunion_ki_obj_125 {
   void *user ;
   struct task_struct *tsk ;
};
#line 55
struct eventfd_ctx;
#line 55 "include/linux/uio.h"
struct kiocb {
   struct list_head ki_run_list ;
   unsigned long ki_flags ;
   int ki_users ;
   unsigned int ki_key ;
   struct file *ki_filp ;
   struct kioctx *ki_ctx ;
   int (*ki_cancel)(struct kiocb * , struct io_event * ) ;
   ssize_t (*ki_retry)(struct kiocb * ) ;
   void (*ki_dtor)(struct kiocb * ) ;
   union __anonunion_ki_obj_125 ki_obj ;
   __u64 ki_user_data ;
   wait_queue_t ki_wait ;
   loff_t ki_pos ;
   void *private ;
   unsigned short ki_opcode ;
   size_t ki_nbytes ;
   char *ki_buf ;
   size_t ki_left ;
   struct iovec ki_inline_vec ;
   struct iovec *ki_iovec ;
   unsigned long ki_nr_segs ;
   unsigned long ki_cur_seg ;
   struct list_head ki_list ;
   struct eventfd_ctx *ki_eventfd ;
};
#line 163 "include/linux/aio.h"
struct aio_ring_info {
   unsigned long mmap_base ;
   unsigned long mmap_size ;
   struct page **ring_pages ;
   spinlock_t ring_lock ;
   long nr_pages ;
   unsigned int nr ;
   unsigned int tail ;
   struct page *internal_pages[8U] ;
};
#line 179 "include/linux/aio.h"
struct kioctx {
   atomic_t users ;
   int dead ;
   struct mm_struct *mm ;
   unsigned long user_id ;
   struct hlist_node list ;
   wait_queue_head_t wait ;
   spinlock_t ctx_lock ;
   int reqs_active ;
   struct list_head active_reqs ;
   struct list_head run_list ;
   unsigned int max_reqs ;
   struct aio_ring_info ring_info ;
   struct delayed_work wq ;
   struct rcu_head rcu_head ;
};
#line 431 "include/linux/sched.h"
struct sighand_struct {
   atomic_t count ;
   struct k_sigaction action[64U] ;
   spinlock_t siglock ;
   wait_queue_head_t signalfd_wqh ;
};
#line 466 "include/linux/sched.h"
struct pacct_struct {
   int ac_flag ;
   long ac_exitcode ;
   unsigned long ac_mem ;
   cputime_t ac_utime ;
   cputime_t ac_stime ;
   unsigned long ac_minflt ;
   unsigned long ac_majflt ;
};
#line 474 "include/linux/sched.h"
struct task_cputime {
   cputime_t utime ;
   cputime_t stime ;
   unsigned long long sum_exec_runtime ;
};
#line 491 "include/linux/sched.h"
struct thread_group_cputimer {
   struct task_cputime cputime ;
   int running ;
   spinlock_t lock ;
};
#line 527
struct tty_struct;
#line 527
struct taskstats;
#line 527
struct tty_audit_buf;
#line 527 "include/linux/sched.h"
struct signal_struct {
   atomic_t count ;
   atomic_t live ;
   wait_queue_head_t wait_chldexit ;
   struct task_struct *curr_target ;
   struct sigpending shared_pending ;
   int group_exit_code ;
   int notify_count ;
   struct task_struct *group_exit_task ;
   int group_stop_count ;
   unsigned int flags ;
   struct list_head posix_timers ;
   struct hrtimer real_timer ;
   struct pid *leader_pid ;
   ktime_t it_real_incr ;
   cputime_t it_prof_expires ;
   cputime_t it_virt_expires ;
   cputime_t it_prof_incr ;
   cputime_t it_virt_incr ;
   struct thread_group_cputimer cputimer ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct pid *tty_old_pgrp ;
   int leader ;
   struct tty_struct *tty ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t cutime ;
   cputime_t cstime ;
   cputime_t gtime ;
   cputime_t cgtime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   unsigned long cnvcsw ;
   unsigned long cnivcsw ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   unsigned long cmin_flt ;
   unsigned long cmaj_flt ;
   unsigned long inblock ;
   unsigned long oublock ;
   unsigned long cinblock ;
   unsigned long coublock ;
   struct task_io_accounting ioac ;
   unsigned long long sum_sched_runtime ;
   struct rlimit rlim[16U] ;
   struct pacct_struct pacct ;
   struct taskstats *stats ;
   unsigned int audit_tty ;
   struct tty_audit_buf *tty_audit_buf ;
};
#line 663 "include/linux/sched.h"
struct user_struct {
   atomic_t __count ;
   atomic_t processes ;
   atomic_t files ;
   atomic_t sigpending ;
   atomic_t inotify_watches ;
   atomic_t inotify_devs ;
   atomic_t epoll_watches ;
   unsigned long mq_bytes ;
   unsigned long locked_shm ;
   struct key *uid_keyring ;
   struct key *session_keyring ;
   struct hlist_node uidhash_node ;
   uid_t uid ;
   struct user_namespace *user_ns ;
   struct task_group *tg ;
   struct kobject kobj ;
   struct delayed_work work ;
   atomic_long_t locked_vm ;
};
#line 713
struct reclaim_state;
#line 714 "include/linux/sched.h"
struct sched_info {
   unsigned long pcount ;
   unsigned long long run_delay ;
   unsigned long long last_arrival ;
   unsigned long long last_queued ;
   unsigned int bkl_count ;
};
#line 732 "include/linux/sched.h"
struct task_delay_info {
   spinlock_t lock ;
   unsigned int flags ;
   struct timespec blkio_start ;
   struct timespec blkio_end ;
   u64 blkio_delay ;
   u64 swapin_delay ;
   u32 blkio_count ;
   u32 swapin_count ;
   struct timespec freepages_start ;
   struct timespec freepages_end ;
   u64 freepages_delay ;
   u32 freepages_count ;
};
#line 774
enum cpu_idle_type {
    CPU_IDLE = 0,
    CPU_NOT_IDLE = 1,
    CPU_NEWLY_IDLE = 2,
    CPU_MAX_IDLE_TYPES = 3
} ;
#line 857 "include/linux/sched.h"
struct sched_group {
   struct sched_group *next ;
   unsigned int cpu_power ;
   unsigned long cpumask[0U] ;
};
#line 884
enum sched_domain_level {
    SD_LV_NONE = 0,
    SD_LV_SIBLING = 1,
    SD_LV_MC = 2,
    SD_LV_CPU = 3,
    SD_LV_NODE = 4,
    SD_LV_ALLNODES = 5,
    SD_LV_MAX = 6
} ;
#line 898 "include/linux/sched.h"
struct sched_domain {
   struct sched_domain *parent ;
   struct sched_domain *child ;
   struct sched_group *groups ;
   unsigned long min_interval ;
   unsigned long max_interval ;
   unsigned int busy_factor ;
   unsigned int imbalance_pct ;
   unsigned int cache_nice_tries ;
   unsigned int busy_idx ;
   unsigned int idle_idx ;
   unsigned int newidle_idx ;
   unsigned int wake_idx ;
   unsigned int forkexec_idx ;
   unsigned int smt_gain ;
   int flags ;
   enum sched_domain_level level ;
   unsigned long last_balance ;
   unsigned int balance_interval ;
   unsigned int nr_balance_failed ;
   u64 last_update ;
   unsigned int lb_count[3U] ;
   unsigned int lb_failed[3U] ;
   unsigned int lb_balanced[3U] ;
   unsigned int lb_imbalance[3U] ;
   unsigned int lb_gained[3U] ;
   unsigned int lb_hot_gained[3U] ;
   unsigned int lb_nobusyg[3U] ;
   unsigned int lb_nobusyq[3U] ;
   unsigned int alb_count ;
   unsigned int alb_failed ;
   unsigned int alb_pushed ;
   unsigned int sbe_count ;
   unsigned int sbe_balanced ;
   unsigned int sbe_pushed ;
   unsigned int sbf_count ;
   unsigned int sbf_balanced ;
   unsigned int sbf_pushed ;
   unsigned int ttwu_wake_remote ;
   unsigned int ttwu_move_affine ;
   unsigned int ttwu_move_balance ;
   char *name ;
   unsigned long span[0U] ;
};
#line 993
struct io_context;
#line 1014
struct audit_context;
#line 1016
struct rq;
#line 1017 "include/linux/sched.h"
struct sched_class {
   struct sched_class  const  *next ;
   void (*enqueue_task)(struct rq * , struct task_struct * , int  ) ;
   void (*dequeue_task)(struct rq * , struct task_struct * , int  ) ;
   void (*yield_task)(struct rq * ) ;
   void (*check_preempt_curr)(struct rq * , struct task_struct * , int  ) ;
   struct task_struct *(*pick_next_task)(struct rq * ) ;
   void (*put_prev_task)(struct rq * , struct task_struct * ) ;
   int (*select_task_rq)(struct task_struct * , int  ) ;
   unsigned long (*load_balance)(struct rq * , int  , struct rq * , unsigned long  ,
                                 struct sched_domain * , enum cpu_idle_type  , int * ,
                                 int * ) ;
   int (*move_one_task)(struct rq * , int  , struct rq * , struct sched_domain * ,
                        enum cpu_idle_type  ) ;
   void (*pre_schedule)(struct rq * , struct task_struct * ) ;
   void (*post_schedule)(struct rq * ) ;
   void (*task_wake_up)(struct rq * , struct task_struct * ) ;
   void (*set_cpus_allowed)(struct task_struct * , struct cpumask  const  * ) ;
   void (*rq_online)(struct rq * ) ;
   void (*rq_offline)(struct rq * ) ;
   void (*set_curr_task)(struct rq * ) ;
   void (*task_tick)(struct rq * , struct task_struct * , int  ) ;
   void (*task_new)(struct rq * , struct task_struct * ) ;
   void (*switched_from)(struct rq * , struct task_struct * , int  ) ;
   void (*switched_to)(struct rq * , struct task_struct * , int  ) ;
   void (*prio_changed)(struct rq * , struct task_struct * , int  , int  ) ;
   void (*moved_group)(struct task_struct * ) ;
};
#line 1070 "include/linux/sched.h"
struct load_weight {
   unsigned long weight ;
   unsigned long inv_weight ;
};
#line 1075 "include/linux/sched.h"
struct sched_entity {
   struct load_weight load ;
   struct rb_node run_node ;
   struct list_head group_node ;
   unsigned int on_rq ;
   u64 exec_start ;
   u64 sum_exec_runtime ;
   u64 vruntime ;
   u64 prev_sum_exec_runtime ;
   u64 last_wakeup ;
   u64 avg_overlap ;
   u64 nr_migrations ;
   u64 start_runtime ;
   u64 avg_wakeup ;
   u64 wait_start ;
   u64 wait_max ;
   u64 wait_count ;
   u64 wait_sum ;
   u64 iowait_count ;
   u64 iowait_sum ;
   u64 sleep_start ;
   u64 sleep_max ;
   s64 sum_sleep_runtime ;
   u64 block_start ;
   u64 block_max ;
   u64 exec_max ;
   u64 slice_max ;
   u64 nr_migrations_cold ;
   u64 nr_failed_migrations_affine ;
   u64 nr_failed_migrations_running ;
   u64 nr_failed_migrations_hot ;
   u64 nr_forced_migrations ;
   u64 nr_forced2_migrations ;
   u64 nr_wakeups ;
   u64 nr_wakeups_sync ;
   u64 nr_wakeups_migrate ;
   u64 nr_wakeups_local ;
   u64 nr_wakeups_remote ;
   u64 nr_wakeups_affine ;
   u64 nr_wakeups_affine_attempts ;
   u64 nr_wakeups_passive ;
   u64 nr_wakeups_idle ;
   struct sched_entity *parent ;
   struct cfs_rq *cfs_rq ;
   struct cfs_rq *my_q ;
};
#line 1147
struct rt_rq;
#line 1147 "include/linux/sched.h"
struct sched_rt_entity {
   struct list_head run_list ;
   unsigned long timeout ;
   unsigned int time_slice ;
   int nr_cpus_allowed ;
   struct sched_rt_entity *back ;
   struct sched_rt_entity *parent ;
   struct rt_rq *rt_rq ;
   struct rt_rq *my_q ;
};
#line 1164
struct linux_binfmt;
#line 1164
struct css_set;
#line 1164
struct compat_robust_list_head;
#line 1164 "include/linux/sched.h"
struct task_struct {
   long volatile   state ;
   void *stack ;
   atomic_t usage ;
   unsigned int flags ;
   unsigned int ptrace ;
   int lock_depth ;
   int prio ;
   int static_prio ;
   int normal_prio ;
   unsigned int rt_priority ;
   struct sched_class  const  *sched_class ;
   struct sched_entity se ;
   struct sched_rt_entity rt ;
   struct hlist_head preempt_notifiers ;
   unsigned char fpu_counter ;
   s8 oomkilladj ;
   unsigned int policy ;
   cpumask_t cpus_allowed ;
   struct sched_info sched_info ;
   struct list_head tasks ;
   struct plist_node pushable_tasks ;
   struct mm_struct *mm ;
   struct mm_struct *active_mm ;
   struct linux_binfmt *binfmt ;
   int exit_state ;
   int exit_code ;
   int exit_signal ;
   int pdeath_signal ;
   unsigned int personality ;
   unsigned char did_exec : 1 ;
   unsigned char in_execve : 1 ;
   unsigned char in_iowait : 1 ;
   unsigned char sched_reset_on_fork : 1 ;
   pid_t pid ;
   pid_t tgid ;
   unsigned long stack_canary ;
   struct task_struct *real_parent ;
   struct task_struct *parent ;
   struct list_head children ;
   struct list_head sibling ;
   struct task_struct *group_leader ;
   struct list_head ptraced ;
   struct list_head ptrace_entry ;
   struct bts_context *bts ;
   struct pid_link pids[3U] ;
   struct list_head thread_group ;
   struct completion *vfork_done ;
   int *set_child_tid ;
   int *clear_child_tid ;
   cputime_t utime ;
   cputime_t stime ;
   cputime_t utimescaled ;
   cputime_t stimescaled ;
   cputime_t gtime ;
   cputime_t prev_utime ;
   cputime_t prev_stime ;
   unsigned long nvcsw ;
   unsigned long nivcsw ;
   struct timespec start_time ;
   struct timespec real_start_time ;
   unsigned long min_flt ;
   unsigned long maj_flt ;
   struct task_cputime cputime_expires ;
   struct list_head cpu_timers[3U] ;
   struct cred  const  *real_cred ;
   struct cred  const  *cred ;
   struct mutex cred_guard_mutex ;
   struct cred *replacement_session_keyring ;
   char comm[16U] ;
   int link_count ;
   int total_link_count ;
   struct sysv_sem sysvsem ;
   unsigned long last_switch_count ;
   struct thread_struct thread ;
   struct fs_struct *fs ;
   struct files_struct *files ;
   struct nsproxy *nsproxy ;
   struct signal_struct *signal ;
   struct sighand_struct *sighand ;
   sigset_t blocked ;
   sigset_t real_blocked ;
   sigset_t saved_sigmask ;
   struct sigpending pending ;
   unsigned long sas_ss_sp ;
   size_t sas_ss_size ;
   int (*notifier)(void * ) ;
   void *notifier_data ;
   sigset_t *notifier_mask ;
   struct audit_context *audit_context ;
   uid_t loginuid ;
   unsigned int sessionid ;
   seccomp_t seccomp ;
   u32 parent_exec_id ;
   u32 self_exec_id ;
   spinlock_t alloc_lock ;
   struct irqaction *irqaction ;
   spinlock_t pi_lock ;
   struct plist_head pi_waiters ;
   struct rt_mutex_waiter *pi_blocked_on ;
   struct mutex_waiter *blocked_on ;
   unsigned int irq_events ;
   int hardirqs_enabled ;
   unsigned long hardirq_enable_ip ;
   unsigned int hardirq_enable_event ;
   unsigned long hardirq_disable_ip ;
   unsigned int hardirq_disable_event ;
   int softirqs_enabled ;
   unsigned long softirq_disable_ip ;
   unsigned int softirq_disable_event ;
   unsigned long softirq_enable_ip ;
   unsigned int softirq_enable_event ;
   int hardirq_context ;
   int softirq_context ;
   u64 curr_chain_key ;
   int lockdep_depth ;
   unsigned int lockdep_recursion ;
   struct held_lock held_locks[48U] ;
   gfp_t lockdep_reclaim_gfp ;
   void *journal_info ;
   struct bio *bio_list ;
   struct bio **bio_tail ;
   struct reclaim_state *reclaim_state ;
   struct backing_dev_info *backing_dev_info ;
   struct io_context *io_context ;
   unsigned long ptrace_message ;
   siginfo_t *last_siginfo ;
   struct task_io_accounting ioac ;
   u64 acct_rss_mem1 ;
   u64 acct_vm_mem1 ;
   cputime_t acct_timexpd ;
   nodemask_t mems_allowed ;
   int cpuset_mem_spread_rotor ;
   struct css_set *cgroups ;
   struct list_head cg_list ;
   struct robust_list_head *robust_list ;
   struct compat_robust_list_head *compat_robust_list ;
   struct list_head pi_state_list ;
   struct futex_pi_state *pi_state_cache ;
   struct perf_counter_context *perf_counter_ctxp ;
   struct mutex perf_counter_mutex ;
   struct list_head perf_counter_list ;
   struct mempolicy *mempolicy ;
   short il_next ;
   atomic_t fs_excl ;
   struct rcu_head rcu ;
   struct pipe_inode_info *splice_pipe ;
   struct task_delay_info *delays ;
   int make_it_fail ;
   struct prop_local_single dirties ;
   int latency_record_count ;
   struct latency_record latency_record[32U] ;
   unsigned long timer_slack_ns ;
   unsigned long default_timer_slack_ns ;
   struct list_head *scm_work_list ;
   unsigned long trace ;
   unsigned long trace_recursion ;
};
#line 82 "include/linux/interrupt.h"
struct irqaction {
   irqreturn_t (*handler)(int  , void * ) ;
   unsigned long flags ;
   cpumask_t mask ;
   char const   *name ;
   void *dev_id ;
   struct irqaction *next ;
   int irq ;
   struct proc_dir_entry *dir ;
   irqreturn_t (*thread_fn)(int  , void * ) ;
   struct task_struct *thread ;
   unsigned long thread_flags ;
};
#line 622
struct usb_device;
#line 623
struct usb_driver;
#line 624
struct wusb_dev;
#line 625
struct ep_device;
#line 626 "include/linux/interrupt.h"
struct usb_host_ss_ep_comp {
   struct usb_ss_ep_comp_descriptor desc ;
   unsigned char *extra ;
   int extralen ;
};
#line 60 "include/linux/usb.h"
struct usb_host_endpoint {
   struct usb_endpoint_descriptor desc ;
   struct list_head urb_list ;
   void *hcpriv ;
   struct ep_device *ep_dev ;
   struct usb_host_ss_ep_comp *ss_ep_comp ;
   unsigned char *extra ;
   int extralen ;
   int enabled ;
};
#line 87 "include/linux/usb.h"
struct usb_host_interface {
   struct usb_interface_descriptor desc ;
   struct usb_host_endpoint *endpoint ;
   char *string ;
   unsigned char *extra ;
   int extralen ;
};
#line 101
enum usb_interface_condition {
    USB_INTERFACE_UNBOUND = 0,
    USB_INTERFACE_BINDING = 1,
    USB_INTERFACE_BOUND = 2,
    USB_INTERFACE_UNBINDING = 3
} ;
#line 108 "include/linux/usb.h"
struct usb_interface {
   struct usb_host_interface *altsetting ;
   struct usb_host_interface *cur_altsetting ;
   unsigned int num_altsetting ;
   struct usb_interface_assoc_descriptor *intf_assoc ;
   int minor ;
   enum usb_interface_condition condition ;
   unsigned char is_active : 1 ;
   unsigned char sysfs_files_created : 1 ;
   unsigned char ep_devs_created : 1 ;
   unsigned char unregistering : 1 ;
   unsigned char needs_remote_wakeup : 1 ;
   unsigned char needs_altsetting0 : 1 ;
   unsigned char needs_binding : 1 ;
   unsigned char reset_running : 1 ;
   struct device dev ;
   struct device *usb_dev ;
   int pm_usage_cnt ;
   struct work_struct reset_ws ;
};
#line 217 "include/linux/usb.h"
struct usb_interface_cache {
   unsigned int num_altsetting ;
   struct kref ref ;
   struct usb_host_interface altsetting[0U] ;
};
#line 244 "include/linux/usb.h"
struct usb_host_config {
   struct usb_config_descriptor desc ;
   char *string ;
   struct usb_interface_assoc_descriptor *intf_assoc[16U] ;
   struct usb_interface *interface[32U] ;
   struct usb_interface_cache *intf_cache[32U] ;
   unsigned char *extra ;
   int extralen ;
};
#line 310 "include/linux/usb.h"
struct usb_devmap {
   unsigned long devicemap[2U] ;
};
#line 322
struct mon_bus;
#line 322 "include/linux/usb.h"
struct usb_bus {
   struct device *controller ;
   int busnum ;
   char const   *bus_name ;
   u8 uses_dma ;
   u8 otg_port ;
   unsigned char is_b_host : 1 ;
   unsigned char b_hnp_enable : 1 ;
   int devnum_next ;
   struct usb_devmap devmap ;
   struct usb_device *root_hub ;
   struct list_head bus_list ;
   int bandwidth_allocated ;
   int bandwidth_int_reqs ;
   int bandwidth_isoc_reqs ;
   struct dentry *usbfs_dentry ;
   struct mon_bus *mon_bus ;
   int monitored ;
};
#line 360
struct usb_tt;
#line 361 "include/linux/usb.h"
struct usb_device {
   int devnum ;
   char devpath[16U] ;
   u32 route ;
   enum usb_device_state state ;
   enum usb_device_speed speed ;
   struct usb_tt *tt ;
   int ttport ;
   unsigned int toggle[2U] ;
   struct usb_device *parent ;
   struct usb_bus *bus ;
   struct usb_host_endpoint ep0 ;
   struct device dev ;
   struct usb_device_descriptor descriptor ;
   struct usb_host_config *config ;
   struct usb_host_config *actconfig ;
   struct usb_host_endpoint *ep_in[16U] ;
   struct usb_host_endpoint *ep_out[16U] ;
   char **rawdescriptors ;
   unsigned short bus_mA ;
   u8 portnum ;
   u8 level ;
   unsigned char can_submit : 1 ;
   unsigned char discon_suspended : 1 ;
   unsigned char persist_enabled : 1 ;
   unsigned char have_langid : 1 ;
   unsigned char authorized : 1 ;
   unsigned char authenticated : 1 ;
   unsigned char wusb : 1 ;
   int string_langid ;
   char *product ;
   char *manufacturer ;
   char *serial ;
   struct list_head filelist ;
   struct device *usb_classdev ;
   struct dentry *usbfs_dentry ;
   int maxchild ;
   struct usb_device *children[31U] ;
   int pm_usage_cnt ;
   u32 quirks ;
   atomic_t urbnum ;
   unsigned long active_duration ;
   struct delayed_work autosuspend ;
   struct work_struct autoresume ;
   struct mutex pm_mutex ;
   unsigned long last_busy ;
   int autosuspend_delay ;
   unsigned long connect_time ;
   unsigned char auto_pm : 1 ;
   unsigned char do_remote_wakeup : 1 ;
   unsigned char reset_resume : 1 ;
   unsigned char autosuspend_disabled : 1 ;
   unsigned char autoresume_disabled : 1 ;
   unsigned char skip_sys_resume : 1 ;
   struct wusb_dev *wusb_dev ;
   int slot_id ;
};
#line 662 "include/linux/usb.h"
struct usb_dynids {
   spinlock_t lock ;
   struct list_head list ;
};
#line 792 "include/linux/usb.h"
struct usbdrv_wrap {
   struct device_driver driver ;
   int for_devices ;
};
#line 804 "include/linux/usb.h"
struct usb_driver {
   char const   *name ;
   int (*probe)(struct usb_interface * , struct usb_device_id  const  * ) ;
   void (*disconnect)(struct usb_interface * ) ;
   int (*ioctl)(struct usb_interface * , unsigned int  , void * ) ;
   int (*suspend)(struct usb_interface * , pm_message_t  ) ;
   int (*resume)(struct usb_interface * ) ;
   int (*reset_resume)(struct usb_interface * ) ;
   int (*pre_reset)(struct usb_interface * ) ;
   int (*post_reset)(struct usb_interface * ) ;
   struct usb_device_id  const  *id_table ;
   struct usb_dynids dynids ;
   struct usbdrv_wrap drvwrap ;
   unsigned char no_dynamic_id : 1 ;
   unsigned char supports_autosuspend : 1 ;
   unsigned char soft_unbind : 1 ;
};
#line 963 "include/linux/usb.h"
struct usb_iso_packet_descriptor {
   unsigned int offset ;
   unsigned int length ;
   unsigned int actual_length ;
   int status ;
};
#line 996
struct urb;
#line 997 "include/linux/usb.h"
struct usb_anchor {
   struct list_head urb_list ;
   wait_queue_head_t wait ;
   spinlock_t lock ;
   unsigned char poisoned : 1 ;
};
#line 1014
struct usb_sg_request;
#line 1014 "include/linux/usb.h"
struct urb {
   struct kref kref ;
   void *hcpriv ;
   atomic_t use_count ;
   atomic_t reject ;
   int unlinked ;
   struct list_head urb_list ;
   struct list_head anchor_list ;
   struct usb_anchor *anchor ;
   struct usb_device *dev ;
   struct usb_host_endpoint *ep ;
   unsigned int pipe ;
   int status ;
   unsigned int transfer_flags ;
   void *transfer_buffer ;
   dma_addr_t transfer_dma ;
   struct usb_sg_request *sg ;
   int num_sgs ;
   u32 transfer_buffer_length ;
   u32 actual_length ;
   unsigned char *setup_packet ;
   dma_addr_t setup_dma ;
   int start_frame ;
   int number_of_packets ;
   int interval ;
   int error_count ;
   void *context ;
   void (*complete)(struct urb * ) ;
   struct usb_iso_packet_descriptor iso_frame_desc[0U] ;
};
#line 1375
struct scatterlist;
#line 1422 "include/linux/usb.h"
struct usb_sg_request {
   int status ;
   size_t bytes ;
   spinlock_t lock ;
   struct usb_device *dev ;
   int pipe ;
   struct scatterlist *sg ;
   int nents ;
   int entries ;
   struct urb **urbs ;
   int count ;
   struct completion complete ;
};
#line 1591 "include/linux/usb.h"
struct firmware {
   size_t size ;
   u8 const   *data ;
};
#line 39 "include/linux/i2c.h"
struct i2c_msg;
#line 40
struct i2c_algorithm;
#line 41
struct i2c_adapter;
#line 44
union i2c_smbus_data;
#line 298 "include/linux/i2c.h"
struct i2c_algorithm {
   int (*master_xfer)(struct i2c_adapter * , struct i2c_msg * , int  ) ;
   int (*smbus_xfer)(struct i2c_adapter * , u16  , unsigned short  , char  , u8  ,
                     int  , union i2c_smbus_data * ) ;
   u32 (*functionality)(struct i2c_adapter * ) ;
};
#line 330 "include/linux/i2c.h"
struct i2c_adapter {
   struct module *owner ;
   unsigned int id ;
   unsigned int class ;
   struct i2c_algorithm  const  *algo ;
   void *algo_data ;
   u8 level ;
   struct mutex bus_lock ;
   int timeout ;
   int retries ;
   struct device dev ;
   int nr ;
   char name[48U] ;
   struct completion dev_released ;
};
#line 447 "include/linux/i2c.h"
struct i2c_msg {
   __u16 addr ;
   __u16 flags ;
   __u16 len ;
   __u8 *buf ;
};
#line 499 "include/linux/i2c.h"
union i2c_smbus_data {
   __u8 byte ;
   __u16 word ;
   __u8 block[34U] ;
};
#line 549
enum fe_type {
    FE_QPSK = 0,
    FE_QAM = 1,
    FE_OFDM = 2,
    FE_ATSC = 3
} ;
#line 36 "include/linux/dvb/frontend.h"
typedef enum fe_type fe_type_t;
#line 37
enum fe_caps {
    FE_IS_STUPID = 0,
    FE_CAN_INVERSION_AUTO = 1,
    FE_CAN_FEC_1_2 = 2,
    FE_CAN_FEC_2_3 = 4,
    FE_CAN_FEC_3_4 = 8,
    FE_CAN_FEC_4_5 = 16,
    FE_CAN_FEC_5_6 = 32,
    FE_CAN_FEC_6_7 = 64,
    FE_CAN_FEC_7_8 = 128,
    FE_CAN_FEC_8_9 = 256,
    FE_CAN_FEC_AUTO = 512,
    FE_CAN_QPSK = 1024,
    FE_CAN_QAM_16 = 2048,
    FE_CAN_QAM_32 = 4096,
    FE_CAN_QAM_64 = 8192,
    FE_CAN_QAM_128 = 16384,
    FE_CAN_QAM_256 = 32768,
    FE_CAN_QAM_AUTO = 65536,
    FE_CAN_TRANSMISSION_MODE_AUTO = 131072,
    FE_CAN_BANDWIDTH_AUTO = 262144,
    FE_CAN_GUARD_INTERVAL_AUTO = 524288,
    FE_CAN_HIERARCHY_AUTO = 1048576,
    FE_CAN_8VSB = 2097152,
    FE_CAN_16VSB = 4194304,
    FE_HAS_EXTENDED_CAPS = 8388608,
    FE_CAN_2G_MODULATION = 268435456,
    FE_NEEDS_BENDING = 536870912,
    FE_CAN_RECOVER = 1073741824,
    FE_CAN_MUTE_TS = 2147483648L
} ;
#line 69 "include/linux/dvb/frontend.h"
typedef enum fe_caps fe_caps_t;
#line 70 "include/linux/dvb/frontend.h"
struct dvb_frontend_info {
   char name[128U] ;
   fe_type_t type ;
   __u32 frequency_min ;
   __u32 frequency_max ;
   __u32 frequency_stepsize ;
   __u32 frequency_tolerance ;
   __u32 symbol_rate_min ;
   __u32 symbol_rate_max ;
   __u32 symbol_rate_tolerance ;
   __u32 notifier_delay ;
   fe_caps_t caps ;
};
#line 85 "include/linux/dvb/frontend.h"
struct dvb_diseqc_master_cmd {
   __u8 msg[6U] ;
   __u8 msg_len ;
};
#line 95 "include/linux/dvb/frontend.h"
struct dvb_diseqc_slave_reply {
   __u8 msg[4U] ;
   __u8 msg_len ;
   int timeout ;
};
#line 102
enum fe_sec_voltage {
    SEC_VOLTAGE_13 = 0,
    SEC_VOLTAGE_18 = 1,
    SEC_VOLTAGE_OFF = 2
} ;
#line 108 "include/linux/dvb/frontend.h"
typedef enum fe_sec_voltage fe_sec_voltage_t;
#line 109
enum fe_sec_tone_mode {
    SEC_TONE_ON = 0,
    SEC_TONE_OFF = 1
} ;
#line 114 "include/linux/dvb/frontend.h"
typedef enum fe_sec_tone_mode fe_sec_tone_mode_t;
#line 115
enum fe_sec_mini_cmd {
    SEC_MINI_A = 0,
    SEC_MINI_B = 1
} ;
#line 120 "include/linux/dvb/frontend.h"
typedef enum fe_sec_mini_cmd fe_sec_mini_cmd_t;
#line 121
enum fe_status {
    FE_HAS_SIGNAL = 1,
    FE_HAS_CARRIER = 2,
    FE_HAS_VITERBI = 4,
    FE_HAS_SYNC = 8,
    FE_HAS_LOCK = 16,
    FE_TIMEDOUT = 32,
    FE_REINIT = 64
} ;
#line 131 "include/linux/dvb/frontend.h"
typedef enum fe_status fe_status_t;
#line 132
enum fe_spectral_inversion {
    INVERSION_OFF = 0,
    INVERSION_ON = 1,
    INVERSION_AUTO = 2
} ;
#line 138 "include/linux/dvb/frontend.h"
typedef enum fe_spectral_inversion fe_spectral_inversion_t;
#line 139
enum fe_code_rate {
    FEC_NONE = 0,
    FEC_1_2 = 1,
    FEC_2_3 = 2,
    FEC_3_4 = 3,
    FEC_4_5 = 4,
    FEC_5_6 = 5,
    FEC_6_7 = 6,
    FEC_7_8 = 7,
    FEC_8_9 = 8,
    FEC_AUTO = 9,
    FEC_3_5 = 10,
    FEC_9_10 = 11
} ;
#line 154 "include/linux/dvb/frontend.h"
typedef enum fe_code_rate fe_code_rate_t;
#line 155
enum fe_modulation {
    QPSK = 0,
    QAM_16 = 1,
    QAM_32 = 2,
    QAM_64 = 3,
    QAM_128 = 4,
    QAM_256 = 5,
    QAM_AUTO = 6,
    VSB_8 = 7,
    VSB_16 = 8,
    PSK_8 = 9,
    APSK_16 = 10,
    APSK_32 = 11,
    DQPSK = 12
} ;
#line 171 "include/linux/dvb/frontend.h"
typedef enum fe_modulation fe_modulation_t;
#line 172
enum fe_transmit_mode {
    TRANSMISSION_MODE_2K = 0,
    TRANSMISSION_MODE_8K = 1,
    TRANSMISSION_MODE_AUTO = 2
} ;
#line 177 "include/linux/dvb/frontend.h"
typedef enum fe_transmit_mode fe_transmit_mode_t;
#line 178
enum fe_bandwidth {
    BANDWIDTH_8_MHZ = 0,
    BANDWIDTH_7_MHZ = 1,
    BANDWIDTH_6_MHZ = 2,
    BANDWIDTH_AUTO = 3
} ;
#line 184 "include/linux/dvb/frontend.h"
typedef enum fe_bandwidth fe_bandwidth_t;
#line 185
enum fe_guard_interval {
    GUARD_INTERVAL_1_32 = 0,
    GUARD_INTERVAL_1_16 = 1,
    GUARD_INTERVAL_1_8 = 2,
    GUARD_INTERVAL_1_4 = 3,
    GUARD_INTERVAL_AUTO = 4
} ;
#line 193 "include/linux/dvb/frontend.h"
typedef enum fe_guard_interval fe_guard_interval_t;
#line 194
enum fe_hierarchy {
    HIERARCHY_NONE = 0,
    HIERARCHY_1 = 1,
    HIERARCHY_2 = 2,
    HIERARCHY_4 = 3,
    HIERARCHY_AUTO = 4
} ;
#line 202 "include/linux/dvb/frontend.h"
typedef enum fe_hierarchy fe_hierarchy_t;
#line 203 "include/linux/dvb/frontend.h"
struct dvb_qpsk_parameters {
   __u32 symbol_rate ;
   fe_code_rate_t fec_inner ;
};
#line 209 "include/linux/dvb/frontend.h"
struct dvb_qam_parameters {
   __u32 symbol_rate ;
   fe_code_rate_t fec_inner ;
   fe_modulation_t modulation ;
};
#line 215 "include/linux/dvb/frontend.h"
struct dvb_vsb_parameters {
   fe_modulation_t modulation ;
};
#line 219 "include/linux/dvb/frontend.h"
struct dvb_ofdm_parameters {
   fe_bandwidth_t bandwidth ;
   fe_code_rate_t code_rate_HP ;
   fe_code_rate_t code_rate_LP ;
   fe_modulation_t constellation ;
   fe_transmit_mode_t transmission_mode ;
   fe_guard_interval_t guard_interval ;
   fe_hierarchy_t hierarchy_information ;
};
#line 229 "include/linux/dvb/frontend.h"
union __anonunion_u_126 {
   struct dvb_qpsk_parameters qpsk ;
   struct dvb_qam_parameters qam ;
   struct dvb_ofdm_parameters ofdm ;
   struct dvb_vsb_parameters vsb ;
};
#line 229 "include/linux/dvb/frontend.h"
struct dvb_frontend_parameters {
   __u32 frequency ;
   fe_spectral_inversion_t inversion ;
   union __anonunion_u_126 u ;
};
#line 248
enum fe_pilot {
    PILOT_ON = 0,
    PILOT_OFF = 1,
    PILOT_AUTO = 2
} ;
#line 285 "include/linux/dvb/frontend.h"
typedef enum fe_pilot fe_pilot_t;
#line 286
enum fe_rolloff {
    ROLLOFF_35 = 0,
    ROLLOFF_20 = 1,
    ROLLOFF_25 = 2,
    ROLLOFF_AUTO = 3
} ;
#line 292 "include/linux/dvb/frontend.h"
typedef enum fe_rolloff fe_rolloff_t;
#line 293
enum fe_delivery_system {
    SYS_UNDEFINED = 0,
    SYS_DVBC_ANNEX_AC = 1,
    SYS_DVBC_ANNEX_B = 2,
    SYS_DVBT = 3,
    SYS_DSS = 4,
    SYS_DVBS = 5,
    SYS_DVBS2 = 6,
    SYS_DVBH = 7,
    SYS_ISDBT = 8,
    SYS_ISDBS = 9,
    SYS_ISDBC = 10,
    SYS_ATSC = 11,
    SYS_ATSCMH = 12,
    SYS_DMBTH = 13,
    SYS_CMMB = 14,
    SYS_DAB = 15
} ;
#line 311 "include/linux/dvb/frontend.h"
typedef enum fe_delivery_system fe_delivery_system_t;
#line 323 "include/linux/dvb/frontend.h"
struct __anonstruct_buffer_128 {
   __u8 data[32U] ;
   __u32 len ;
   __u32 reserved1[3U] ;
   void *reserved2 ;
};
#line 323 "include/linux/dvb/frontend.h"
union __anonunion_u_127 {
   __u32 data ;
   struct __anonstruct_buffer_128 buffer ;
};
#line 323 "include/linux/dvb/frontend.h"
struct dtv_property {
   __u32 cmd ;
   __u32 reserved[3U] ;
   union __anonunion_u_127 u ;
   int result ;
};
#line 346 "include/linux/dvb/frontend.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 36 "include/asm-generic/poll.h"
struct exception_table_entry {
   unsigned long insn ;
   unsigned long fixup ;
};
#line 32 "include/linux/poll.h"
struct poll_table_struct {
   void (*qproc)(struct file * , wait_queue_head_t * , struct poll_table_struct * ) ;
   unsigned long key ;
};
#line 136
struct dvb_device;
#line 136 "include/linux/poll.h"
struct dvb_adapter {
   int num ;
   struct list_head list_head ;
   struct list_head device_list ;
   char const   *name ;
   u8 proposed_mac[6U] ;
   void *priv ;
   struct device *device ;
   struct module *module ;
   int mfe_shared ;
   struct dvb_device *mfe_dvbdev ;
   struct mutex mfe_lock ;
};
#line 69 "drivers/media/dvb/dvb-core/dvbdev.h"
struct dvb_device {
   struct list_head list_head ;
   struct file_operations  const  *fops ;
   struct dvb_adapter *adapter ;
   int type ;
   int minor ;
   u32 id ;
   int readers ;
   int writers ;
   int users ;
   wait_queue_head_t wait_queue ;
   int (*kernel_ioctl)(struct inode * , struct file * , unsigned int  , void * ) ;
   void *priv ;
};
#line 117 "drivers/media/dvb/dvb-core/dvbdev.h"
struct dvb_frontend_tune_settings {
   int min_delay_ms ;
   int step_size ;
   int max_drift ;
   struct dvb_frontend_parameters parameters ;
};
#line 50 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_frontend;
#line 51 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_tuner_info {
   char name[128U] ;
   u32 frequency_min ;
   u32 frequency_max ;
   u32 frequency_step ;
   u32 bandwidth_min ;
   u32 bandwidth_max ;
   u32 bandwidth_step ;
};
#line 64 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct analog_parameters {
   unsigned int frequency ;
   unsigned int mode ;
   unsigned int audmode ;
   u64 std ;
};
#line 107
enum tuner_param {
    DVBFE_TUNER_FREQUENCY = 1,
    DVBFE_TUNER_TUNERSTEP = 2,
    DVBFE_TUNER_IFFREQ = 4,
    DVBFE_TUNER_BANDWIDTH = 8,
    DVBFE_TUNER_REFCLOCK = 16,
    DVBFE_TUNER_IQSENSE = 32,
    DVBFE_TUNER_DUMMY = (-0x7FFFFFFF-1)
} ;
#line 117
enum dvbfe_algo {
    DVBFE_ALGO_HW = 1,
    DVBFE_ALGO_SW = 2,
    DVBFE_ALGO_CUSTOM = 4,
    DVBFE_ALGO_RECOVERY = (-0x7FFFFFFF-1)
} ;
#line 124 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct tuner_state {
   u32 frequency ;
   u32 tunerstep ;
   u32 ifreq ;
   u32 bandwidth ;
   u32 iqsense ;
   u32 refclock ;
};
#line 158
enum dvbfe_search {
    DVBFE_ALGO_SEARCH_SUCCESS = 1,
    DVBFE_ALGO_SEARCH_ASLEEP = 2,
    DVBFE_ALGO_SEARCH_FAILED = 4,
    DVBFE_ALGO_SEARCH_INVALID = 8,
    DVBFE_ALGO_SEARCH_AGAIN = 16,
    DVBFE_ALGO_SEARCH_ERROR = (-0x7FFFFFFF-1)
} ;
#line 167 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_tuner_ops {
   struct dvb_tuner_info info ;
   int (*release)(struct dvb_frontend * ) ;
   int (*init)(struct dvb_frontend * ) ;
   int (*sleep)(struct dvb_frontend * ) ;
   int (*set_params)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   int (*set_analog_params)(struct dvb_frontend * , struct analog_parameters * ) ;
   int (*calc_regs)(struct dvb_frontend * , struct dvb_frontend_parameters * , u8 * ,
                    int  ) ;
   int (*set_config)(struct dvb_frontend * , void * ) ;
   int (*get_frequency)(struct dvb_frontend * , u32 * ) ;
   int (*get_bandwidth)(struct dvb_frontend * , u32 * ) ;
   int (*get_status)(struct dvb_frontend * , u32 * ) ;
   int (*get_rf_strength)(struct dvb_frontend * , u16 * ) ;
   int (*set_frequency)(struct dvb_frontend * , u32  ) ;
   int (*set_bandwidth)(struct dvb_frontend * , u32  ) ;
   int (*set_state)(struct dvb_frontend * , enum tuner_param  , struct tuner_state * ) ;
   int (*get_state)(struct dvb_frontend * , enum tuner_param  , struct tuner_state * ) ;
};
#line 229 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct analog_demod_info {
   char *name ;
};
#line 233 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct analog_demod_ops {
   struct analog_demod_info info ;
   void (*set_params)(struct dvb_frontend * , struct analog_parameters * ) ;
   int (*has_signal)(struct dvb_frontend * ) ;
   int (*is_stereo)(struct dvb_frontend * ) ;
   int (*get_afc)(struct dvb_frontend * ) ;
   void (*tuner_status)(struct dvb_frontend * ) ;
   void (*standby)(struct dvb_frontend * ) ;
   void (*release)(struct dvb_frontend * ) ;
   int (*i2c_gate_ctrl)(struct dvb_frontend * , int  ) ;
   int (*set_config)(struct dvb_frontend * , void * ) ;
};
#line 251 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_frontend_ops {
   struct dvb_frontend_info info ;
   void (*release)(struct dvb_frontend * ) ;
   void (*release_sec)(struct dvb_frontend * ) ;
   int (*init)(struct dvb_frontend * ) ;
   int (*sleep)(struct dvb_frontend * ) ;
   int (*write)(struct dvb_frontend * , u8 * , int  ) ;
   int (*tune)(struct dvb_frontend * , struct dvb_frontend_parameters * , unsigned int  ,
               unsigned int * , fe_status_t * ) ;
   enum dvbfe_algo (*get_frontend_algo)(struct dvb_frontend * ) ;
   int (*set_frontend)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   int (*get_tune_settings)(struct dvb_frontend * , struct dvb_frontend_tune_settings * ) ;
   int (*get_frontend)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   int (*read_status)(struct dvb_frontend * , fe_status_t * ) ;
   int (*read_ber)(struct dvb_frontend * , u32 * ) ;
   int (*read_signal_strength)(struct dvb_frontend * , u16 * ) ;
   int (*read_snr)(struct dvb_frontend * , u16 * ) ;
   int (*read_ucblocks)(struct dvb_frontend * , u32 * ) ;
   int (*diseqc_reset_overload)(struct dvb_frontend * ) ;
   int (*diseqc_send_master_cmd)(struct dvb_frontend * , struct dvb_diseqc_master_cmd * ) ;
   int (*diseqc_recv_slave_reply)(struct dvb_frontend * , struct dvb_diseqc_slave_reply * ) ;
   int (*diseqc_send_burst)(struct dvb_frontend * , fe_sec_mini_cmd_t  ) ;
   int (*set_tone)(struct dvb_frontend * , fe_sec_tone_mode_t  ) ;
   int (*set_voltage)(struct dvb_frontend * , fe_sec_voltage_t  ) ;
   int (*enable_high_lnb_voltage)(struct dvb_frontend * , long  ) ;
   int (*dishnetwork_send_legacy_command)(struct dvb_frontend * , unsigned long  ) ;
   int (*i2c_gate_ctrl)(struct dvb_frontend * , int  ) ;
   int (*ts_bus_ctrl)(struct dvb_frontend * , int  ) ;
   enum dvbfe_search (*search)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   int (*track)(struct dvb_frontend * , struct dvb_frontend_parameters * ) ;
   struct dvb_tuner_ops tuner_ops ;
   struct analog_demod_ops analog_ops ;
   int (*set_property)(struct dvb_frontend * , struct dtv_property * ) ;
   int (*get_property)(struct dvb_frontend * , struct dtv_property * ) ;
};
#line 319 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dtv_frontend_properties {
   u32 state ;
   u32 frequency ;
   fe_modulation_t modulation ;
   fe_sec_voltage_t voltage ;
   fe_sec_tone_mode_t sectone ;
   fe_spectral_inversion_t inversion ;
   fe_code_rate_t fec_inner ;
   fe_transmit_mode_t transmission_mode ;
   u32 bandwidth_hz ;
   fe_guard_interval_t guard_interval ;
   fe_hierarchy_t hierarchy ;
   u32 symbol_rate ;
   fe_code_rate_t code_rate_HP ;
   fe_code_rate_t code_rate_LP ;
   fe_pilot_t pilot ;
   fe_rolloff_t rolloff ;
   fe_delivery_system_t delivery_system ;
};
#line 345 "drivers/media/dvb/dvb-core/dvb_frontend.h"
struct dvb_frontend {
   struct dvb_frontend_ops ops ;
   struct dvb_adapter *dvb ;
   void *demodulator_priv ;
   void *tuner_priv ;
   void *frontend_priv ;
   void *sec_priv ;
   void *analog_demod_priv ;
   struct dtv_frontend_properties dtv_property_cache ;
   int (*callback)(void * , int  , int  , int  ) ;
   int id ;
};
#line 371
enum ldv_16518 {
    DMX_OUT_DECODER = 0,
    DMX_OUT_TAP = 1,
    DMX_OUT_TS_TAP = 2,
    DMX_OUT_TSDEMUX_TAP = 3
} ;
#line 46 "include/linux/dvb/dmx.h"
typedef enum ldv_16518 dmx_output_t;
#line 47
enum ldv_16520 {
    DMX_IN_FRONTEND = 0,
    DMX_IN_DVR = 1
} ;
#line 53 "include/linux/dvb/dmx.h"
typedef enum ldv_16520 dmx_input_t;
#line 54
enum ldv_16522 {
    DMX_PES_AUDIO0 = 0,
    DMX_PES_VIDEO0 = 1,
    DMX_PES_TELETEXT0 = 2,
    DMX_PES_SUBTITLE0 = 3,
    DMX_PES_PCR0 = 4,
    DMX_PES_AUDIO1 = 5,
    DMX_PES_VIDEO1 = 6,
    DMX_PES_TELETEXT1 = 7,
    DMX_PES_SUBTITLE1 = 8,
    DMX_PES_PCR1 = 9,
    DMX_PES_AUDIO2 = 10,
    DMX_PES_VIDEO2 = 11,
    DMX_PES_TELETEXT2 = 12,
    DMX_PES_SUBTITLE2 = 13,
    DMX_PES_PCR2 = 14,
    DMX_PES_AUDIO3 = 15,
    DMX_PES_VIDEO3 = 16,
    DMX_PES_TELETEXT3 = 17,
    DMX_PES_SUBTITLE3 = 18,
    DMX_PES_PCR3 = 19,
    DMX_PES_OTHER = 20
} ;
#line 83 "include/linux/dvb/dmx.h"
typedef enum ldv_16522 dmx_pes_type_t;
#line 84 "include/linux/dvb/dmx.h"
struct dmx_filter {
   __u8 filter[16U] ;
   __u8 mask[16U] ;
   __u8 mode[16U] ;
};
#line 97 "include/linux/dvb/dmx.h"
typedef struct dmx_filter dmx_filter_t;
#line 98 "include/linux/dvb/dmx.h"
struct dmx_sct_filter_params {
   __u16 pid ;
   dmx_filter_t filter ;
   __u32 timeout ;
   __u32 flags ;
};
#line 107 "include/linux/dvb/dmx.h"
struct dmx_pes_filter_params {
   __u16 pid ;
   dmx_input_t input ;
   dmx_output_t output ;
   dmx_pes_type_t pes_type ;
   __u32 flags ;
};
#line 121 "include/linux/dvb/dmx.h"
struct dmx_caps {
   __u32 caps ;
   int num_decoders ;
};
#line 126
enum ldv_16536 {
    DMX_SOURCE_FRONT0 = 0,
    DMX_SOURCE_FRONT1 = 1,
    DMX_SOURCE_FRONT2 = 2,
    DMX_SOURCE_FRONT3 = 3,
    DMX_SOURCE_DVR0 = 16,
    DMX_SOURCE_DVR1 = 17,
    DMX_SOURCE_DVR2 = 18,
    DMX_SOURCE_DVR3 = 19
} ;
#line 136 "include/linux/dvb/dmx.h"
typedef enum ldv_16536 dmx_source_t;
#line 143
enum dmx_success {
    DMX_OK = 0,
    DMX_LENGTH_ERROR = 1,
    DMX_OVERRUN_ERROR = 2,
    DMX_CRC_ERROR = 3,
    DMX_FRAME_ERROR = 4,
    DMX_FIFO_ERROR = 5,
    DMX_MISSED_ERROR = 6
} ;
#line 153
enum dmx_ts_pes {
    DMX_TS_PES_AUDIO0 = 0,
    DMX_TS_PES_VIDEO0 = 1,
    DMX_TS_PES_TELETEXT0 = 2,
    DMX_TS_PES_SUBTITLE0 = 3,
    DMX_TS_PES_PCR0 = 4,
    DMX_TS_PES_AUDIO1 = 5,
    DMX_TS_PES_VIDEO1 = 6,
    DMX_TS_PES_TELETEXT1 = 7,
    DMX_TS_PES_SUBTITLE1 = 8,
    DMX_TS_PES_PCR1 = 9,
    DMX_TS_PES_AUDIO2 = 10,
    DMX_TS_PES_VIDEO2 = 11,
    DMX_TS_PES_TELETEXT2 = 12,
    DMX_TS_PES_SUBTITLE2 = 13,
    DMX_TS_PES_PCR2 = 14,
    DMX_TS_PES_AUDIO3 = 15,
    DMX_TS_PES_VIDEO3 = 16,
    DMX_TS_PES_TELETEXT3 = 17,
    DMX_TS_PES_SUBTITLE3 = 18,
    DMX_TS_PES_PCR3 = 19,
    DMX_TS_PES_OTHER = 20
} ;
#line 177
struct dmx_demux;
#line 177 "include/linux/dvb/dmx.h"
struct dmx_ts_feed {
   int is_filtering ;
   struct dmx_demux *parent ;
   void *priv ;
   int (*set)(struct dmx_ts_feed * , u16  , int  , enum dmx_ts_pes  , size_t  , struct timespec  ) ;
   int (*start_filtering)(struct dmx_ts_feed * ) ;
   int (*stop_filtering)(struct dmx_ts_feed * ) ;
};
#line 138 "drivers/media/dvb/dvb-core/demux.h"
struct dmx_section_feed;
#line 138 "drivers/media/dvb/dvb-core/demux.h"
struct dmx_section_filter {
   u8 filter_value[18U] ;
   u8 filter_mask[18U] ;
   u8 filter_mode[18U] ;
   struct dmx_section_feed *parent ;
   void *priv ;
};
#line 150 "drivers/media/dvb/dvb-core/demux.h"
struct dmx_section_feed {
   int is_filtering ;
   struct dmx_demux *parent ;
   void *priv ;
   int check_crc ;
   u32 crc_val ;
   u8 *secbuf ;
   u8 secbuf_base[4284U] ;
   u16 secbufp ;
   u16 seclen ;
   u16 tsfeedp ;
   int (*set)(struct dmx_section_feed * , u16  , size_t  , int  ) ;
   int (*allocate_filter)(struct dmx_section_feed * , struct dmx_section_filter ** ) ;
   int (*release_filter)(struct dmx_section_feed * , struct dmx_section_filter * ) ;
   int (*start_filtering)(struct dmx_section_feed * ) ;
   int (*stop_filtering)(struct dmx_section_feed * ) ;
};
#line 187
enum dmx_frontend_source {
    DMX_MEMORY_FE = 0,
    DMX_FRONTEND_0 = 1,
    DMX_FRONTEND_1 = 2,
    DMX_FRONTEND_2 = 3,
    DMX_FRONTEND_3 = 4,
    DMX_STREAM_0 = 5,
    DMX_STREAM_1 = 6,
    DMX_STREAM_2 = 7,
    DMX_STREAM_3 = 8
} ;
#line 199 "drivers/media/dvb/dvb-core/demux.h"
struct dmx_frontend {
   struct list_head connectivity_list ;
   enum dmx_frontend_source source ;
};
#line 215 "drivers/media/dvb/dvb-core/demux.h"
struct dmx_demux {
   u32 capabilities ;
   struct dmx_frontend *frontend ;
   void *priv ;
   int (*open)(struct dmx_demux * ) ;
   int (*close)(struct dmx_demux * ) ;
   int (*write)(struct dmx_demux * , char const   * , size_t  ) ;
   int (*allocate_ts_feed)(struct dmx_demux * , struct dmx_ts_feed ** , int (*)(u8 const   * ,
                                                                                size_t  ,
                                                                                u8 const   * ,
                                                                                size_t  ,
                                                                                struct dmx_ts_feed * ,
                                                                                enum dmx_success  ) ) ;
   int (*release_ts_feed)(struct dmx_demux * , struct dmx_ts_feed * ) ;
   int (*allocate_section_feed)(struct dmx_demux * , struct dmx_section_feed ** ,
                                int (*)(u8 const   * , size_t  , u8 const   * , size_t  ,
                                        struct dmx_section_filter * , enum dmx_success  ) ) ;
   int (*release_section_feed)(struct dmx_demux * , struct dmx_section_feed * ) ;
   int (*add_frontend)(struct dmx_demux * , struct dmx_frontend * ) ;
   int (*remove_frontend)(struct dmx_demux * , struct dmx_frontend * ) ;
   struct list_head *(*get_frontends)(struct dmx_demux * ) ;
   int (*connect_frontend)(struct dmx_demux * , struct dmx_frontend * ) ;
   int (*disconnect_frontend)(struct dmx_demux * ) ;
   int (*get_pes_pids)(struct dmx_demux * , u16 * ) ;
   int (*get_caps)(struct dmx_demux * , struct dmx_caps * ) ;
   int (*set_source)(struct dmx_demux * , dmx_source_t const   * ) ;
   int (*get_stc)(struct dmx_demux * , unsigned int  , u64 * , unsigned int * ) ;
};
#line 278
struct dvb_demux_feed;
#line 278 "drivers/media/dvb/dvb-core/demux.h"
struct dvb_demux_filter {
   struct dmx_section_filter filter ;
   u8 maskandmode[18U] ;
   u8 maskandnotmode[18U] ;
   int doneq ;
   struct dvb_demux_filter *next ;
   struct dvb_demux_feed *feed ;
   int index ;
   int state ;
   int type ;
   u16 hw_handle ;
   struct timer_list timer ;
};
#line 62 "drivers/media/dvb/dvb-core/dvb_demux.h"
union __anonunion_feed_130 {
   struct dmx_ts_feed ts ;
   struct dmx_section_feed sec ;
};
#line 62 "drivers/media/dvb/dvb-core/dvb_demux.h"
union __anonunion_cb_131 {
   int (*ts)(u8 const   * , size_t  , u8 const   * , size_t  , struct dmx_ts_feed * ,
             enum dmx_success  ) ;
   int (*sec)(u8 const   * , size_t  , u8 const   * , size_t  , struct dmx_section_filter * ,
              enum dmx_success  ) ;
};
#line 62
struct dvb_demux;
#line 62 "drivers/media/dvb/dvb-core/dvb_demux.h"
struct dvb_demux_feed {
   union __anonunion_feed_130 feed ;
   union __anonunion_cb_131 cb ;
   struct dvb_demux *demux ;
   void *priv ;
   int type ;
   int state ;
   u16 pid ;
   u8 *buffer ;
   int buffer_size ;
   struct timespec timeout ;
   struct dvb_demux_filter *filter ;
   int ts_type ;
   enum dmx_ts_pes pes_type ;
   int cc ;
   int pusi_seen ;
   u16 peslen ;
   struct list_head list_head ;
   unsigned int index ;
};
#line 98 "drivers/media/dvb/dvb-core/dvb_demux.h"
struct dvb_demux {
   struct dmx_demux dmx ;
   void *priv ;
   int filternum ;
   int feednum ;
   int (*start_feed)(struct dvb_demux_feed * ) ;
   int (*stop_feed)(struct dvb_demux_feed * ) ;
   int (*write_to_decoder)(struct dvb_demux_feed * , u8 const   * , size_t  ) ;
   u32 (*check_crc32)(struct dvb_demux_feed * , u8 const   * , size_t  ) ;
   void (*memcopy)(struct dvb_demux_feed * , u8 * , u8 const   * , size_t  ) ;
   int users ;
   struct dvb_demux_filter *filter ;
   struct dvb_demux_feed *feed ;
   struct list_head frontend_list ;
   struct dvb_demux_feed *pesfilter[20U] ;
   u16 pids[20U] ;
   int playing ;
   int recording ;
   struct list_head feed_list ;
   u8 tsbuf[204U] ;
   int tsbufp ;
   struct mutex mutex ;
   spinlock_t lock ;
   uint8_t *cnt_storage ;
};
#line 34 "include/linux/socket.h"
typedef unsigned short sa_family_t;
#line 35 "include/linux/socket.h"
struct sockaddr {
   sa_family_t sa_family ;
   char sa_data[14U] ;
};
#line 41 "include/linux/hdlc/ioctl.h"
struct __anonstruct_sync_serial_settings_132 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
};
#line 41 "include/linux/hdlc/ioctl.h"
typedef struct __anonstruct_sync_serial_settings_132 sync_serial_settings;
#line 48 "include/linux/hdlc/ioctl.h"
struct __anonstruct_te1_settings_133 {
   unsigned int clock_rate ;
   unsigned int clock_type ;
   unsigned short loopback ;
   unsigned int slot_map ;
};
#line 48 "include/linux/hdlc/ioctl.h"
typedef struct __anonstruct_te1_settings_133 te1_settings;
#line 53 "include/linux/hdlc/ioctl.h"
struct __anonstruct_raw_hdlc_proto_134 {
   unsigned short encoding ;
   unsigned short parity ;
};
#line 53 "include/linux/hdlc/ioctl.h"
typedef struct __anonstruct_raw_hdlc_proto_134 raw_hdlc_proto;
#line 63 "include/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_135 {
   unsigned int t391 ;
   unsigned int t392 ;
   unsigned int n391 ;
   unsigned int n392 ;
   unsigned int n393 ;
   unsigned short lmi ;
   unsigned short dce ;
};
#line 63 "include/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_135 fr_proto;
#line 67 "include/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_136 {
   unsigned int dlci ;
};
#line 67 "include/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_136 fr_proto_pvc;
#line 72 "include/linux/hdlc/ioctl.h"
struct __anonstruct_fr_proto_pvc_info_137 {
   unsigned int dlci ;
   char master[16U] ;
};
#line 72 "include/linux/hdlc/ioctl.h"
typedef struct __anonstruct_fr_proto_pvc_info_137 fr_proto_pvc_info;
#line 77 "include/linux/hdlc/ioctl.h"
struct __anonstruct_cisco_proto_138 {
   unsigned int interval ;
   unsigned int timeout ;
};
#line 77 "include/linux/hdlc/ioctl.h"
typedef struct __anonstruct_cisco_proto_138 cisco_proto;
#line 93 "include/linux/hdlc/ioctl.h"
struct ifmap {
   unsigned long mem_start ;
   unsigned long mem_end ;
   unsigned short base_addr ;
   unsigned char irq ;
   unsigned char dma ;
   unsigned char port ;
};
#line 137 "include/linux/if.h"
union __anonunion_ifs_ifsu_139 {
   raw_hdlc_proto *raw_hdlc ;
   cisco_proto *cisco ;
   fr_proto *fr ;
   fr_proto_pvc *fr_pvc ;
   fr_proto_pvc_info *fr_pvc_info ;
   sync_serial_settings *sync ;
   te1_settings *te1 ;
};
#line 137 "include/linux/if.h"
struct if_settings {
   unsigned int type ;
   unsigned int size ;
   union __anonunion_ifs_ifsu_139 ifs_ifsu ;
};
#line 156 "include/linux/if.h"
union __anonunion_ifr_ifrn_140 {
   char ifrn_name[16U] ;
};
#line 156 "include/linux/if.h"
union __anonunion_ifr_ifru_141 {
   struct sockaddr ifru_addr ;
   struct sockaddr ifru_dstaddr ;
   struct sockaddr ifru_broadaddr ;
   struct sockaddr ifru_netmask ;
   struct sockaddr ifru_hwaddr ;
   short ifru_flags ;
   int ifru_ivalue ;
   int ifru_mtu ;
   struct ifmap ifru_map ;
   char ifru_slave[16U] ;
   char ifru_newname[16U] ;
   void *ifru_data ;
   struct if_settings ifru_settings ;
};
#line 156 "include/linux/if.h"
struct ifreq {
   union __anonunion_ifr_ifrn_140 ifr_ifrn ;
   union __anonunion_ifr_ifru_141 ifr_ifru ;
};
#line 76 "include/linux/random.h"
struct net;
#line 93
struct sock;
#line 108 "include/net/checksum.h"
struct sk_buff;
#line 34 "include/linux/bug.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};
#line 65 "include/linux/dma-attrs.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 155 "include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *page ;
};
#line 172 "include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
                  unsigned long  ) ;
};
#line 266 "include/linux/scatterlist.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
} ;
#line 273 "include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc_coherent)(struct device * , size_t  , dma_addr_t * , gfp_t  ) ;
   void (*free_coherent)(struct device * , size_t  , void * , dma_addr_t  ) ;
   dma_addr_t (*map_page)(struct device * , struct page * , unsigned long  , size_t  ,
                          enum dma_data_direction  , struct dma_attrs * ) ;
   void (*unmap_page)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ,
                      struct dma_attrs * ) ;
   int (*map_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                 struct dma_attrs * ) ;
   void (*unmap_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                    struct dma_attrs * ) ;
   void (*sync_single_for_cpu)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_single_for_device)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_single_range_for_cpu)(struct device * , dma_addr_t  , unsigned long  ,
                                     size_t  , enum dma_data_direction  ) ;
   void (*sync_single_range_for_device)(struct device * , dma_addr_t  , unsigned long  ,
                                        size_t  , enum dma_data_direction  ) ;
   void (*sync_sg_for_cpu)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   void (*sync_sg_for_device)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   int (*mapping_error)(struct device * , dma_addr_t  ) ;
   int (*dma_supported)(struct device * , u64  ) ;
   int is_phys ;
};
#line 33 "include/linux/dmaengine.h"
typedef s32 dma_cookie_t;
#line 488
struct net_device;
#line 489 "include/linux/dmaengine.h"
struct nf_conntrack {
   atomic_t use ;
};
#line 102 "include/linux/skbuff.h"
struct nf_bridge_info {
   atomic_t use ;
   struct net_device *physindev ;
   struct net_device *physoutdev ;
   unsigned int mask ;
   unsigned long data[4U] ;
};
#line 253 "include/linux/skbuff.h"
typedef unsigned int sk_buff_data_t;
#line 254
struct sec_path;
#line 254 "include/linux/skbuff.h"
struct __anonstruct_ldv_25705_146 {
   __u16 csum_start ;
   __u16 csum_offset ;
};
#line 254 "include/linux/skbuff.h"
union __anonunion_ldv_25706_145 {
   __wsum csum ;
   struct __anonstruct_ldv_25705_146 ldv_25705 ;
};
#line 254 "include/linux/skbuff.h"
struct sk_buff {
   struct sk_buff *next ;
   struct sk_buff *prev ;
   struct sock *sk ;
   ktime_t tstamp ;
   struct net_device *dev ;
   unsigned long _skb_dst ;
   struct sec_path *sp ;
   char cb[48U] ;
   unsigned int len ;
   unsigned int data_len ;
   __u16 mac_len ;
   __u16 hdr_len ;
   union __anonunion_ldv_25706_145 ldv_25706 ;
   __u32 priority ;
   int flags1_begin[0U] ;
   unsigned char local_df : 1 ;
   unsigned char cloned : 1 ;
   unsigned char ip_summed : 2 ;
   unsigned char nohdr : 1 ;
   unsigned char nfctinfo : 3 ;
   unsigned char pkt_type : 3 ;
   unsigned char fclone : 2 ;
   unsigned char ipvs_property : 1 ;
   unsigned char peeked : 1 ;
   unsigned char nf_trace : 1 ;
   int flags1_end[0U] ;
   __be16 protocol ;
   void (*destructor)(struct sk_buff * ) ;
   struct nf_conntrack *nfct ;
   struct sk_buff *nfct_reasm ;
   struct nf_bridge_info *nf_bridge ;
   int iif ;
   __u16 queue_mapping ;
   __u16 tc_index ;
   __u16 tc_verd ;
   int flags2_begin[0U] ;
   unsigned char ndisc_nodetype : 2 ;
   unsigned char do_not_encrypt : 1 ;
   int flags2_end[0U] ;
   dma_cookie_t dma_cookie ;
   __u32 secmark ;
   __u32 mark ;
   __u16 vlan_tci ;
   sk_buff_data_t transport_header ;
   sk_buff_data_t network_header ;
   sk_buff_data_t mac_header ;
   sk_buff_data_t tail ;
   sk_buff_data_t end ;
   unsigned char *head ;
   unsigned char *data ;
   unsigned int truesize ;
   atomic_t users ;
};
#line 144 "include/linux/if_packet.h"
struct ethtool_cmd {
   __u32 cmd ;
   __u32 supported ;
   __u32 advertising ;
   __u16 speed ;
   __u8 duplex ;
   __u8 port ;
   __u8 phy_address ;
   __u8 transceiver ;
   __u8 autoneg ;
   __u8 mdio_support ;
   __u32 maxtxpkt ;
   __u32 maxrxpkt ;
   __u16 speed_hi ;
   __u8 eth_tp_mdix ;
   __u8 reserved2 ;
   __u32 lp_advertising ;
   __u32 reserved[2U] ;
};
#line 51 "include/linux/ethtool.h"
struct ethtool_drvinfo {
   __u32 cmd ;
   char driver[32U] ;
   char version[32U] ;
   char fw_version[32U] ;
   char bus_info[32U] ;
   char reserved1[32U] ;
   char reserved2[12U] ;
   __u32 n_priv_flags ;
   __u32 n_stats ;
   __u32 testinfo_len ;
   __u32 eedump_len ;
   __u32 regdump_len ;
};
#line 69 "include/linux/ethtool.h"
struct ethtool_wolinfo {
   __u32 cmd ;
   __u32 supported ;
   __u32 wolopts ;
   __u8 sopass[6U] ;
};
#line 84 "include/linux/ethtool.h"
struct ethtool_regs {
   __u32 cmd ;
   __u32 version ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 92 "include/linux/ethtool.h"
struct ethtool_eeprom {
   __u32 cmd ;
   __u32 magic ;
   __u32 offset ;
   __u32 len ;
   __u8 data[0U] ;
};
#line 101 "include/linux/ethtool.h"
struct ethtool_coalesce {
   __u32 cmd ;
   __u32 rx_coalesce_usecs ;
   __u32 rx_max_coalesced_frames ;
   __u32 rx_coalesce_usecs_irq ;
   __u32 rx_max_coalesced_frames_irq ;
   __u32 tx_coalesce_usecs ;
   __u32 tx_max_coalesced_frames ;
   __u32 tx_coalesce_usecs_irq ;
   __u32 tx_max_coalesced_frames_irq ;
   __u32 stats_block_coalesce_usecs ;
   __u32 use_adaptive_rx_coalesce ;
   __u32 use_adaptive_tx_coalesce ;
   __u32 pkt_rate_low ;
   __u32 rx_coalesce_usecs_low ;
   __u32 rx_max_coalesced_frames_low ;
   __u32 tx_coalesce_usecs_low ;
   __u32 tx_max_coalesced_frames_low ;
   __u32 pkt_rate_high ;
   __u32 rx_coalesce_usecs_high ;
   __u32 rx_max_coalesced_frames_high ;
   __u32 tx_coalesce_usecs_high ;
   __u32 tx_max_coalesced_frames_high ;
   __u32 rate_sample_interval ;
};
#line 197 "include/linux/ethtool.h"
struct ethtool_ringparam {
   __u32 cmd ;
   __u32 rx_max_pending ;
   __u32 rx_mini_max_pending ;
   __u32 rx_jumbo_max_pending ;
   __u32 tx_max_pending ;
   __u32 rx_pending ;
   __u32 rx_mini_pending ;
   __u32 rx_jumbo_pending ;
   __u32 tx_pending ;
};
#line 219 "include/linux/ethtool.h"
struct ethtool_pauseparam {
   __u32 cmd ;
   __u32 autoneg ;
   __u32 rx_pause ;
   __u32 tx_pause ;
};
#line 258 "include/linux/ethtool.h"
struct ethtool_test {
   __u32 cmd ;
   __u32 flags ;
   __u32 reserved ;
   __u32 len ;
   __u64 data[0U] ;
};
#line 267 "include/linux/ethtool.h"
struct ethtool_stats {
   __u32 cmd ;
   __u32 n_stats ;
   __u64 data[0U] ;
};
#line 284 "include/linux/ethtool.h"
struct ethtool_tcpip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be16 psrc ;
   __be16 pdst ;
   __u8 tos ;
};
#line 306 "include/linux/ethtool.h"
struct ethtool_ah_espip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 spi ;
   __u8 tos ;
};
#line 313 "include/linux/ethtool.h"
struct ethtool_rawip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __u8 hdata[64U] ;
};
#line 319 "include/linux/ethtool.h"
struct ethtool_ether_spec {
   __be16 ether_type ;
   __u8 frame_size ;
   __u8 eframe[16U] ;
};
#line 325 "include/linux/ethtool.h"
struct ethtool_usrip4_spec {
   __be32 ip4src ;
   __be32 ip4dst ;
   __be32 l4_4_bytes ;
   __u8 tos ;
   __u8 ip_ver ;
   __u8 proto ;
};
#line 337 "include/linux/ethtool.h"
union __anonunion_h_u_147 {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_rawip4_spec raw_ip4_spec ;
   struct ethtool_ether_spec ether_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   __u8 hdata[64U] ;
};
#line 337 "include/linux/ethtool.h"
union __anonunion_m_u_148 {
   struct ethtool_tcpip4_spec tcp_ip4_spec ;
   struct ethtool_tcpip4_spec udp_ip4_spec ;
   struct ethtool_tcpip4_spec sctp_ip4_spec ;
   struct ethtool_ah_espip4_spec ah_ip4_spec ;
   struct ethtool_ah_espip4_spec esp_ip4_spec ;
   struct ethtool_rawip4_spec raw_ip4_spec ;
   struct ethtool_ether_spec ether_spec ;
   struct ethtool_usrip4_spec usr_ip4_spec ;
   __u8 hdata[64U] ;
};
#line 337 "include/linux/ethtool.h"
struct ethtool_rx_flow_spec {
   __u32 flow_type ;
   union __anonunion_h_u_147 h_u ;
   union __anonunion_m_u_148 m_u ;
   __u64 ring_cookie ;
   __u32 location ;
};
#line 354 "include/linux/ethtool.h"
struct ethtool_rxnfc {
   __u32 cmd ;
   __u32 flow_type ;
   __u64 data ;
   struct ethtool_rx_flow_spec fs ;
   __u32 rule_cnt ;
   __u32 rule_locs[0U] ;
};
#line 383 "include/linux/ethtool.h"
struct ethtool_ops {
   int (*get_settings)(struct net_device * , struct ethtool_cmd * ) ;
   int (*set_settings)(struct net_device * , struct ethtool_cmd * ) ;
   void (*get_drvinfo)(struct net_device * , struct ethtool_drvinfo * ) ;
   int (*get_regs_len)(struct net_device * ) ;
   void (*get_regs)(struct net_device * , struct ethtool_regs * , void * ) ;
   void (*get_wol)(struct net_device * , struct ethtool_wolinfo * ) ;
   int (*set_wol)(struct net_device * , struct ethtool_wolinfo * ) ;
   u32 (*get_msglevel)(struct net_device * ) ;
   void (*set_msglevel)(struct net_device * , u32  ) ;
   int (*nway_reset)(struct net_device * ) ;
   u32 (*get_link)(struct net_device * ) ;
   int (*get_eeprom_len)(struct net_device * ) ;
   int (*get_eeprom)(struct net_device * , struct ethtool_eeprom * , u8 * ) ;
   int (*set_eeprom)(struct net_device * , struct ethtool_eeprom * , u8 * ) ;
   int (*get_coalesce)(struct net_device * , struct ethtool_coalesce * ) ;
   int (*set_coalesce)(struct net_device * , struct ethtool_coalesce * ) ;
   void (*get_ringparam)(struct net_device * , struct ethtool_ringparam * ) ;
   int (*set_ringparam)(struct net_device * , struct ethtool_ringparam * ) ;
   void (*get_pauseparam)(struct net_device * , struct ethtool_pauseparam * ) ;
   int (*set_pauseparam)(struct net_device * , struct ethtool_pauseparam * ) ;
   u32 (*get_rx_csum)(struct net_device * ) ;
   int (*set_rx_csum)(struct net_device * , u32  ) ;
   u32 (*get_tx_csum)(struct net_device * ) ;
   int (*set_tx_csum)(struct net_device * , u32  ) ;
   u32 (*get_sg)(struct net_device * ) ;
   int (*set_sg)(struct net_device * , u32  ) ;
   u32 (*get_tso)(struct net_device * ) ;
   int (*set_tso)(struct net_device * , u32  ) ;
   void (*self_test)(struct net_device * , struct ethtool_test * , u64 * ) ;
   void (*get_strings)(struct net_device * , u32  , u8 * ) ;
   int (*phys_id)(struct net_device * , u32  ) ;
   void (*get_ethtool_stats)(struct net_device * , struct ethtool_stats * , u64 * ) ;
   int (*begin)(struct net_device * ) ;
   void (*complete)(struct net_device * ) ;
   u32 (*get_ufo)(struct net_device * ) ;
   int (*set_ufo)(struct net_device * , u32  ) ;
   u32 (*get_flags)(struct net_device * ) ;
   int (*set_flags)(struct net_device * , u32  ) ;
   u32 (*get_priv_flags)(struct net_device * ) ;
   int (*set_priv_flags)(struct net_device * , u32  ) ;
   int (*get_sset_count)(struct net_device * , int  ) ;
   int (*self_test_count)(struct net_device * ) ;
   int (*get_stats_count)(struct net_device * ) ;
   int (*get_rxnfc)(struct net_device * , struct ethtool_rxnfc * , void * ) ;
   int (*set_rxnfc)(struct net_device * , struct ethtool_rxnfc * ) ;
};
#line 492
struct prot_inuse;
#line 493 "include/linux/ethtool.h"
struct netns_core {
   struct ctl_table_header *sysctl_hdr ;
   int sysctl_somaxconn ;
   struct prot_inuse *inuse ;
};
#line 38 "include/net/snmp.h"
struct ipstats_mib {
   unsigned long mibs[31U] ;
};
#line 75 "include/net/snmp.h"
struct icmp_mib {
   unsigned long mibs[28U] ;
};
#line 83 "include/net/snmp.h"
struct icmpmsg_mib {
   unsigned long mibs[512U] ;
};
#line 88 "include/net/snmp.h"
struct icmpv6_mib {
   unsigned long mibs[4U] ;
};
#line 94 "include/net/snmp.h"
struct icmpv6msg_mib {
   unsigned long mibs[512U] ;
};
#line 99 "include/net/snmp.h"
struct tcp_mib {
   unsigned long mibs[15U] ;
};
#line 106 "include/net/snmp.h"
struct udp_mib {
   unsigned long mibs[7U] ;
};
#line 112 "include/net/snmp.h"
struct linux_mib {
   unsigned long mibs[75U] ;
};
#line 118 "include/net/snmp.h"
struct linux_xfrm_mib {
   unsigned long mibs[26U] ;
};
#line 124 "include/net/snmp.h"
struct netns_mib {
   struct tcp_mib *tcp_statistics[2U] ;
   struct ipstats_mib *ip_statistics[2U] ;
   struct linux_mib *net_statistics[2U] ;
   struct udp_mib *udp_statistics[2U] ;
   struct udp_mib *udplite_statistics[2U] ;
   struct icmp_mib *icmp_statistics[2U] ;
   struct icmpmsg_mib *icmpmsg_statistics[2U] ;
   struct proc_dir_entry *proc_net_devsnmp6 ;
   struct udp_mib *udp_stats_in6[2U] ;
   struct udp_mib *udplite_stats_in6[2U] ;
   struct ipstats_mib *ipv6_statistics[2U] ;
   struct icmpv6_mib *icmpv6_statistics[2U] ;
   struct icmpv6msg_mib *icmpv6msg_statistics[2U] ;
   struct linux_xfrm_mib *xfrm_statistics[2U] ;
};
#line 26 "include/net/netns/mib.h"
struct netns_unix {
   int sysctl_max_dgram_qlen ;
   struct ctl_table_header *ctl ;
};
#line 12 "include/net/netns/unix.h"
struct netns_packet {
   rwlock_t sklist_lock ;
   struct hlist_head sklist ;
};
#line 14 "include/net/netns/packet.h"
struct netns_frags {
   int nqueues ;
   atomic_t mem ;
   struct list_head lru_list ;
   int timeout ;
   int high_thresh ;
   int low_thresh ;
};
#line 72 "include/net/inet_frag.h"
struct ipv4_devconf;
#line 73
struct fib_rules_ops;
#line 74
struct xt_table;
#line 74
struct mfc_cache;
#line 74
struct vif_device;
#line 74 "include/net/inet_frag.h"
struct netns_ipv4 {
   struct ctl_table_header *forw_hdr ;
   struct ctl_table_header *frags_hdr ;
   struct ctl_table_header *ipv4_hdr ;
   struct ctl_table_header *route_hdr ;
   struct ipv4_devconf *devconf_all ;
   struct ipv4_devconf *devconf_dflt ;
   struct fib_rules_ops *rules_ops ;
   struct hlist_head *fib_table_hash ;
   struct sock *fibnl ;
   struct sock **icmp_sk ;
   struct sock *tcp_sock ;
   struct netns_frags frags ;
   struct xt_table *iptable_filter ;
   struct xt_table *iptable_mangle ;
   struct xt_table *iptable_raw ;
   struct xt_table *arptable_filter ;
   struct xt_table *iptable_security ;
   struct xt_table *nat_table ;
   struct hlist_head *nat_bysource ;
   int nat_vmalloced ;
   int sysctl_icmp_echo_ignore_all ;
   int sysctl_icmp_echo_ignore_broadcasts ;
   int sysctl_icmp_ignore_bogus_error_responses ;
   int sysctl_icmp_ratelimit ;
   int sysctl_icmp_ratemask ;
   int sysctl_icmp_errors_use_inbound_ifaddr ;
   int sysctl_rt_cache_rebuild_count ;
   int current_rt_cache_rebuild_count ;
   struct timer_list rt_secret_timer ;
   atomic_t rt_genid ;
   struct sock *mroute_sk ;
   struct mfc_cache **mfc_cache_array ;
   struct vif_device *vif_table ;
   int maxvif ;
   atomic_t cache_resolve_queue_len ;
   int mroute_do_assert ;
   int mroute_do_pim ;
   int mroute_reg_vif_num ;
};
#line 69 "include/net/netns/ipv4.h"
struct netns_sysctl_ipv6 {
   struct ctl_table_header *table ;
   struct ctl_table_header *frags_hdr ;
   int bindv6only ;
   int flush_delay ;
   int ip6_rt_max_size ;
   int ip6_rt_gc_min_interval ;
   int ip6_rt_gc_timeout ;
   int ip6_rt_gc_interval ;
   int ip6_rt_gc_elasticity ;
   int ip6_rt_mtu_expires ;
   int ip6_rt_min_advmss ;
   int icmpv6_time ;
};
#line 28 "include/net/netns/ipv6.h"
struct ipv6_devconf;
#line 28
struct rt6_info;
#line 28
struct rt6_statistics;
#line 28
struct fib6_table;
#line 28
struct dst_ops;
#line 28
struct mfc6_cache;
#line 28
struct mif_device;
#line 28 "include/net/netns/ipv6.h"
struct netns_ipv6 {
   struct netns_sysctl_ipv6 sysctl ;
   struct ipv6_devconf *devconf_all ;
   struct ipv6_devconf *devconf_dflt ;
   struct netns_frags frags ;
   struct xt_table *ip6table_filter ;
   struct xt_table *ip6table_mangle ;
   struct xt_table *ip6table_raw ;
   struct xt_table *ip6table_security ;
   struct rt6_info *ip6_null_entry ;
   struct rt6_statistics *rt6_stats ;
   struct timer_list ip6_fib_timer ;
   struct hlist_head *fib_table_hash ;
   struct fib6_table *fib6_main_tbl ;
   struct dst_ops *ip6_dst_ops ;
   unsigned int ip6_rt_gc_expire ;
   unsigned long ip6_rt_last_gc ;
   struct rt6_info *ip6_prohibit_entry ;
   struct rt6_info *ip6_blk_hole_entry ;
   struct fib6_table *fib6_local_tbl ;
   struct fib_rules_ops *fib6_rules_ops ;
   struct sock **icmp_sk ;
   struct sock *ndisc_sk ;
   struct sock *tcp_sk ;
   struct sock *igmp_sk ;
   struct sock *mroute6_sk ;
   struct mfc6_cache **mfc6_cache_array ;
   struct mif_device *vif6_table ;
   int maxvif ;
   atomic_t cache_resolve_queue_len ;
   int mroute_do_assert ;
   int mroute_do_pim ;
   int mroute_reg_vif_num ;
};
#line 69 "include/net/netns/ipv6.h"
struct netns_dccp {
   struct sock *v4_ctl_sk ;
   struct sock *v6_ctl_sk ;
};
#line 46 "include/linux/proc_fs.h"
typedef int read_proc_t(char * , char ** , off_t  , int  , int * , void * );
#line 48 "include/linux/proc_fs.h"
typedef int write_proc_t(struct file * , char const   * , unsigned long  , void * );
#line 49 "include/linux/proc_fs.h"
struct proc_dir_entry {
   unsigned int low_ino ;
   unsigned short namelen ;
   char const   *name ;
   mode_t mode ;
   nlink_t nlink ;
   uid_t uid ;
   gid_t gid ;
   loff_t size ;
   struct inode_operations  const  *proc_iops ;
   struct file_operations  const  *proc_fops ;
   struct proc_dir_entry *next ;
   struct proc_dir_entry *parent ;
   struct proc_dir_entry *subdir ;
   void *data ;
   read_proc_t *read_proc ;
   write_proc_t *write_proc ;
   atomic_t count ;
   int pde_users ;
   spinlock_t pde_unload_lock ;
   struct completion *pde_unload_completion ;
   struct list_head pde_openers ;
};
#line 352 "include/linux/netfilter.h"
struct ebt_table;
#line 353 "include/linux/netfilter.h"
struct netns_xt {
   struct list_head tables[13U] ;
   struct ebt_table *broute_table ;
   struct ebt_table *frame_filter ;
   struct ebt_table *frame_nat ;
};
#line 15 "include/net/netns/x_tables.h"
struct hlist_nulls_node;
#line 15 "include/net/netns/x_tables.h"
struct hlist_nulls_head {
   struct hlist_nulls_node *first ;
};
#line 20 "include/linux/list_nulls.h"
struct hlist_nulls_node {
   struct hlist_nulls_node *next ;
   struct hlist_nulls_node **pprev ;
};
#line 86
struct ip_conntrack_stat;
#line 86 "include/linux/list_nulls.h"
struct netns_ct {
   atomic_t count ;
   unsigned int expect_count ;
   struct hlist_nulls_head *hash ;
   struct hlist_head *expect_hash ;
   struct hlist_nulls_head unconfirmed ;
   struct hlist_nulls_head dying ;
   struct ip_conntrack_stat *stat ;
   int sysctl_events ;
   unsigned int sysctl_events_retry_timeout ;
   int sysctl_acct ;
   int sysctl_checksum ;
   unsigned int sysctl_log_invalid ;
   struct ctl_table_header *sysctl_header ;
   struct ctl_table_header *acct_sysctl_header ;
   struct ctl_table_header *event_sysctl_header ;
   int hash_vmalloc ;
   int expect_vmalloc ;
};
#line 465 "include/linux/xfrm.h"
struct xfrm_policy_hash {
   struct hlist_head *table ;
   unsigned int hmask ;
};
#line 15 "include/net/netns/xfrm.h"
struct netns_xfrm {
   struct list_head state_all ;
   struct hlist_head *state_bydst ;
   struct hlist_head *state_bysrc ;
   struct hlist_head *state_byspi ;
   unsigned int state_hmask ;
   unsigned int state_num ;
   struct work_struct state_hash_work ;
   struct hlist_head state_gc_list ;
   struct work_struct state_gc_work ;
   wait_queue_head_t km_waitq ;
   struct list_head policy_all ;
   struct hlist_head *policy_byidx ;
   unsigned int policy_idx_hmask ;
   struct hlist_head policy_inexact[6U] ;
   struct xfrm_policy_hash policy_bydst[6U] ;
   unsigned int policy_count[6U] ;
   struct work_struct policy_hash_work ;
   struct sock *nlsk ;
   u32 sysctl_aevent_etime ;
   u32 sysctl_aevent_rseqth ;
   int sysctl_larval_drop ;
   u32 sysctl_acq_expires ;
   struct ctl_table_header *sysctl_hdr ;
};
#line 54
struct net_generic;
#line 55 "include/net/netns/xfrm.h"
struct net {
   atomic_t count ;
   struct list_head list ;
   struct work_struct work ;
   struct proc_dir_entry *proc_net ;
   struct proc_dir_entry *proc_net_stat ;
   struct ctl_table_set sysctls ;
   struct net_device *loopback_dev ;
   struct list_head dev_base_head ;
   struct hlist_head *dev_name_head ;
   struct hlist_head *dev_index_head ;
   struct list_head rules_ops ;
   spinlock_t rules_mod_lock ;
   struct sock *rtnl ;
   struct netns_core core ;
   struct netns_mib mib ;
   struct netns_packet packet ;
   struct netns_unix unx ;
   struct netns_ipv4 ipv4 ;
   struct netns_ipv6 ipv6 ;
   struct netns_dccp dccp ;
   struct netns_xt xt ;
   struct netns_ct ct ;
   struct netns_xfrm xfrm ;
   struct net_generic *gen ;
};
#line 83 "include/net/net_namespace.h"
struct seq_file {
   char *buf ;
   size_t size ;
   size_t from ;
   size_t count ;
   loff_t index ;
   loff_t read_pos ;
   u64 version ;
   struct mutex lock ;
   struct seq_operations  const  *op ;
   void *private ;
};
#line 28 "include/linux/seq_file.h"
struct seq_operations {
   void *(*start)(struct seq_file * , loff_t * ) ;
   void (*stop)(struct seq_file * , void * ) ;
   void *(*next)(struct seq_file * , void * , loff_t * ) ;
   int (*show)(struct seq_file * , void * ) ;
};
#line 59 "include/net/dsa.h"
struct dcbnl_rtnl_ops {
   u8 (*getstate)(struct net_device * ) ;
   u8 (*setstate)(struct net_device * , u8  ) ;
   void (*getpermhwaddr)(struct net_device * , u8 * ) ;
   void (*setpgtccfgtx)(struct net_device * , int  , u8  , u8  , u8  , u8  ) ;
   void (*setpgbwgcfgtx)(struct net_device * , int  , u8  ) ;
   void (*setpgtccfgrx)(struct net_device * , int  , u8  , u8  , u8  , u8  ) ;
   void (*setpgbwgcfgrx)(struct net_device * , int  , u8  ) ;
   void (*getpgtccfgtx)(struct net_device * , int  , u8 * , u8 * , u8 * , u8 * ) ;
   void (*getpgbwgcfgtx)(struct net_device * , int  , u8 * ) ;
   void (*getpgtccfgrx)(struct net_device * , int  , u8 * , u8 * , u8 * , u8 * ) ;
   void (*getpgbwgcfgrx)(struct net_device * , int  , u8 * ) ;
   void (*setpfccfg)(struct net_device * , int  , u8  ) ;
   void (*getpfccfg)(struct net_device * , int  , u8 * ) ;
   u8 (*setall)(struct net_device * ) ;
   u8 (*getcap)(struct net_device * , int  , u8 * ) ;
   u8 (*getnumtcs)(struct net_device * , int  , u8 * ) ;
   u8 (*setnumtcs)(struct net_device * , int  , u8  ) ;
   u8 (*getpfcstate)(struct net_device * ) ;
   void (*setpfcstate)(struct net_device * , u8  ) ;
   void (*getbcncfg)(struct net_device * , int  , u32 * ) ;
   void (*setbcncfg)(struct net_device * , int  , u32  ) ;
   void (*getbcnrp)(struct net_device * , int  , u8 * ) ;
   void (*setbcnrp)(struct net_device * , int  , u8  ) ;
};
#line 52 "include/net/dcbnl.h"
struct vlan_group;
#line 53
struct netpoll_info;
#line 54
struct wireless_dev;
#line 55 "include/net/dcbnl.h"
struct net_device_stats {
   unsigned long rx_packets ;
   unsigned long tx_packets ;
   unsigned long rx_bytes ;
   unsigned long tx_bytes ;
   unsigned long rx_errors ;
   unsigned long tx_errors ;
   unsigned long rx_dropped ;
   unsigned long tx_dropped ;
   unsigned long multicast ;
   unsigned long collisions ;
   unsigned long rx_length_errors ;
   unsigned long rx_over_errors ;
   unsigned long rx_crc_errors ;
   unsigned long rx_frame_errors ;
   unsigned long rx_fifo_errors ;
   unsigned long rx_missed_errors ;
   unsigned long tx_aborted_errors ;
   unsigned long tx_carrier_errors ;
   unsigned long tx_fifo_errors ;
   unsigned long tx_heartbeat_errors ;
   unsigned long tx_window_errors ;
   unsigned long rx_compressed ;
   unsigned long tx_compressed ;
};
#line 172 "include/linux/netdevice.h"
struct neighbour;
#line 173
struct neigh_parms;
#line 193 "include/linux/netdevice.h"
struct dev_addr_list {
   struct dev_addr_list *next ;
   u8 da_addr[32U] ;
   u8 da_addrlen ;
   u8 da_synced ;
   int da_users ;
   int da_gusers ;
};
#line 226 "include/linux/netdevice.h"
struct netdev_hw_addr_list {
   struct list_head list ;
   int count ;
};
#line 231 "include/linux/netdevice.h"
struct hh_cache {
   struct hh_cache *hh_next ;
   atomic_t hh_refcnt ;
   __be16 hh_type ;
   u16 hh_len ;
   int (*hh_output)(struct sk_buff * ) ;
   seqlock_t hh_lock ;
   unsigned long hh_data[12U] ;
};
#line 259 "include/linux/netdevice.h"
struct header_ops {
   int (*create)(struct sk_buff * , struct net_device * , unsigned short  , void const   * ,
                 void const   * , unsigned int  ) ;
   int (*parse)(struct sk_buff  const  * , unsigned char * ) ;
   int (*rebuild)(struct sk_buff * ) ;
   int (*cache)(struct neighbour  const  * , struct hh_cache * ) ;
   void (*cache_update)(struct hh_cache * , struct net_device  const  * , unsigned char const   * ) ;
};
#line 466
struct Qdisc;
#line 466 "include/linux/netdevice.h"
struct netdev_queue {
   struct net_device *dev ;
   struct Qdisc *qdisc ;
   unsigned long state ;
   struct Qdisc *qdisc_sleeping ;
   spinlock_t _xmit_lock ;
   int xmit_lock_owner ;
   unsigned long trans_start ;
   unsigned long tx_bytes ;
   unsigned long tx_packets ;
   unsigned long tx_dropped ;
};
#line 489 "include/linux/netdevice.h"
struct net_device_ops {
   int (*ndo_init)(struct net_device * ) ;
   void (*ndo_uninit)(struct net_device * ) ;
   int (*ndo_open)(struct net_device * ) ;
   int (*ndo_stop)(struct net_device * ) ;
   int (*ndo_start_xmit)(struct sk_buff * , struct net_device * ) ;
   u16 (*ndo_select_queue)(struct net_device * , struct sk_buff * ) ;
   void (*ndo_change_rx_flags)(struct net_device * , int  ) ;
   void (*ndo_set_rx_mode)(struct net_device * ) ;
   void (*ndo_set_multicast_list)(struct net_device * ) ;
   int (*ndo_set_mac_address)(struct net_device * , void * ) ;
   int (*ndo_validate_addr)(struct net_device * ) ;
   int (*ndo_do_ioctl)(struct net_device * , struct ifreq * , int  ) ;
   int (*ndo_set_config)(struct net_device * , struct ifmap * ) ;
   int (*ndo_change_mtu)(struct net_device * , int  ) ;
   int (*ndo_neigh_setup)(struct net_device * , struct neigh_parms * ) ;
   void (*ndo_tx_timeout)(struct net_device * ) ;
   struct net_device_stats *(*ndo_get_stats)(struct net_device * ) ;
   void (*ndo_vlan_rx_register)(struct net_device * , struct vlan_group * ) ;
   void (*ndo_vlan_rx_add_vid)(struct net_device * , unsigned short  ) ;
   void (*ndo_vlan_rx_kill_vid)(struct net_device * , unsigned short  ) ;
   void (*ndo_poll_controller)(struct net_device * ) ;
   int (*ndo_fcoe_ddp_setup)(struct net_device * , u16  , struct scatterlist * , unsigned int  ) ;
   int (*ndo_fcoe_ddp_done)(struct net_device * , u16  ) ;
};
#line 636
enum ldv_20422 {
    NETREG_UNINITIALIZED = 0,
    NETREG_REGISTERED = 1,
    NETREG_UNREGISTERING = 2,
    NETREG_UNREGISTERED = 3,
    NETREG_RELEASED = 4,
    NETREG_DUMMY = 5
} ;
#line 645
struct iw_handler_def;
#line 645
struct iw_public_data;
#line 645
struct net_bridge_port;
#line 645
struct macvlan_port;
#line 645
struct garp_port;
#line 645
struct rtnl_link_ops;
#line 645 "include/linux/netdevice.h"
struct net_device {
   char name[16U] ;
   struct hlist_node name_hlist ;
   char *ifalias ;
   unsigned long mem_end ;
   unsigned long mem_start ;
   unsigned long base_addr ;
   unsigned int irq ;
   unsigned char if_port ;
   unsigned char dma ;
   unsigned long state ;
   struct list_head dev_list ;
   struct list_head napi_list ;
   unsigned long features ;
   int ifindex ;
   int iflink ;
   struct net_device_stats stats ;
   struct iw_handler_def  const  *wireless_handlers ;
   struct iw_public_data *wireless_data ;
   struct net_device_ops  const  *netdev_ops ;
   struct ethtool_ops  const  *ethtool_ops ;
   struct header_ops  const  *header_ops ;
   unsigned int flags ;
   unsigned short gflags ;
   unsigned short priv_flags ;
   unsigned short padded ;
   unsigned char operstate ;
   unsigned char link_mode ;
   unsigned int mtu ;
   unsigned short type ;
   unsigned short hard_header_len ;
   unsigned short needed_headroom ;
   unsigned short needed_tailroom ;
   struct net_device *master ;
   unsigned char perm_addr[32U] ;
   unsigned char addr_len ;
   unsigned short dev_id ;
   struct netdev_hw_addr_list uc ;
   int uc_promisc ;
   spinlock_t addr_list_lock ;
   struct dev_addr_list *mc_list ;
   int mc_count ;
   unsigned int promiscuity ;
   unsigned int allmulti ;
   void *dsa_ptr ;
   void *atalk_ptr ;
   void *ip_ptr ;
   void *dn_ptr ;
   void *ip6_ptr ;
   void *ec_ptr ;
   void *ax25_ptr ;
   struct wireless_dev *ieee80211_ptr ;
   unsigned long last_rx ;
   unsigned char *dev_addr ;
   struct netdev_hw_addr_list dev_addrs ;
   unsigned char broadcast[32U] ;
   struct netdev_queue rx_queue ;
   struct netdev_queue *_tx ;
   unsigned int num_tx_queues ;
   unsigned int real_num_tx_queues ;
   unsigned long tx_queue_len ;
   spinlock_t tx_global_lock ;
   unsigned long trans_start ;
   int watchdog_timeo ;
   struct timer_list watchdog_timer ;
   atomic_t refcnt ;
   struct list_head todo_list ;
   struct hlist_node index_hlist ;
   struct net_device *link_watch_next ;
   enum ldv_20422 reg_state ;
   void (*destructor)(struct net_device * ) ;
   struct netpoll_info *npinfo ;
   struct net *nd_net ;
   void *ml_priv ;
   struct net_bridge_port *br_port ;
   struct macvlan_port *macvlan_port ;
   struct garp_port *garp_port ;
   struct device dev ;
   struct attribute_group *sysfs_groups[3U] ;
   struct rtnl_link_ops  const  *rtnl_link_ops ;
   unsigned long vlan_features ;
   unsigned int gso_max_size ;
   struct dcbnl_rtnl_ops *dcbnl_ops ;
   unsigned int fcoe_ddp_xid ;
};
#line 2002 "include/linux/netdevice.h"
struct ipv4_devconf {
   void *sysctl ;
   int data[22U] ;
   unsigned long state[1U] ;
};
#line 234 "include/linux/etherdevice.h"
struct dvb_net {
   struct dvb_device *dvbdev ;
   struct net_device *device[10U] ;
   int state[10U] ;
   unsigned char exit : 1 ;
   struct dmx_demux *demux ;
};
#line 46 "drivers/media/dvb/dvb-core/dvb_net.h"
struct dvb_ringbuffer {
   u8 *data ;
   ssize_t size ;
   ssize_t pread ;
   ssize_t pwrite ;
   int error ;
   wait_queue_head_t queue ;
   spinlock_t lock ;
};
#line 184 "drivers/media/dvb/dvb-core/dvb_ringbuffer.h"
enum dmxdev_type {
    DMXDEV_TYPE_NONE = 0,
    DMXDEV_TYPE_SEC = 1,
    DMXDEV_TYPE_PES = 2
} ;
#line 190
enum dmxdev_state {
    DMXDEV_STATE_FREE = 0,
    DMXDEV_STATE_ALLOCATED = 1,
    DMXDEV_STATE_SET = 2,
    DMXDEV_STATE_GO = 3,
    DMXDEV_STATE_DONE = 4,
    DMXDEV_STATE_TIMEDOUT = 5
} ;
#line 61 "drivers/media/dvb/dvb-core/dmxdev.h"
union __anonunion_filter_160 {
   struct dmx_section_filter *sec ;
};
#line 61 "drivers/media/dvb/dvb-core/dmxdev.h"
union __anonunion_feed_161 {
   struct list_head ts ;
   struct dmx_section_feed *sec ;
};
#line 61 "drivers/media/dvb/dvb-core/dmxdev.h"
union __anonunion_params_162 {
   struct dmx_sct_filter_params sec ;
   struct dmx_pes_filter_params pes ;
};
#line 61
struct dmxdev;
#line 61 "drivers/media/dvb/dvb-core/dmxdev.h"
struct dmxdev_filter {
   union __anonunion_filter_160 filter ;
   union __anonunion_feed_161 feed ;
   union __anonunion_params_162 params ;
   enum dmxdev_type type ;
   enum dmxdev_state state ;
   struct dmxdev *dev ;
   struct dvb_ringbuffer buffer ;
   struct mutex mutex ;
   struct timer_list timer ;
   int todo ;
   u8 secheader[3U] ;
};
#line 90 "drivers/media/dvb/dvb-core/dmxdev.h"
struct dmxdev {
   struct dvb_device *dvbdev ;
   struct dvb_device *dvr_dvbdev ;
   struct dmxdev_filter *filter ;
   struct dmx_demux *demux ;
   int filternum ;
   int capabilities ;
   unsigned char exit : 1 ;
   struct dmx_frontend *dvr_orig_fe ;
   struct dvb_ringbuffer dvr_buffer ;
   struct mutex mutex ;
   spinlock_t lock ;
};
#line 42 "drivers/media/dvb/frontends/dvb-pll.h"
struct dvb_usb_device_description {
   char const   *name ;
   struct usb_device_id *cold_ids[15U] ;
   struct usb_device_id *warm_ids[15U] ;
};
#line 76 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct dvb_usb_rc_key {
   u16 scan ;
   u32 event ;
};
#line 102
struct dvb_usb_device;
#line 103
struct dvb_usb_adapter;
#line 104
struct usb_data_stream;
#line 105 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct __anonstruct_bulk_164 {
   int buffersize ;
};
#line 105 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct __anonstruct_isoc_165 {
   int framesperurb ;
   int framesize ;
   int interval ;
};
#line 105 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
union __anonunion_u_163 {
   struct __anonstruct_bulk_164 bulk ;
   struct __anonstruct_isoc_165 isoc ;
};
#line 105 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct usb_data_stream_properties {
   int type ;
   int count ;
   int endpoint ;
   union __anonunion_u_163 u ;
};
#line 130 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct dvb_usb_adapter_properties {
   int caps ;
   int pid_filter_count ;
   int (*streaming_ctrl)(struct dvb_usb_adapter * , int  ) ;
   int (*pid_filter_ctrl)(struct dvb_usb_adapter * , int  ) ;
   int (*pid_filter)(struct dvb_usb_adapter * , int  , u16  , int  ) ;
   int (*frontend_attach)(struct dvb_usb_adapter * ) ;
   int (*tuner_attach)(struct dvb_usb_adapter * ) ;
   struct usb_data_stream_properties stream ;
   int size_of_priv ;
};
#line 166 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct dvb_usb_device_properties {
   int caps ;
   int usb_ctrl ;
   int (*download_firmware)(struct usb_device * , struct firmware  const  * ) ;
   char const   *firmware ;
   int no_reconnect ;
   int size_of_priv ;
   int num_adapters ;
   struct dvb_usb_adapter_properties adapter[2U] ;
   int (*power_ctrl)(struct dvb_usb_device * , int  ) ;
   int (*read_mac_address)(struct dvb_usb_device * , u8 * ) ;
   int (*identify_state)(struct usb_device * , struct dvb_usb_device_properties * ,
                         struct dvb_usb_device_description ** , int * ) ;
   struct dvb_usb_rc_key *rc_key_map ;
   int rc_key_map_size ;
   int (*rc_query)(struct dvb_usb_device * , u32 * , int * ) ;
   int rc_interval ;
   struct i2c_algorithm *i2c_algo ;
   int generic_bulk_ctrl_endpoint ;
   int num_device_descs ;
   struct dvb_usb_device_description devices[12U] ;
};
#line 243 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct usb_data_stream {
   struct usb_device *udev ;
   struct usb_data_stream_properties props ;
   int state ;
   void (*complete)(struct usb_data_stream * , u8 * , size_t  ) ;
   struct urb *urb_list[10U] ;
   int buf_num ;
   unsigned long buf_size ;
   u8 *buf_list[10U] ;
   dma_addr_t dma_addr[10U] ;
   int urbs_initialized ;
   int urbs_submitted ;
   void *user_priv ;
};
#line 276 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct dvb_usb_adapter {
   struct dvb_usb_device *dev ;
   struct dvb_usb_adapter_properties props ;
   int state ;
   u8 id ;
   int feedcount ;
   int pid_filtering ;
   struct dvb_adapter dvb_adap ;
   struct dmxdev dmxdev ;
   struct dvb_demux demux ;
   struct dvb_net dvb_net ;
   struct dvb_frontend *fe ;
   int max_feed_count ;
   int (*fe_init)(struct dvb_frontend * ) ;
   int (*fe_sleep)(struct dvb_frontend * ) ;
   struct usb_data_stream stream ;
   void *priv ;
};
#line 330 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
struct dvb_usb_device {
   struct dvb_usb_device_properties props ;
   struct dvb_usb_device_description *desc ;
   struct usb_device *udev ;
   int state ;
   int powered ;
   struct mutex usb_mutex ;
   struct mutex i2c_mutex ;
   struct i2c_adapter i2c_adap ;
   int num_adapters_initialized ;
   struct dvb_usb_adapter adapter[2U] ;
   struct input_dev *rc_input_dev ;
   char rc_phys[64U] ;
   struct delayed_work rc_query_work ;
   u32 last_event ;
   int last_state ;
   struct module *owner ;
   void *priv ;
};
#line 661 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
typedef int ldv_func_ret_type___1;
#line 843 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
typedef int ldv_func_ret_type___19;
#line 246 "include/linux/timer.h"
enum hrtimer_restart;
#line 72 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/vp7045.h"
struct vp7045_fe_state {
   struct dvb_frontend fe ;
   struct dvb_usb_device *d ;
};
#line 1 "<compiler builtins>"
void *__builtin_memcpy(void * , void const   * , unsigned long  ) ;
#line 241 "include/linux/kernel.h"
extern int printk(char const   *  , ...) ;
#line 5 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
extern void __ldv_spin_lock(spinlock_t * ) ;
#line 8
void ldv___ldv_spin_lock_1(spinlock_t *ldv_func_arg1 ) ;
#line 12
void ldv___ldv_spin_lock_4(spinlock_t *ldv_func_arg1 ) ;
#line 16
void ldv___ldv_spin_lock_5(spinlock_t *ldv_func_arg1 ) ;
#line 20
void ldv___ldv_spin_lock_8(spinlock_t *ldv_func_arg1 ) ;
#line 24
void ldv___ldv_spin_lock_10(spinlock_t *ldv_func_arg1 ) ;
#line 28
void ldv___ldv_spin_lock_12(spinlock_t *ldv_func_arg1 ) ;
#line 32
void ldv___ldv_spin_lock_14(spinlock_t *ldv_func_arg1 ) ;
#line 36
void ldv___ldv_spin_lock_16(spinlock_t *ldv_func_arg1 ) ;
#line 40
void ldv___ldv_spin_lock_19(spinlock_t *ldv_func_arg1 ) ;
#line 44
void ldv___ldv_spin_lock_20(spinlock_t *ldv_func_arg1 ) ;
#line 48
void ldv___ldv_spin_lock_24(spinlock_t *ldv_func_arg1 ) ;
#line 52
void ldv___ldv_spin_lock_26(spinlock_t *ldv_func_arg1 ) ;
#line 56
void ldv___ldv_spin_lock_27(spinlock_t *ldv_func_arg1 ) ;
#line 58
extern void __ldv_spin_unlock(spinlock_t * ) ;
#line 61
void ldv___ldv_spin_unlock_2(spinlock_t *ldv_func_arg1 ) ;
#line 65
void ldv___ldv_spin_unlock_6(spinlock_t *ldv_func_arg1 ) ;
#line 69
void ldv___ldv_spin_unlock_7(spinlock_t *ldv_func_arg1 ) ;
#line 73
void ldv___ldv_spin_unlock_9(spinlock_t *ldv_func_arg1 ) ;
#line 77
void ldv___ldv_spin_unlock_11(spinlock_t *ldv_func_arg1 ) ;
#line 81
void ldv___ldv_spin_unlock_13(spinlock_t *ldv_func_arg1 ) ;
#line 85
void ldv___ldv_spin_unlock_15(spinlock_t *ldv_func_arg1 ) ;
#line 89
void ldv___ldv_spin_unlock_17(spinlock_t *ldv_func_arg1 ) ;
#line 93
void ldv___ldv_spin_unlock_18(spinlock_t *ldv_func_arg1 ) ;
#line 97
void ldv___ldv_spin_unlock_22(spinlock_t *ldv_func_arg1 ) ;
#line 101
void ldv___ldv_spin_unlock_23(spinlock_t *ldv_func_arg1 ) ;
#line 105
void ldv___ldv_spin_unlock_25(spinlock_t *ldv_func_arg1 ) ;
#line 109
void ldv___ldv_spin_unlock_28(spinlock_t *ldv_func_arg1 ) ;
#line 113
void ldv___ldv_spin_unlock_29(spinlock_t *ldv_func_arg1 ) ;
#line 115
extern int __ldv_spin_trylock(spinlock_t * ) ;
#line 118
int ldv___ldv_spin_trylock_3(spinlock_t *ldv_func_arg1 ) ;
#line 122
int ldv___ldv_spin_trylock_21(spinlock_t *ldv_func_arg1 ) ;
#line 128
void ldv_spin_lock__xmit_lock_of_netdev_queue(void) ;
#line 129
void ldv_spin_unlock__xmit_lock_of_netdev_queue(void) ;
#line 130
int ldv_spin_trylock__xmit_lock_of_netdev_queue(void) ;
#line 136
void ldv_spin_lock_addr_list_lock_of_net_device(void) ;
#line 137
void ldv_spin_unlock_addr_list_lock_of_net_device(void) ;
#line 144
void ldv_spin_lock_alloc_lock_of_task_struct(void) ;
#line 145
void ldv_spin_unlock_alloc_lock_of_task_struct(void) ;
#line 152
void ldv_spin_lock_d_lock_of_dentry(void) ;
#line 153
void ldv_spin_unlock_d_lock_of_dentry(void) ;
#line 160
void ldv_spin_lock_dcache_lock(void) ;
#line 161
void ldv_spin_unlock_dcache_lock(void) ;
#line 168
void ldv_spin_lock_i_lock_of_inode(void) ;
#line 169
void ldv_spin_unlock_i_lock_of_inode(void) ;
#line 176
void ldv_spin_lock_lock_of_NOT_ARG_SIGN(void) ;
#line 177
void ldv_spin_unlock_lock_of_NOT_ARG_SIGN(void) ;
#line 178
int ldv_spin_trylock_lock_of_NOT_ARG_SIGN(void) ;
#line 184
void ldv_spin_lock_siglock_of_sighand_struct(void) ;
#line 185
void ldv_spin_unlock_siglock_of_sighand_struct(void) ;
#line 192
void ldv_spin_lock_tx_global_lock_of_net_device(void) ;
#line 193
void ldv_spin_unlock_tx_global_lock_of_net_device(void) ;
#line 127 "include/linux/mutex.h"
extern int mutex_lock_interruptible_nested(struct mutex * , unsigned int  ) ;
#line 152
extern void mutex_unlock(struct mutex * ) ;
#line 46 "include/linux/delay.h"
extern void msleep(unsigned int  ) ;
#line 89 "include/linux/module.h"
extern struct module __this_module ;
#line 945 "include/linux/usb.h"
extern int usb_register_driver(struct usb_driver * , struct module * , char const   * ) ;
#line 947 "include/linux/usb.h"
__inline static int usb_register(struct usb_driver *driver ) 
{ 
  int tmp ;

  {
#line 949
  tmp = usb_register_driver(driver, & __this_module, "dvb_usb_vp7045");
#line 949
  return (tmp);
}
}
#line 951
extern void usb_deregister(struct usb_driver * ) ;
#line 1397
extern int usb_control_msg(struct usb_device * , unsigned int  , __u8  , __u8  , __u16  ,
                           __u16  , void * , __u16  , int  ) ;
#line 1523 "include/linux/usb.h"
__inline static unsigned int __create_pipe(struct usb_device *dev , unsigned int endpoint ) 
{ 


  {
#line 1526
  return ((unsigned int )(dev->devnum << 8) | (endpoint << 15));
}
}
#line 93 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/dvb-usb.h"
__inline static u8 rc5_data(struct dvb_usb_rc_key *key ) 
{ 


  {
#line 95
  return ((u8 )key->scan);
}
}
#line 390
extern int dvb_usb_device_init(struct usb_interface * , struct dvb_usb_device_properties * ,
                               struct module * , struct dvb_usb_device ** , short * ) ;
#line 394
extern void dvb_usb_device_exit(struct usb_interface * ) ;
#line 69 "/work/ldvuser/novikov/inst/current/envs/linux/linux/drivers/media/dvb/dvb-usb/vp7045.h"
struct dvb_frontend *vp7045_fe_attach(struct dvb_usb_device *d ) ;
#line 70
int vp7045_usb_op(struct dvb_usb_device *d , u8 cmd , u8 *out , int outlen , u8 *in ,
                  int inlen , int msec ) ;
#line 71
u8 vp7045_read_reg(struct dvb_usb_device *d , u8 reg ) ;
#line 102 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static int dvb_usb_vp7045_debug  ;
#line 106 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static short adapter_nr[8U]  = 
#line 106
  {      -1,      -1,      -1,      -1, 
        -1,      -1,      -1,      -1};
#line 112 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
int vp7045_usb_op(struct dvb_usb_device *d , u8 cmd , u8 *out , int outlen , u8 *in ,
                  int inlen , int msec ) 
{ 
  int ret ;
  u8 inbuf[12U] ;
  unsigned int tmp ;
  u8 outbuf[20U] ;
  unsigned int tmp___0 ;
  size_t __len ;
  void *__ret ;
  int loop_ ;
  unsigned int tmp___1 ;
  int tmp___2 ;
  unsigned int tmp___3 ;
  int tmp___4 ;
  int loop____0 ;
  size_t __len___0 ;
  void *__ret___0 ;

  {
#line 114
  ret = 0;
#line 115
  inbuf[0] = 0U;
#line 115
  tmp = 1U;
#line 115
  while (1) {
#line 115
    if (tmp >= 12U) {
#line 115
      break;
    } else {

    }
#line 115
    inbuf[tmp] = (unsigned char)0;
#line 115
    tmp = tmp + 1U;
  }
#line 115
  outbuf[0] = 0U;
#line 115
  tmp___0 = 1U;
#line 115
  while (1) {
#line 115
    if (tmp___0 >= 20U) {
#line 115
      break;
    } else {

    }
#line 115
    outbuf[tmp___0] = (unsigned char)0;
#line 115
    tmp___0 = tmp___0 + 1U;
  }
#line 117
  outbuf[0] = cmd;
#line 119
  if (outlen > 19) {
#line 120
    outlen = 19;
  } else {

  }
#line 122
  if (inlen > 11) {
#line 123
    inlen = 11;
  } else {

  }
#line 125
  if ((unsigned long )out != (unsigned long )((u8 *)0) && outlen > 0) {
#line 126
    __len = (size_t )outlen;
#line 126
    __ret = __builtin_memcpy((void *)(& outbuf) + 1U, (void const   *)out, __len);
  } else {

  }
#line 128
  if ((dvb_usb_vp7045_debug & 2) != 0) {
#line 128
    printk("out buffer: ");
  } else {

  }
#line 129
  loop_ = 0;
#line 129
  goto ldv_30280;
  ldv_30279: ;
#line 129
  if ((dvb_usb_vp7045_debug & 2) != 0) {
#line 129
    printk("%02x ", (int )outbuf[loop_]);
  } else {

  }
#line 129
  loop_ = loop_ + 1;
  ldv_30280: ;
#line 129
  if (outlen + 1 > loop_) {
#line 130
    goto ldv_30279;
  } else {

  }

#line 129
  if ((dvb_usb_vp7045_debug & 2) != 0) {
#line 129
    printk("\n");
  } else {

  }
#line 131
  ret = mutex_lock_interruptible_nested(& d->usb_mutex, 0U);
#line 131
  if (ret != 0) {
#line 132
    return (ret);
  } else {

  }
#line 134
  tmp___1 = __create_pipe(d->udev, 0U);
#line 134
  tmp___2 = usb_control_msg(d->udev, tmp___1 | 2147483648U, 193, 64, 0, 0, (void *)(& outbuf),
                            20, 2000);
#line 134
  if (tmp___2 != 20) {
#line 138
    printk("<3>vp7045: USB control message \'out\' went wrong.\n");
#line 139
    ret = -5;
#line 140
    goto unlock;
  } else {

  }
#line 143
  msleep((unsigned int )msec);
#line 145
  tmp___3 = __create_pipe(d->udev, 0U);
#line 145
  tmp___4 = usb_control_msg(d->udev, tmp___3 | 2147483776U, 192, 192, 0, 0, (void *)(& inbuf),
                            12, 2000);
#line 145
  if (tmp___4 != 12) {
#line 149
    printk("<3>vp7045: USB control message \'in\' went wrong.\n");
#line 150
    ret = -5;
#line 151
    goto unlock;
  } else {

  }
#line 154
  if ((dvb_usb_vp7045_debug & 2) != 0) {
#line 154
    printk("in buffer: ");
  } else {

  }
#line 155
  loop____0 = 0;
#line 155
  goto ldv_30285;
  ldv_30284: ;
#line 155
  if ((dvb_usb_vp7045_debug & 2) != 0) {
#line 155
    printk("%02x ", (int )inbuf[loop____0]);
  } else {

  }
#line 155
  loop____0 = loop____0 + 1;
  ldv_30285: ;
#line 155
  if (loop____0 <= 11) {
#line 156
    goto ldv_30284;
  } else {

  }

#line 155
  if ((dvb_usb_vp7045_debug & 2) != 0) {
#line 155
    printk("\n");
  } else {

  }
#line 157
  if ((unsigned long )in != (unsigned long )((u8 *)0) && inlen > 0) {
#line 158
    __len___0 = (size_t )inlen;
#line 158
    __ret___0 = __builtin_memcpy((void *)in, (void const   *)(& inbuf) + 1U, __len___0);
  } else {

  }
  unlock: 
#line 161
  mutex_unlock(& d->usb_mutex);
#line 163
  return (ret);
}
}
#line 166 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
u8 vp7045_read_reg(struct dvb_usb_device *d , u8 reg ) 
{ 
  u8 obuf[2U] ;
  unsigned int tmp ;
  u8 v ;

  {
#line 168
  obuf[0] = 0U;
#line 168
  tmp = 1U;
#line 168
  while (1) {
#line 168
    if (tmp >= 2U) {
#line 168
      break;
    } else {

    }
#line 168
    obuf[tmp] = (unsigned char)0;
#line 168
    tmp = tmp + 1U;
  }
#line 169
  obuf[1] = reg;
#line 171
  vp7045_usb_op(d, 3, (u8 *)(& obuf), 2, & v, 1, 30);
#line 173
  return (v);
}
}
#line 176 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static int vp7045_power_ctrl(struct dvb_usb_device *d , int onoff ) 
{ 
  u8 v ;
  int tmp ;

  {
#line 178
  v = (u8 )onoff;
#line 179
  tmp = vp7045_usb_op(d, 6, & v, 1, 0, 0, 150);
#line 179
  return (tmp);
}
}
#line 186 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static struct dvb_usb_rc_key vp7045_rc_keys[50U]  = 
#line 186
  {      {22U, 116U}, 
        {16U, 113U}, 
        {3U, 2U}, 
        {1U, 3U}, 
        {6U, 4U}, 
        {9U, 5U}, 
        {29U, 6U}, 
        {31U, 7U}, 
        {13U, 8U}, 
        {25U, 9U}, 
        {27U, 10U}, 
        {21U, 11U}, 
        {5U, 402U}, 
        {2U, 403U}, 
        {30U, 115U}, 
        {10U, 114U}, 
        {17U, 167U}, 
        {23U, 364U}, 
        {20U, 207U}, 
        {26U, 128U}, 
        {64U, 168U}, 
        {18U, 208U}, 
        {14U, 412U}, 
        {76U, 119U}, 
        {77U, 375U}, 
        {84U, 392U}, 
        {12U, 223U}, 
        {28U, 365U}, 
        {0U, 15U}, 
        {72U, 358U}, 
        {4U, 395U}, 
        {15U, 388U}, 
        {65U, 165U}, 
        {66U, 163U}, 
        {75U, 103U}, 
        {81U, 108U}, 
        {78U, 105U}, 
        {82U, 106U}, 
        {79U, 28U}, 
        {19U, 223U}, 
        {74U, 355U}, 
        {84U, 210U}, 
        {67U, 370U}, 
        {8U, 393U}, 
        {7U, 142U}, 
        {69U, 372U}, 
        {24U, 398U}, 
        {83U, 399U}, 
        {94U, 400U}, 
        {95U, 401U}};
#line 239 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static int vp7045_rc_query(struct dvb_usb_device *d , u32 *event , int *state ) 
{ 
  u8 key ;
  int i ;
  u8 tmp ;

  {
#line 243
  vp7045_usb_op(d, 5, 0, 0, & key, 1, 20);
#line 245
  if ((dvb_usb_vp7045_debug & 4) != 0) {
#line 245
    printk("remote query key: %x %d\n", (int )key, (int )key);
  } else {

  }
#line 247
  if ((unsigned int )key == 68U) {
#line 248
    *state = 0;
#line 249
    return (0);
  } else {

  }
#line 252
  i = 0;
#line 252
  goto ldv_30311;
  ldv_30310: 
#line 253
  tmp = rc5_data((struct dvb_usb_rc_key *)(& vp7045_rc_keys) + (unsigned long )i);
#line 253
  if ((int )tmp == (int )key) {
#line 254
    *state = 1;
#line 255
    *event = vp7045_rc_keys[i].event;
#line 256
    goto ldv_30309;
  } else {

  }
#line 252
  i = i + 1;
  ldv_30311: ;
#line 252
  if ((unsigned int )i <= 49U) {
#line 253
    goto ldv_30310;
  } else {

  }
  ldv_30309: ;
#line 258
  return (0);
}
}
#line 261 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static int vp7045_read_eeprom(struct dvb_usb_device *d , u8 *buf , int len , int offset ) 
{ 
  int i ;
  u8 v ;
  u8 br[2U] ;
  int loop_ ;

  {
#line 263
  i = 0;
#line 265
  i = 0;
#line 265
  goto ldv_30322;
  ldv_30321: 
#line 266
  v = (int )((u8 )offset) + (int )((u8 )i);
#line 267
  vp7045_usb_op(d, 17, & v, 1, (u8 *)(& br), 2, 5);
#line 268
  *(buf + (unsigned long )i) = br[1];
#line 265
  i = i + 1;
  ldv_30322: ;
#line 265
  if (i < len) {
#line 266
    goto ldv_30321;
  } else {

  }

#line 270
  if (dvb_usb_vp7045_debug & 1) {
#line 270
    printk("VP7045 EEPROM read (offs: %d, len: %d) : ", offset, i);
  } else {

  }
#line 271
  loop_ = 0;
#line 271
  goto ldv_30326;
  ldv_30325: ;
#line 271
  if (dvb_usb_vp7045_debug & 1) {
#line 271
    printk("%02x ", (int )*(buf + (unsigned long )loop_));
  } else {

  }
#line 271
  loop_ = loop_ + 1;
  ldv_30326: ;
#line 271
  if (loop_ < i) {
#line 272
    goto ldv_30325;
  } else {

  }

#line 271
  if (dvb_usb_vp7045_debug & 1) {
#line 271
    printk("\n");
  } else {

  }
#line 272
  return (0);
}
}
#line 275 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static int vp7045_read_mac_addr(struct dvb_usb_device *d , u8 *mac ) 
{ 
  int tmp ;

  {
#line 277
  tmp = vp7045_read_eeprom(d, mac, 6, 7);
#line 277
  return (tmp);
}
}
#line 280 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static int vp7045_frontend_attach(struct dvb_usb_adapter *adap ) 
{ 
  u8 buf[255U] ;
  unsigned int tmp ;

  {
#line 282
  buf[0] = 0U;
#line 282
  tmp = 1U;
#line 282
  while (1) {
#line 282
    if (tmp >= 255U) {
#line 282
      break;
    } else {

    }
#line 282
    buf[tmp] = (unsigned char)0;
#line 282
    tmp = tmp + 1U;
  }
#line 284
  vp7045_usb_op(adap->dev, 12, 0, 0, (u8 *)(& buf), 20, 0);
#line 285
  buf[10] = 0U;
#line 286
  if (dvb_usb_vp7045_debug & 1) {
#line 286
    printk("firmware says: %s ", (u8 *)(& buf));
  } else {

  }
#line 288
  vp7045_usb_op(adap->dev, 13, 0, 0, (u8 *)(& buf), 20, 0);
#line 289
  buf[10] = 0U;
#line 290
  if (dvb_usb_vp7045_debug & 1) {
#line 290
    printk("%s ", (u8 *)(& buf));
  } else {

  }
#line 292
  vp7045_usb_op(adap->dev, 11, 0, 0, (u8 *)(& buf), 20, 0);
#line 293
  buf[10] = 0U;
#line 294
  if (dvb_usb_vp7045_debug & 1) {
#line 294
    printk("v%s\n", (u8 *)(& buf));
  } else {

  }
#line 299
  adap->fe = vp7045_fe_attach(adap->dev);
#line 301
  return (0);
}
}
#line 304
static struct dvb_usb_device_properties vp7045_properties ;
#line 306 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static int vp7045_usb_probe(struct usb_interface *intf , struct usb_device_id  const  *id ) 
{ 
  int tmp ;

  {
#line 309
  tmp = dvb_usb_device_init(intf, & vp7045_properties, & __this_module, 0, (short *)(& adapter_nr));
#line 309
  return (tmp);
}
}
#line 313 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static struct usb_device_id vp7045_usb_table[5U]  = {      {3U, 5075U, 12805U, (unsigned short)0, (unsigned short)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, 0UL}, 
        {3U,
      5075U, 12806U, (unsigned short)0, (unsigned short)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, 0UL}, 
        {3U,
      5075U, 12835U, (unsigned short)0, (unsigned short)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, 0UL}, 
        {3U,
      5075U, 12836U, (unsigned short)0, (unsigned short)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, 0UL}, 
        {0U,
      (unsigned short)0, (unsigned short)0, (unsigned short)0, (unsigned short)0,
      (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0, (unsigned char)0,
      (unsigned char)0, 0UL}};
#line 320 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
struct usb_device_id  const  __mod_usb_device_table  ;
#line 322 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static struct dvb_usb_device_properties vp7045_properties  = 
#line 322
     {0, 3, 0, "dvb-usb-vp7045-01.fw", 0, 0, 1, {{0, 0, 0, 0, 0, & vp7045_frontend_attach,
                                                0, {1, 7, 2, {{4096}}}, 0}}, & vp7045_power_ctrl,
    & vp7045_read_mac_addr, 0, (struct dvb_usb_rc_key *)(& vp7045_rc_keys), 50, & vp7045_rc_query,
    400, 0, 0, 2, {{"Twinhan USB2.0 DVB-T receiver (TwinhanDTV Alpha/MagicBox II)",
                    {(struct usb_device_id *)(& vp7045_usb_table), 0}, {(struct usb_device_id *)(& vp7045_usb_table) + 1UL,
                                                                        0}}, {"DigitalNow TinyUSB 2 DVB-t Receiver",
                                                                              {(struct usb_device_id *)(& vp7045_usb_table) + 2UL,
                                                                               0},
                                                                              {(struct usb_device_id *)(& vp7045_usb_table) + 3UL,
                                                                               0}},
                   {0, {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,
                                                                       0, 0, 0, 0,
                                                                       0, 0, 0, 0,
                                                                       0, 0, 0}}}};
#line 366 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static struct usb_driver vp7045_usb_driver  = 
#line 366
     {"dvb_usb_vp7045", & vp7045_usb_probe, & dvb_usb_device_exit, 0, 0, 0, 0, 0, 0,
    (struct usb_device_id  const  *)(& vp7045_usb_table), {{{0U}, 0U, 0U, 0, {0, 0,
                                                                              0, 0,
                                                                              0UL}},
                                                           {0, 0}}, {{0, 0, 0, 0,
                                                                      0, 0, 0, 0,
                                                                      0, 0, 0, 0},
                                                                     0}, (unsigned char)0,
    (unsigned char)0, (unsigned char)0};
#line 374 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static int vp7045_usb_module_init(void) 
{ 
  int result ;

  {
#line 377
  result = usb_register(& vp7045_usb_driver);
#line 377
  if (result != 0) {
#line 378
    printk("<3>vp7045: usb_register failed. (%d)\n", result);
#line 379
    return (result);
  } else {

  }
#line 382
  return (0);
}
}
#line 385 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
static void vp7045_usb_module_exit(void) 
{ 


  {
#line 388
  usb_deregister(& vp7045_usb_driver);
#line 389
  return;
}
}
#line 415
void ldv_check_final_state(void) ;
#line 418
extern void ldv_check_return_value(int  ) ;
#line 421
extern void ldv_check_return_value_probe(int  ) ;
#line 424
void ldv_initialize(void) ;
#line 427
extern void ldv_handler_precall(void) ;
#line 430
extern int nondet_int(void) ;
#line 433 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
int LDV_IN_INTERRUPT  ;
#line 436 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv_main0_sequence_infinite_withcheck_stateful(void) 
{ 
  struct dvb_usb_adapter *var_group1 ;
  struct dvb_usb_device *var_group2 ;
  int var_vp7045_power_ctrl_2_p1 ;
  u32 *var_vp7045_rc_query_3_p1 ;
  int *var_vp7045_rc_query_3_p2 ;
  struct usb_interface *var_group3 ;
  struct usb_device_id  const  *var_vp7045_usb_probe_6_p1 ;
  int res_vp7045_usb_probe_6 ;
  int ldv_s_vp7045_usb_driver_usb_driver ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 516
  ldv_s_vp7045_usb_driver_usb_driver = 0;
#line 492
  LDV_IN_INTERRUPT = 1;
#line 501
  ldv_initialize();
#line 511
  ldv_handler_precall();
#line 512
  tmp = vp7045_usb_module_init();
#line 512
  if (tmp != 0) {
#line 513
    goto ldv_final;
  } else {

  }
#line 519
  goto ldv_30400;
  ldv_30399: 
#line 523
  tmp___0 = nondet_int();
#line 523
  switch (tmp___0) {
  case 0: 
#line 537
  ldv_handler_precall();
#line 538
  vp7045_frontend_attach(var_group1);
#line 545
  goto ldv_30393;
  case 1: 
#line 558
  ldv_handler_precall();
#line 559
  vp7045_power_ctrl(var_group2, var_vp7045_power_ctrl_2_p1);
#line 566
  goto ldv_30393;
  case 2: 
#line 579
  ldv_handler_precall();
#line 580
  vp7045_rc_query(var_group2, var_vp7045_rc_query_3_p1, var_vp7045_rc_query_3_p2);
#line 587
  goto ldv_30393;
  case 3: ;
#line 591
  if (ldv_s_vp7045_usb_driver_usb_driver == 0) {
#line 600
    res_vp7045_usb_probe_6 = vp7045_usb_probe(var_group3, var_vp7045_usb_probe_6_p1);
#line 601
    ldv_check_return_value(res_vp7045_usb_probe_6);
#line 602
    ldv_check_return_value_probe(res_vp7045_usb_probe_6);
#line 603
    if (res_vp7045_usb_probe_6 != 0) {
#line 604
      goto ldv_module_exit;
    } else {

    }
#line 605
    ldv_s_vp7045_usb_driver_usb_driver = 0;
  } else {

  }
#line 611
  goto ldv_30393;
  default: ;
#line 612
  goto ldv_30393;
  }
  ldv_30393: ;
  ldv_30400: 
#line 519
  tmp___1 = nondet_int();
#line 519
  if (tmp___1 != 0 || ldv_s_vp7045_usb_driver_usb_driver != 0) {
#line 521
    goto ldv_30399;
  } else {

  }

  ldv_module_exit: 
#line 628
  ldv_handler_precall();
#line 629
  vp7045_usb_module_exit();
  ldv_final: 
#line 632
  ldv_check_final_state();
#line 635
  return;
}
}
#line 639 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_1(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 644
  ldv_spin_lock_lock_of_NOT_ARG_SIGN();
#line 646
  __ldv_spin_lock(ldv_func_arg1);
#line 647
  return;
}
}
#line 649 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_2(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 654
  ldv_spin_unlock_lock_of_NOT_ARG_SIGN();
#line 656
  __ldv_spin_unlock(ldv_func_arg1);
#line 657
  return;
}
}
#line 659 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
int ldv___ldv_spin_trylock_3(spinlock_t *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___1 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 664
  tmp = __ldv_spin_trylock(ldv_func_arg1);
#line 664
  ldv_func_res = tmp;
#line 666
  tmp___0 = ldv_spin_trylock_lock_of_NOT_ARG_SIGN();
#line 666
  return (tmp___0);
#line 668
  return (ldv_func_res);
}
}
#line 671 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_4(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 676
  ldv_spin_lock_dcache_lock();
#line 678
  __ldv_spin_lock(ldv_func_arg1);
#line 679
  return;
}
}
#line 681 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_5(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 686
  ldv_spin_lock_d_lock_of_dentry();
#line 688
  __ldv_spin_lock(ldv_func_arg1);
#line 689
  return;
}
}
#line 691 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_6(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 696
  ldv_spin_unlock_d_lock_of_dentry();
#line 698
  __ldv_spin_unlock(ldv_func_arg1);
#line 699
  return;
}
}
#line 701 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_7(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 706
  ldv_spin_unlock_dcache_lock();
#line 708
  __ldv_spin_unlock(ldv_func_arg1);
#line 709
  return;
}
}
#line 711 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_8(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 716
  ldv_spin_lock_d_lock_of_dentry();
#line 718
  __ldv_spin_lock(ldv_func_arg1);
#line 719
  return;
}
}
#line 721 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_9(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 726
  ldv_spin_unlock_d_lock_of_dentry();
#line 728
  __ldv_spin_unlock(ldv_func_arg1);
#line 729
  return;
}
}
#line 731 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_10(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 736
  ldv_spin_lock_i_lock_of_inode();
#line 738
  __ldv_spin_lock(ldv_func_arg1);
#line 739
  return;
}
}
#line 741 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_11(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 746
  ldv_spin_unlock_i_lock_of_inode();
#line 748
  __ldv_spin_unlock(ldv_func_arg1);
#line 749
  return;
}
}
#line 751 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_12(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 756
  ldv_spin_lock_d_lock_of_dentry();
#line 758
  __ldv_spin_lock(ldv_func_arg1);
#line 759
  return;
}
}
#line 761 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_13(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 766
  ldv_spin_unlock_d_lock_of_dentry();
#line 768
  __ldv_spin_unlock(ldv_func_arg1);
#line 769
  return;
}
}
#line 771 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_14(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 776
  ldv_spin_lock_siglock_of_sighand_struct();
#line 778
  __ldv_spin_lock(ldv_func_arg1);
#line 779
  return;
}
}
#line 781 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_15(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 786
  ldv_spin_unlock_siglock_of_sighand_struct();
#line 788
  __ldv_spin_unlock(ldv_func_arg1);
#line 789
  return;
}
}
#line 791 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_16(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 796
  ldv_spin_lock_alloc_lock_of_task_struct();
#line 798
  __ldv_spin_lock(ldv_func_arg1);
#line 799
  return;
}
}
#line 801 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_17(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 806
  ldv_spin_unlock_alloc_lock_of_task_struct();
#line 808
  __ldv_spin_unlock(ldv_func_arg1);
#line 809
  return;
}
}
#line 811 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_18(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 816
  ldv_spin_unlock_siglock_of_sighand_struct();
#line 818
  __ldv_spin_unlock(ldv_func_arg1);
#line 819
  return;
}
}
#line 821 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_19(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 826
  ldv_spin_lock__xmit_lock_of_netdev_queue();
#line 828
  __ldv_spin_lock(ldv_func_arg1);
#line 829
  return;
}
}
#line 831 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_20(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 836
  ldv_spin_lock__xmit_lock_of_netdev_queue();
#line 838
  __ldv_spin_lock(ldv_func_arg1);
#line 839
  return;
}
}
#line 841 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
int ldv___ldv_spin_trylock_21(spinlock_t *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___19 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 846
  tmp = __ldv_spin_trylock(ldv_func_arg1);
#line 846
  ldv_func_res = tmp;
#line 848
  tmp___0 = ldv_spin_trylock__xmit_lock_of_netdev_queue();
#line 848
  return (tmp___0);
#line 850
  return (ldv_func_res);
}
}
#line 853 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_22(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 858
  ldv_spin_unlock__xmit_lock_of_netdev_queue();
#line 860
  __ldv_spin_unlock(ldv_func_arg1);
#line 861
  return;
}
}
#line 863 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_23(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 868
  ldv_spin_unlock__xmit_lock_of_netdev_queue();
#line 870
  __ldv_spin_unlock(ldv_func_arg1);
#line 871
  return;
}
}
#line 873 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_24(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 878
  ldv_spin_lock_tx_global_lock_of_net_device();
#line 880
  __ldv_spin_lock(ldv_func_arg1);
#line 881
  return;
}
}
#line 883 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_25(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 888
  ldv_spin_unlock_tx_global_lock_of_net_device();
#line 890
  __ldv_spin_unlock(ldv_func_arg1);
#line 891
  return;
}
}
#line 893 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_26(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 898
  ldv_spin_lock_addr_list_lock_of_net_device();
#line 900
  __ldv_spin_lock(ldv_func_arg1);
#line 901
  return;
}
}
#line 903 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_lock_27(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 908
  ldv_spin_lock_addr_list_lock_of_net_device();
#line 910
  __ldv_spin_lock(ldv_func_arg1);
#line 911
  return;
}
}
#line 913 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_28(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 918
  ldv_spin_unlock_addr_list_lock_of_net_device();
#line 920
  __ldv_spin_unlock(ldv_func_arg1);
#line 921
  return;
}
}
#line 923 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045.c.prepared"
void ldv___ldv_spin_unlock_29(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 928
  ldv_spin_unlock_addr_list_lock_of_net_device();
#line 930
  __ldv_spin_unlock(ldv_func_arg1);
#line 931
  return;
}
}
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 9 "include/asm-generic/getorder.h"
__inline static int get_order(unsigned long size ) 
{ 
  int order ;

  {
#line 13
  size = (size - 1UL) >> 11;
#line 14
  order = -1;
  ldv_1690: 
#line 16
  size = size >> 1;
#line 17
  order = order + 1;
#line 18
  if (size != 0UL) {
#line 19
    goto ldv_1690;
  } else {

  }

#line 19
  return (order);
}
}
#line 34 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/string_64.h"
extern void *__memcpy(void * , void const   * , size_t  ) ;
#line 8 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_59(spinlock_t *ldv_func_arg1 ) ;
#line 12
void ldv___ldv_spin_lock_62(spinlock_t *ldv_func_arg1 ) ;
#line 16
void ldv___ldv_spin_lock_63(spinlock_t *ldv_func_arg1 ) ;
#line 20
void ldv___ldv_spin_lock_66(spinlock_t *ldv_func_arg1 ) ;
#line 24
void ldv___ldv_spin_lock_68(spinlock_t *ldv_func_arg1 ) ;
#line 28
void ldv___ldv_spin_lock_70(spinlock_t *ldv_func_arg1 ) ;
#line 32
void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1 ) ;
#line 36
void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1 ) ;
#line 40
void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1 ) ;
#line 44
void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1 ) ;
#line 48
void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1 ) ;
#line 52
void ldv___ldv_spin_lock_84(spinlock_t *ldv_func_arg1 ) ;
#line 56
void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1 ) ;
#line 61
void ldv___ldv_spin_unlock_60(spinlock_t *ldv_func_arg1 ) ;
#line 65
void ldv___ldv_spin_unlock_64(spinlock_t *ldv_func_arg1 ) ;
#line 69
void ldv___ldv_spin_unlock_65(spinlock_t *ldv_func_arg1 ) ;
#line 73
void ldv___ldv_spin_unlock_67(spinlock_t *ldv_func_arg1 ) ;
#line 77
void ldv___ldv_spin_unlock_69(spinlock_t *ldv_func_arg1 ) ;
#line 81
void ldv___ldv_spin_unlock_71(spinlock_t *ldv_func_arg1 ) ;
#line 85
void ldv___ldv_spin_unlock_73(spinlock_t *ldv_func_arg1 ) ;
#line 89
void ldv___ldv_spin_unlock_75(spinlock_t *ldv_func_arg1 ) ;
#line 93
void ldv___ldv_spin_unlock_76(spinlock_t *ldv_func_arg1 ) ;
#line 97
void ldv___ldv_spin_unlock_80(spinlock_t *ldv_func_arg1 ) ;
#line 101
void ldv___ldv_spin_unlock_81(spinlock_t *ldv_func_arg1 ) ;
#line 105
void ldv___ldv_spin_unlock_83(spinlock_t *ldv_func_arg1 ) ;
#line 109
void ldv___ldv_spin_unlock_86(spinlock_t *ldv_func_arg1 ) ;
#line 113
void ldv___ldv_spin_unlock_87(spinlock_t *ldv_func_arg1 ) ;
#line 118
int ldv___ldv_spin_trylock_61(spinlock_t *ldv_func_arg1 ) ;
#line 122
int ldv___ldv_spin_trylock_79(spinlock_t *ldv_func_arg1 ) ;
#line 314 "include/linux/gfp.h"
extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
#line 194 "include/linux/rcupdate.h"
__inline static void rcu_read_lock_sched_notrace(void) 
{ 


  {
#line 198
  return;
}
}
#line 138 "include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 79 "include/trace/events/kmem.h"
extern struct tracepoint __tracepoint_kmalloc ;
#line 79 "include/trace/events/kmem.h"
__inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
                                   size_t bytes_alloc , gfp_t gfp_flags ) 
{ 
  void **it_func ;
  void **_________p1 ;
  long tmp ;

  {
#line 47
  tmp = __builtin_expect(__tracepoint_kmalloc.state != 0, 0L);
#line 47
  if (tmp != 0L) {
#line 47
    rcu_read_lock_sched_notrace();
#line 47
    _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
#line 47
    it_func = _________p1;
#line 47
    if ((unsigned long )it_func != (unsigned long )((void **)0)) {
      ldv_10398: 
#line 47
      (*((void (*)(unsigned long  , void const   * , size_t  , size_t  , gfp_t  ))*it_func))(call_site,
                                                                                             ptr,
                                                                                             bytes_req,
                                                                                             bytes_alloc,
                                                                                             gfp_flags);
#line 47
      it_func = it_func + 1;
#line 47
      if ((unsigned long )*it_func != (unsigned long )((void *)0)) {
#line 48
        goto ldv_10398;
      } else {

      }

    } else {

    }
#line 47
    rcu_read_lock_sched_notrace();
  } else {

  }
#line 49
  return;
}
}
#line 27 "include/linux/kmemleak.h"
extern void kmemleak_alloc(void const   * , size_t  , int  , gfp_t  ) ;
#line 142 "include/linux/slub_def.h"
extern struct kmem_cache kmalloc_caches[14U] ;
#line 148 "include/linux/slub_def.h"
__inline static int kmalloc_index(size_t size ) 
{ 


  {
#line 150
  if (size == 0UL) {
#line 151
    return (0);
  } else {

  }
#line 153
  if (size <= 8UL) {
#line 154
    return (3);
  } else {

  }
#line 157
  if (size > 64UL && size <= 96UL) {
#line 158
    return (1);
  } else {

  }
#line 159
  if (size > 128UL && size <= 192UL) {
#line 160
    return (2);
  } else {

  }
#line 162
  if (size <= 8UL) {
#line 162
    return (3);
  } else {

  }
#line 163
  if (size <= 16UL) {
#line 163
    return (4);
  } else {

  }
#line 164
  if (size <= 32UL) {
#line 164
    return (5);
  } else {

  }
#line 165
  if (size <= 64UL) {
#line 165
    return (6);
  } else {

  }
#line 166
  if (size <= 128UL) {
#line 166
    return (7);
  } else {

  }
#line 167
  if (size <= 256UL) {
#line 167
    return (8);
  } else {

  }
#line 168
  if (size <= 512UL) {
#line 168
    return (9);
  } else {

  }
#line 169
  if (size <= 1024UL) {
#line 169
    return (10);
  } else {

  }
#line 170
  if (size <= 2048UL) {
#line 170
    return (11);
  } else {

  }
#line 171
  if (size <= 4096UL) {
#line 171
    return (12);
  } else {

  }
#line 176
  if (size <= 8192UL) {
#line 176
    return (13);
  } else {

  }
#line 177
  if (size <= 16384UL) {
#line 177
    return (14);
  } else {

  }
#line 178
  if (size <= 32768UL) {
#line 178
    return (15);
  } else {

  }
#line 179
  if (size <= 65536UL) {
#line 179
    return (16);
  } else {

  }
#line 180
  if (size <= 131072UL) {
#line 180
    return (17);
  } else {

  }
#line 181
  if (size <= 262144UL) {
#line 181
    return (18);
  } else {

  }
#line 182
  if (size <= 524288UL) {
#line 182
    return (19);
  } else {

  }
#line 183
  if (size <= 1048576UL) {
#line 183
    return (20);
  } else {

  }
#line 184
  if (size <= 2097152UL) {
#line 184
    return (21);
  } else {

  }
#line 185
  return (-1);
}
}
#line 202 "include/linux/slub_def.h"
__inline static struct kmem_cache *kmalloc_slab(size_t size ) 
{ 
  int index ;
  int tmp ;

  {
#line 204
  tmp = kmalloc_index(size);
#line 204
  index = tmp;
#line 206
  if (index == 0) {
#line 207
    return (0);
  } else {

  }
#line 209
  return ((struct kmem_cache *)(& kmalloc_caches) + (unsigned long )index);
}
}
#line 219
extern void *kmem_cache_alloc(struct kmem_cache * , gfp_t  ) ;
#line 220
extern void *__kmalloc(size_t  , gfp_t  ) ;
#line 226 "include/linux/slub_def.h"
__inline static void *kmem_cache_alloc_notrace(struct kmem_cache *s , gfp_t gfpflags ) 
{ 
  void *tmp ;

  {
#line 228
  tmp = kmem_cache_alloc(s, gfpflags);
#line 228
  return (tmp);
}
}
#line 232 "include/linux/slub_def.h"
__inline static void *kmalloc_large(size_t size , gfp_t flags ) 
{ 
  unsigned int order ;
  int tmp ;
  void *ret ;
  unsigned long tmp___0 ;

  {
#line 234
  tmp = get_order(size);
#line 234
  order = (unsigned int )tmp;
#line 235
  tmp___0 = __get_free_pages(flags | 16384U, order);
#line 235
  ret = (void *)tmp___0;
#line 237
  kmemleak_alloc((void const   *)ret, size, 1, flags);
#line 238
  trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, 4096UL << (int )order,
                flags);
#line 240
  return (ret);
}
}
#line 243 "include/linux/slub_def.h"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *ret ;
  void *tmp ;
  struct kmem_cache *s ;
  struct kmem_cache *tmp___0 ;
  void *tmp___1 ;

  {
#line 247
  if (0) {
#line 248
    if (size > 8192UL) {
#line 249
      tmp = kmalloc_large(size, flags);
#line 249
      return (tmp);
    } else {

    }
#line 251
    if ((flags & 1U) == 0U) {
#line 252
      tmp___0 = kmalloc_slab(size);
#line 252
      s = tmp___0;
#line 254
      if ((unsigned long )s == (unsigned long )((struct kmem_cache *)0)) {
#line 255
        return (16);
      } else {

      }
#line 257
      ret = kmem_cache_alloc_notrace(s, flags);
#line 259
      trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, (size_t )s->size,
                    flags);
#line 261
      return (ret);
    } else {

    }
  } else {

  }
#line 264
  tmp___1 = __kmalloc(size, flags);
#line 264
  return (tmp___1);
}
}
#line 313 "include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 315
  tmp = kmalloc(size, flags | 32768U);
#line 315
  return (tmp);
}
}
#line 113 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_read_status(struct dvb_frontend *fe , fe_status_t *status ) 
{ 
  struct vp7045_fe_state *state ;
  u8 s0 ;
  u8 tmp ;
  u8 s1 ;
  u8 tmp___0 ;
  u8 s3 ;
  u8 tmp___1 ;

  {
#line 115
  state = (struct vp7045_fe_state *)fe->demodulator_priv;
#line 116
  tmp = vp7045_read_reg(state->d, 0);
#line 116
  s0 = tmp;
#line 117
  tmp___0 = vp7045_read_reg(state->d, 1);
#line 117
  s1 = tmp___0;
#line 118
  tmp___1 = vp7045_read_reg(state->d, 3);
#line 118
  s3 = tmp___1;
#line 120
  *status = 0;
#line 121
  if (((int )s0 & 16) != 0) {
#line 122
    *status = (fe_status_t )((unsigned int )*status | 2U);
  } else {

  }
#line 123
  if (((int )s0 & 2) != 0) {
#line 124
    *status = (fe_status_t )((unsigned int )*status | 4U);
  } else {

  }
#line 125
  if (((int )s0 & 32) != 0) {
#line 126
    *status = (fe_status_t )((unsigned int )*status | 16U);
  } else {

  }
#line 127
  if (((int )s1 & 2) != 0) {
#line 128
    *status = (fe_status_t )((unsigned int )*status | 8U);
  } else {

  }
#line 129
  if (((int )s3 & 64) != 0) {
#line 130
    *status = (fe_status_t )((unsigned int )*status | 1U);
  } else {

  }
#line 132
  if (((unsigned int )*status & 14U) != 14U) {
#line 134
    *status = (fe_status_t )((unsigned int )*status & 4294967279U);
  } else {

  }
#line 136
  return (0);
}
}
#line 139 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_read_ber(struct dvb_frontend *fe , u32 *ber ) 
{ 
  struct vp7045_fe_state *state ;
  u8 tmp ;
  u8 tmp___0 ;
  u8 tmp___1 ;

  {
#line 141
  state = (struct vp7045_fe_state *)fe->demodulator_priv;
#line 142
  tmp = vp7045_read_reg(state->d, 13);
#line 142
  tmp___0 = vp7045_read_reg(state->d, 14);
#line 142
  tmp___1 = vp7045_read_reg(state->d, 15);
#line 142
  *ber = (u32 )((((int )tmp << 16) | ((int )tmp___0 << 8)) | (int )tmp___1);
#line 145
  return (0);
}
}
#line 148 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_read_unc_blocks(struct dvb_frontend *fe , u32 *unc ) 
{ 
  struct vp7045_fe_state *state ;
  u8 tmp ;
  u8 tmp___0 ;

  {
#line 150
  state = (struct vp7045_fe_state *)fe->demodulator_priv;
#line 151
  tmp = vp7045_read_reg(state->d, 16);
#line 151
  tmp___0 = vp7045_read_reg(state->d, 17);
#line 151
  *unc = (u32 )(((int )tmp << 8) | (int )tmp___0);
#line 153
  return (0);
}
}
#line 156 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_read_signal_strength(struct dvb_frontend *fe , u16 *strength ) 
{ 
  struct vp7045_fe_state *state ;
  u16 signal ;
  u8 tmp ;
  u8 tmp___0 ;

  {
#line 158
  state = (struct vp7045_fe_state *)fe->demodulator_priv;
#line 159
  tmp = vp7045_read_reg(state->d, 20);
#line 159
  tmp___0 = vp7045_read_reg(state->d, 21);
#line 159
  signal = (u16 )((int )((short )((int )tmp << 8)) | (int )((short )tmp___0));
#line 162
  *strength = ~ ((int )signal);
#line 163
  return (0);
}
}
#line 166 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_read_snr(struct dvb_frontend *fe , u16 *snr ) 
{ 
  struct vp7045_fe_state *state ;
  u8 _snr ;
  u8 tmp ;

  {
#line 168
  state = (struct vp7045_fe_state *)fe->demodulator_priv;
#line 169
  tmp = vp7045_read_reg(state->d, 9);
#line 169
  _snr = tmp;
#line 170
  *snr = (u16 )((int )((short )((int )_snr << 8)) | (int )((short )_snr));
#line 171
  return (0);
}
}
#line 174 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_init(struct dvb_frontend *fe ) 
{ 


  {
#line 176
  return (0);
}
}
#line 179 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_sleep(struct dvb_frontend *fe ) 
{ 


  {
#line 181
  return (0);
}
}
#line 184 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_get_tune_settings(struct dvb_frontend *fe , struct dvb_frontend_tune_settings *tune ) 
{ 


  {
#line 186
  tune->min_delay_ms = 800;
#line 187
  return (0);
}
}
#line 190 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_set_frontend(struct dvb_frontend *fe , struct dvb_frontend_parameters *fep ) 
{ 
  struct vp7045_fe_state *state ;
  u8 buf[5U] ;
  u32 freq ;

  {
#line 193
  state = (struct vp7045_fe_state *)fe->demodulator_priv;
#line 195
  freq = fep->frequency / 1000U;
#line 197
  buf[0] = (u8 )(freq >> 16);
#line 198
  buf[1] = (u8 )(freq >> 8);
#line 199
  buf[2] = (u8 )freq;
#line 200
  buf[3] = 0U;
#line 202
  switch ((unsigned int )fep->u.ofdm.bandwidth) {
  case 0U: 
#line 203
  buf[4] = 8U;
#line 203
  goto ldv_30298;
  case 1U: 
#line 204
  buf[4] = 7U;
#line 204
  goto ldv_30298;
  case 2U: 
#line 205
  buf[4] = 6U;
#line 205
  goto ldv_30298;
  case 3U: ;
#line 206
  return (-95);
  default: ;
#line 208
  return (-22);
  }
  ldv_30298: 
#line 211
  vp7045_usb_op(state->d, 9, (u8 *)(& buf), 5, 0, 0, 200);
#line 212
  return (0);
}
}
#line 215 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static int vp7045_fe_get_frontend(struct dvb_frontend *fe , struct dvb_frontend_parameters *fep ) 
{ 


  {
#line 218
  return (0);
}
}
#line 221 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static void vp7045_fe_release(struct dvb_frontend *fe ) 
{ 
  struct vp7045_fe_state *state ;

  {
#line 223
  state = (struct vp7045_fe_state *)fe->demodulator_priv;
#line 224
  kfree((void const   *)state);
#line 225
  return;
}
}
#line 227
static struct dvb_frontend_ops vp7045_fe_ops ;
#line 229 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
struct dvb_frontend *vp7045_fe_attach(struct dvb_usb_device *d ) 
{ 
  struct vp7045_fe_state *s ;
  void *tmp ;
  size_t __len ;
  void *__ret ;

  {
#line 231
  tmp = kzalloc(896UL, 208U);
#line 231
  s = (struct vp7045_fe_state *)tmp;
#line 232
  if ((unsigned long )s == (unsigned long )((struct vp7045_fe_state *)0)) {
#line 233
    goto error;
  } else {

  }
#line 235
  s->d = d;
#line 236
  __len = 752UL;
#line 236
  if (__len > 63UL) {
#line 236
    __ret = __memcpy((void *)(& s->fe.ops), (void const   *)(& vp7045_fe_ops), __len);
  } else {
#line 236
    __ret = __builtin_memcpy((void *)(& s->fe.ops), (void const   *)(& vp7045_fe_ops),
                             __len);
  }
#line 237
  s->fe.demodulator_priv = (void *)s;
#line 239
  return (& s->fe);
  error: ;
#line 241
  return (0);
}
}
#line 245 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
static struct dvb_frontend_ops vp7045_fe_ops  = 
#line 245
     {{{'T', 'w', 'i', 'n', 'h', 'a', 'n', ' ', 'V', 'P', '7', '0', '4', '5', '/', '4',
      '6', ' ', 'U', 'S', 'B', ' ', 'D', 'V', 'B', '-', 'T', '\000'}, FE_OFDM, 44250000U,
     867250000U, 1000U, 0U, 0U, 0U, 0U, 0U, 1075523247}, & vp7045_fe_release, 0, & vp7045_fe_init,
    & vp7045_fe_sleep, 0, 0, 0, & vp7045_fe_set_frontend, & vp7045_fe_get_tune_settings,
    & vp7045_fe_get_frontend, & vp7045_fe_read_status, & vp7045_fe_read_ber, & vp7045_fe_read_signal_strength,
    & vp7045_fe_read_snr, & vp7045_fe_read_unc_blocks, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, {{{(char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0,
                (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0, (char)0},
               0U, 0U, 0U, 0U, 0U, 0U}, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
              0}, {{0}, 0, 0, 0, 0, 0, 0, 0, 0, 0}, 0, 0};
#line 315 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv_main1_sequence_infinite_withcheck_stateful(void) 
{ 
  struct dvb_frontend *var_group1 ;
  struct dvb_frontend_parameters *var_group2 ;
  struct dvb_frontend_tune_settings *var_group3 ;
  fe_status_t *var_vp7045_fe_read_status_0_p1 ;
  u32 *var_vp7045_fe_read_ber_1_p1 ;
  u16 *var_vp7045_fe_read_signal_strength_3_p1 ;
  u16 *var_vp7045_fe_read_snr_4_p1 ;
  u32 *var_vp7045_fe_read_unc_blocks_2_p1 ;
  int ldv_s_vp7045_fe_ops_dvb_frontend_ops ;
  int tmp ;
  int tmp___0 ;

  {
#line 377
  ldv_s_vp7045_fe_ops_dvb_frontend_ops = 0;
#line 367
  LDV_IN_INTERRUPT = 1;
#line 376
  ldv_initialize();
#line 381
  goto ldv_30360;
  ldv_30359: 
#line 385
  tmp = nondet_int();
#line 385
  switch (tmp) {
  case 0: ;
#line 390
  if (ldv_s_vp7045_fe_ops_dvb_frontend_ops == 0) {
#line 395
    ldv_handler_precall();
#line 396
    vp7045_fe_release(var_group1);
#line 397
    ldv_s_vp7045_fe_ops_dvb_frontend_ops = 0;
  } else {

  }
#line 403
  goto ldv_30347;
  case 1: 
#line 412
  ldv_handler_precall();
#line 413
  vp7045_fe_init(var_group1);
#line 420
  goto ldv_30347;
  case 2: 
#line 429
  ldv_handler_precall();
#line 430
  vp7045_fe_sleep(var_group1);
#line 437
  goto ldv_30347;
  case 3: 
#line 446
  ldv_handler_precall();
#line 447
  vp7045_fe_set_frontend(var_group1, var_group2);
#line 454
  goto ldv_30347;
  case 4: 
#line 463
  ldv_handler_precall();
#line 464
  vp7045_fe_get_frontend(var_group1, var_group2);
#line 471
  goto ldv_30347;
  case 5: 
#line 480
  ldv_handler_precall();
#line 481
  vp7045_fe_get_tune_settings(var_group1, var_group3);
#line 488
  goto ldv_30347;
  case 6: 
#line 497
  ldv_handler_precall();
#line 498
  vp7045_fe_read_status(var_group1, var_vp7045_fe_read_status_0_p1);
#line 505
  goto ldv_30347;
  case 7: 
#line 514
  ldv_handler_precall();
#line 515
  vp7045_fe_read_ber(var_group1, var_vp7045_fe_read_ber_1_p1);
#line 522
  goto ldv_30347;
  case 8: 
#line 531
  ldv_handler_precall();
#line 532
  vp7045_fe_read_signal_strength(var_group1, var_vp7045_fe_read_signal_strength_3_p1);
#line 539
  goto ldv_30347;
  case 9: 
#line 548
  ldv_handler_precall();
#line 549
  vp7045_fe_read_snr(var_group1, var_vp7045_fe_read_snr_4_p1);
#line 556
  goto ldv_30347;
  case 10: 
#line 565
  ldv_handler_precall();
#line 566
  vp7045_fe_read_unc_blocks(var_group1, var_vp7045_fe_read_unc_blocks_2_p1);
#line 573
  goto ldv_30347;
  default: ;
#line 574
  goto ldv_30347;
  }
  ldv_30347: ;
  ldv_30360: 
#line 381
  tmp___0 = nondet_int();
#line 381
  if (tmp___0 != 0 || ldv_s_vp7045_fe_ops_dvb_frontend_ops != 0) {
#line 383
    goto ldv_30359;
  } else {

  }


#line 583
  ldv_check_final_state();
#line 586
  return;
}
}
#line 590 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_59(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 595
  ldv_spin_lock_lock_of_NOT_ARG_SIGN();
#line 597
  __ldv_spin_lock(ldv_func_arg1);
#line 598
  return;
}
}
#line 600 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_60(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 605
  ldv_spin_unlock_lock_of_NOT_ARG_SIGN();
#line 607
  __ldv_spin_unlock(ldv_func_arg1);
#line 608
  return;
}
}
#line 610 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
int ldv___ldv_spin_trylock_61(spinlock_t *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___1 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 615
  tmp = __ldv_spin_trylock(ldv_func_arg1);
#line 615
  ldv_func_res = tmp;
#line 617
  tmp___0 = ldv_spin_trylock_lock_of_NOT_ARG_SIGN();
#line 617
  return (tmp___0);
#line 619
  return (ldv_func_res);
}
}
#line 622 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_62(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 627
  ldv_spin_lock_dcache_lock();
#line 629
  __ldv_spin_lock(ldv_func_arg1);
#line 630
  return;
}
}
#line 632 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_63(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 637
  ldv_spin_lock_d_lock_of_dentry();
#line 639
  __ldv_spin_lock(ldv_func_arg1);
#line 640
  return;
}
}
#line 642 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_64(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 647
  ldv_spin_unlock_d_lock_of_dentry();
#line 649
  __ldv_spin_unlock(ldv_func_arg1);
#line 650
  return;
}
}
#line 652 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_65(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 657
  ldv_spin_unlock_dcache_lock();
#line 659
  __ldv_spin_unlock(ldv_func_arg1);
#line 660
  return;
}
}
#line 662 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_66(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 667
  ldv_spin_lock_d_lock_of_dentry();
#line 669
  __ldv_spin_lock(ldv_func_arg1);
#line 670
  return;
}
}
#line 672 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_67(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 677
  ldv_spin_unlock_d_lock_of_dentry();
#line 679
  __ldv_spin_unlock(ldv_func_arg1);
#line 680
  return;
}
}
#line 682 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_68(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 687
  ldv_spin_lock_i_lock_of_inode();
#line 689
  __ldv_spin_lock(ldv_func_arg1);
#line 690
  return;
}
}
#line 692 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_69(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 697
  ldv_spin_unlock_i_lock_of_inode();
#line 699
  __ldv_spin_unlock(ldv_func_arg1);
#line 700
  return;
}
}
#line 702 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_70(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 707
  ldv_spin_lock_d_lock_of_dentry();
#line 709
  __ldv_spin_lock(ldv_func_arg1);
#line 710
  return;
}
}
#line 712 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_71(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 717
  ldv_spin_unlock_d_lock_of_dentry();
#line 719
  __ldv_spin_unlock(ldv_func_arg1);
#line 720
  return;
}
}
#line 722 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_72(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 727
  ldv_spin_lock_siglock_of_sighand_struct();
#line 729
  __ldv_spin_lock(ldv_func_arg1);
#line 730
  return;
}
}
#line 732 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_73(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 737
  ldv_spin_unlock_siglock_of_sighand_struct();
#line 739
  __ldv_spin_unlock(ldv_func_arg1);
#line 740
  return;
}
}
#line 742 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_74(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 747
  ldv_spin_lock_alloc_lock_of_task_struct();
#line 749
  __ldv_spin_lock(ldv_func_arg1);
#line 750
  return;
}
}
#line 752 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_75(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 757
  ldv_spin_unlock_alloc_lock_of_task_struct();
#line 759
  __ldv_spin_unlock(ldv_func_arg1);
#line 760
  return;
}
}
#line 762 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_76(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 767
  ldv_spin_unlock_siglock_of_sighand_struct();
#line 769
  __ldv_spin_unlock(ldv_func_arg1);
#line 770
  return;
}
}
#line 772 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_77(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 777
  ldv_spin_lock__xmit_lock_of_netdev_queue();
#line 779
  __ldv_spin_lock(ldv_func_arg1);
#line 780
  return;
}
}
#line 782 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_78(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 787
  ldv_spin_lock__xmit_lock_of_netdev_queue();
#line 789
  __ldv_spin_lock(ldv_func_arg1);
#line 790
  return;
}
}
#line 792 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
int ldv___ldv_spin_trylock_79(spinlock_t *ldv_func_arg1 ) 
{ 
  ldv_func_ret_type___19 ldv_func_res ;
  int tmp ;
  int tmp___0 ;

  {
#line 797
  tmp = __ldv_spin_trylock(ldv_func_arg1);
#line 797
  ldv_func_res = tmp;
#line 799
  tmp___0 = ldv_spin_trylock__xmit_lock_of_netdev_queue();
#line 799
  return (tmp___0);
#line 801
  return (ldv_func_res);
}
}
#line 804 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_80(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 809
  ldv_spin_unlock__xmit_lock_of_netdev_queue();
#line 811
  __ldv_spin_unlock(ldv_func_arg1);
#line 812
  return;
}
}
#line 814 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_81(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 819
  ldv_spin_unlock__xmit_lock_of_netdev_queue();
#line 821
  __ldv_spin_unlock(ldv_func_arg1);
#line 822
  return;
}
}
#line 824 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_82(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 829
  ldv_spin_lock_tx_global_lock_of_net_device();
#line 831
  __ldv_spin_lock(ldv_func_arg1);
#line 832
  return;
}
}
#line 834 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_83(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 839
  ldv_spin_unlock_tx_global_lock_of_net_device();
#line 841
  __ldv_spin_unlock(ldv_func_arg1);
#line 842
  return;
}
}
#line 844 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_84(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 849
  ldv_spin_lock_addr_list_lock_of_net_device();
#line 851
  __ldv_spin_lock(ldv_func_arg1);
#line 852
  return;
}
}
#line 854 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_lock_85(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 859
  ldv_spin_lock_addr_list_lock_of_net_device();
#line 861
  __ldv_spin_lock(ldv_func_arg1);
#line 862
  return;
}
}
#line 864 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_86(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 869
  ldv_spin_unlock_addr_list_lock_of_net_device();
#line 871
  __ldv_spin_unlock(ldv_func_arg1);
#line 872
  return;
}
}
#line 874 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/dscv/ri/39_7a/drivers/media/dvb/dvb-usb/vp7045-fe.c.prepared"
void ldv___ldv_spin_unlock_87(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 879
  ldv_spin_unlock_addr_list_lock_of_net_device();
#line 881
  __ldv_spin_unlock(ldv_func_arg1);
#line 882
  return;
}
}
#line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
__inline static void ldv_error(void) 
{ 


  {
  LDV_ERROR: 
#line 12
  goto LDV_ERROR;
}
}
#line 25
extern int ldv_undef_int(void) ;
#line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 51
  return (exp);
}
}
#line 8 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin__xmit_lock_of_netdev_queue  ;
#line 11 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock__xmit_lock_of_netdev_queue(void) 
{ 


  {
#line 14
  if (ldv_spin__xmit_lock_of_netdev_queue == 1) {

  } else {
#line 14
    ldv_error();
  }
#line 16
  ldv_spin__xmit_lock_of_netdev_queue = 2;
#line 17
  return;
}
}
#line 20 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock__xmit_lock_of_netdev_queue(void) 
{ 


  {
#line 23
  if (ldv_spin__xmit_lock_of_netdev_queue == 2) {

  } else {
#line 23
    ldv_error();
  }
#line 25
  ldv_spin__xmit_lock_of_netdev_queue = 1;
#line 26
  return;
}
}
#line 29 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock__xmit_lock_of_netdev_queue(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 34
  if (ldv_spin__xmit_lock_of_netdev_queue == 1) {

  } else {
#line 34
    ldv_error();
  }
#line 37
  is_spin_held_by_another_thread = ldv_undef_int();
#line 40
  if (is_spin_held_by_another_thread) {
#line 43
    return (0);
  } else {
#line 48
    ldv_spin__xmit_lock_of_netdev_queue = 2;
#line 50
    return (1);
  }
}
}
#line 55 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait__xmit_lock_of_netdev_queue(void) 
{ 


  {
#line 58
  if (ldv_spin__xmit_lock_of_netdev_queue == 1) {

  } else {
#line 58
    ldv_error();
  }
#line 59
  return;
}
}
#line 62 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked__xmit_lock_of_netdev_queue(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 67
  is_spin_held_by_another_thread = ldv_undef_int();
#line 70
  if (ldv_spin__xmit_lock_of_netdev_queue == 1 && ! is_spin_held_by_another_thread) {
#line 73
    return (0);
  } else {
#line 78
    return (1);
  }
}
}
#line 83 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock__xmit_lock_of_netdev_queue(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 86
  tmp = ldv_spin_is_locked__xmit_lock_of_netdev_queue();
#line 86
  if (tmp) {
#line 86
    tmp___0 = 0;
  } else {
#line 86
    tmp___0 = 1;
  }
#line 86
  return (tmp___0);
}
}
#line 90 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended__xmit_lock_of_netdev_queue(void) 
{ 
  int is_spin_contended ;

  {
#line 95
  is_spin_contended = ldv_undef_int();
#line 98
  if (is_spin_contended) {
#line 101
    return (0);
  } else {
#line 106
    return (1);
  }
}
}
#line 111 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock__xmit_lock_of_netdev_queue(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 116
  if (ldv_spin__xmit_lock_of_netdev_queue == 1) {

  } else {
#line 116
    ldv_error();
  }
#line 119
  atomic_value_after_dec = ldv_undef_int();
#line 122
  if (atomic_value_after_dec == 0) {
#line 125
    ldv_spin__xmit_lock_of_netdev_queue = 2;
#line 127
    return (1);
  } else {

  }
#line 131
  return (0);
}
}
#line 133 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_addr_list_lock_of_net_device  ;
#line 136 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_addr_list_lock_of_net_device(void) 
{ 


  {
#line 139
  if (ldv_spin_addr_list_lock_of_net_device == 1) {

  } else {
#line 139
    ldv_error();
  }
#line 141
  ldv_spin_addr_list_lock_of_net_device = 2;
#line 142
  return;
}
}
#line 145 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_addr_list_lock_of_net_device(void) 
{ 


  {
#line 148
  if (ldv_spin_addr_list_lock_of_net_device == 2) {

  } else {
#line 148
    ldv_error();
  }
#line 150
  ldv_spin_addr_list_lock_of_net_device = 1;
#line 151
  return;
}
}
#line 154 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_addr_list_lock_of_net_device(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 159
  if (ldv_spin_addr_list_lock_of_net_device == 1) {

  } else {
#line 159
    ldv_error();
  }
#line 162
  is_spin_held_by_another_thread = ldv_undef_int();
#line 165
  if (is_spin_held_by_another_thread) {
#line 168
    return (0);
  } else {
#line 173
    ldv_spin_addr_list_lock_of_net_device = 2;
#line 175
    return (1);
  }
}
}
#line 180 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_addr_list_lock_of_net_device(void) 
{ 


  {
#line 183
  if (ldv_spin_addr_list_lock_of_net_device == 1) {

  } else {
#line 183
    ldv_error();
  }
#line 184
  return;
}
}
#line 187 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_addr_list_lock_of_net_device(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 192
  is_spin_held_by_another_thread = ldv_undef_int();
#line 195
  if (ldv_spin_addr_list_lock_of_net_device == 1 && ! is_spin_held_by_another_thread) {
#line 198
    return (0);
  } else {
#line 203
    return (1);
  }
}
}
#line 208 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_addr_list_lock_of_net_device(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 211
  tmp = ldv_spin_is_locked_addr_list_lock_of_net_device();
#line 211
  if (tmp) {
#line 211
    tmp___0 = 0;
  } else {
#line 211
    tmp___0 = 1;
  }
#line 211
  return (tmp___0);
}
}
#line 215 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_addr_list_lock_of_net_device(void) 
{ 
  int is_spin_contended ;

  {
#line 220
  is_spin_contended = ldv_undef_int();
#line 223
  if (is_spin_contended) {
#line 226
    return (0);
  } else {
#line 231
    return (1);
  }
}
}
#line 236 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_addr_list_lock_of_net_device(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 241
  if (ldv_spin_addr_list_lock_of_net_device == 1) {

  } else {
#line 241
    ldv_error();
  }
#line 244
  atomic_value_after_dec = ldv_undef_int();
#line 247
  if (atomic_value_after_dec == 0) {
#line 250
    ldv_spin_addr_list_lock_of_net_device = 2;
#line 252
    return (1);
  } else {

  }
#line 256
  return (0);
}
}
#line 258 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_alloc_lock_of_task_struct  ;
#line 261 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_alloc_lock_of_task_struct(void) 
{ 


  {
#line 264
  if (ldv_spin_alloc_lock_of_task_struct == 1) {

  } else {
#line 264
    ldv_error();
  }
#line 266
  ldv_spin_alloc_lock_of_task_struct = 2;
#line 267
  return;
}
}
#line 270 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_alloc_lock_of_task_struct(void) 
{ 


  {
#line 273
  if (ldv_spin_alloc_lock_of_task_struct == 2) {

  } else {
#line 273
    ldv_error();
  }
#line 275
  ldv_spin_alloc_lock_of_task_struct = 1;
#line 276
  return;
}
}
#line 279 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_alloc_lock_of_task_struct(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 284
  if (ldv_spin_alloc_lock_of_task_struct == 1) {

  } else {
#line 284
    ldv_error();
  }
#line 287
  is_spin_held_by_another_thread = ldv_undef_int();
#line 290
  if (is_spin_held_by_another_thread) {
#line 293
    return (0);
  } else {
#line 298
    ldv_spin_alloc_lock_of_task_struct = 2;
#line 300
    return (1);
  }
}
}
#line 305 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_alloc_lock_of_task_struct(void) 
{ 


  {
#line 308
  if (ldv_spin_alloc_lock_of_task_struct == 1) {

  } else {
#line 308
    ldv_error();
  }
#line 309
  return;
}
}
#line 312 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_alloc_lock_of_task_struct(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 317
  is_spin_held_by_another_thread = ldv_undef_int();
#line 320
  if (ldv_spin_alloc_lock_of_task_struct == 1 && ! is_spin_held_by_another_thread) {
#line 323
    return (0);
  } else {
#line 328
    return (1);
  }
}
}
#line 333 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_alloc_lock_of_task_struct(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 336
  tmp = ldv_spin_is_locked_alloc_lock_of_task_struct();
#line 336
  if (tmp) {
#line 336
    tmp___0 = 0;
  } else {
#line 336
    tmp___0 = 1;
  }
#line 336
  return (tmp___0);
}
}
#line 340 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_alloc_lock_of_task_struct(void) 
{ 
  int is_spin_contended ;

  {
#line 345
  is_spin_contended = ldv_undef_int();
#line 348
  if (is_spin_contended) {
#line 351
    return (0);
  } else {
#line 356
    return (1);
  }
}
}
#line 361 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_alloc_lock_of_task_struct(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 366
  if (ldv_spin_alloc_lock_of_task_struct == 1) {

  } else {
#line 366
    ldv_error();
  }
#line 369
  atomic_value_after_dec = ldv_undef_int();
#line 372
  if (atomic_value_after_dec == 0) {
#line 375
    ldv_spin_alloc_lock_of_task_struct = 2;
#line 377
    return (1);
  } else {

  }
#line 381
  return (0);
}
}
#line 383 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_d_lock_of_dentry  ;
#line 386 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_d_lock_of_dentry(void) 
{ 


  {
#line 389
  if (ldv_spin_d_lock_of_dentry == 1) {

  } else {
#line 389
    ldv_error();
  }
#line 391
  ldv_spin_d_lock_of_dentry = 2;
#line 392
  return;
}
}
#line 395 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_d_lock_of_dentry(void) 
{ 


  {
#line 398
  if (ldv_spin_d_lock_of_dentry == 2) {

  } else {
#line 398
    ldv_error();
  }
#line 400
  ldv_spin_d_lock_of_dentry = 1;
#line 401
  return;
}
}
#line 404 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_d_lock_of_dentry(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 409
  if (ldv_spin_d_lock_of_dentry == 1) {

  } else {
#line 409
    ldv_error();
  }
#line 412
  is_spin_held_by_another_thread = ldv_undef_int();
#line 415
  if (is_spin_held_by_another_thread) {
#line 418
    return (0);
  } else {
#line 423
    ldv_spin_d_lock_of_dentry = 2;
#line 425
    return (1);
  }
}
}
#line 430 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_d_lock_of_dentry(void) 
{ 


  {
#line 433
  if (ldv_spin_d_lock_of_dentry == 1) {

  } else {
#line 433
    ldv_error();
  }
#line 434
  return;
}
}
#line 437 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_d_lock_of_dentry(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 442
  is_spin_held_by_another_thread = ldv_undef_int();
#line 445
  if (ldv_spin_d_lock_of_dentry == 1 && ! is_spin_held_by_another_thread) {
#line 448
    return (0);
  } else {
#line 453
    return (1);
  }
}
}
#line 458 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_d_lock_of_dentry(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 461
  tmp = ldv_spin_is_locked_d_lock_of_dentry();
#line 461
  if (tmp) {
#line 461
    tmp___0 = 0;
  } else {
#line 461
    tmp___0 = 1;
  }
#line 461
  return (tmp___0);
}
}
#line 465 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_d_lock_of_dentry(void) 
{ 
  int is_spin_contended ;

  {
#line 470
  is_spin_contended = ldv_undef_int();
#line 473
  if (is_spin_contended) {
#line 476
    return (0);
  } else {
#line 481
    return (1);
  }
}
}
#line 486 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_d_lock_of_dentry(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 491
  if (ldv_spin_d_lock_of_dentry == 1) {

  } else {
#line 491
    ldv_error();
  }
#line 494
  atomic_value_after_dec = ldv_undef_int();
#line 497
  if (atomic_value_after_dec == 0) {
#line 500
    ldv_spin_d_lock_of_dentry = 2;
#line 502
    return (1);
  } else {

  }
#line 506
  return (0);
}
}
#line 508 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_dcache_lock  ;
#line 511 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_dcache_lock(void) 
{ 


  {
#line 514
  if (ldv_spin_dcache_lock == 1) {

  } else {
#line 514
    ldv_error();
  }
#line 516
  ldv_spin_dcache_lock = 2;
#line 517
  return;
}
}
#line 520 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_dcache_lock(void) 
{ 


  {
#line 523
  if (ldv_spin_dcache_lock == 2) {

  } else {
#line 523
    ldv_error();
  }
#line 525
  ldv_spin_dcache_lock = 1;
#line 526
  return;
}
}
#line 529 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_dcache_lock(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 534
  if (ldv_spin_dcache_lock == 1) {

  } else {
#line 534
    ldv_error();
  }
#line 537
  is_spin_held_by_another_thread = ldv_undef_int();
#line 540
  if (is_spin_held_by_another_thread) {
#line 543
    return (0);
  } else {
#line 548
    ldv_spin_dcache_lock = 2;
#line 550
    return (1);
  }
}
}
#line 555 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_dcache_lock(void) 
{ 


  {
#line 558
  if (ldv_spin_dcache_lock == 1) {

  } else {
#line 558
    ldv_error();
  }
#line 559
  return;
}
}
#line 562 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_dcache_lock(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 567
  is_spin_held_by_another_thread = ldv_undef_int();
#line 570
  if (ldv_spin_dcache_lock == 1 && ! is_spin_held_by_another_thread) {
#line 573
    return (0);
  } else {
#line 578
    return (1);
  }
}
}
#line 583 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_dcache_lock(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 586
  tmp = ldv_spin_is_locked_dcache_lock();
#line 586
  if (tmp) {
#line 586
    tmp___0 = 0;
  } else {
#line 586
    tmp___0 = 1;
  }
#line 586
  return (tmp___0);
}
}
#line 590 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_dcache_lock(void) 
{ 
  int is_spin_contended ;

  {
#line 595
  is_spin_contended = ldv_undef_int();
#line 598
  if (is_spin_contended) {
#line 601
    return (0);
  } else {
#line 606
    return (1);
  }
}
}
#line 611 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_dcache_lock(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 616
  if (ldv_spin_dcache_lock == 1) {

  } else {
#line 616
    ldv_error();
  }
#line 619
  atomic_value_after_dec = ldv_undef_int();
#line 622
  if (atomic_value_after_dec == 0) {
#line 625
    ldv_spin_dcache_lock = 2;
#line 627
    return (1);
  } else {

  }
#line 631
  return (0);
}
}
#line 633 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_i_lock_of_inode  ;
#line 636 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_i_lock_of_inode(void) 
{ 


  {
#line 639
  if (ldv_spin_i_lock_of_inode == 1) {

  } else {
#line 639
    ldv_error();
  }
#line 641
  ldv_spin_i_lock_of_inode = 2;
#line 642
  return;
}
}
#line 645 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_i_lock_of_inode(void) 
{ 


  {
#line 648
  if (ldv_spin_i_lock_of_inode == 2) {

  } else {
#line 648
    ldv_error();
  }
#line 650
  ldv_spin_i_lock_of_inode = 1;
#line 651
  return;
}
}
#line 654 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_i_lock_of_inode(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 659
  if (ldv_spin_i_lock_of_inode == 1) {

  } else {
#line 659
    ldv_error();
  }
#line 662
  is_spin_held_by_another_thread = ldv_undef_int();
#line 665
  if (is_spin_held_by_another_thread) {
#line 668
    return (0);
  } else {
#line 673
    ldv_spin_i_lock_of_inode = 2;
#line 675
    return (1);
  }
}
}
#line 680 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_i_lock_of_inode(void) 
{ 


  {
#line 683
  if (ldv_spin_i_lock_of_inode == 1) {

  } else {
#line 683
    ldv_error();
  }
#line 684
  return;
}
}
#line 687 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_i_lock_of_inode(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 692
  is_spin_held_by_another_thread = ldv_undef_int();
#line 695
  if (ldv_spin_i_lock_of_inode == 1 && ! is_spin_held_by_another_thread) {
#line 698
    return (0);
  } else {
#line 703
    return (1);
  }
}
}
#line 708 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_i_lock_of_inode(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 711
  tmp = ldv_spin_is_locked_i_lock_of_inode();
#line 711
  if (tmp) {
#line 711
    tmp___0 = 0;
  } else {
#line 711
    tmp___0 = 1;
  }
#line 711
  return (tmp___0);
}
}
#line 715 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_i_lock_of_inode(void) 
{ 
  int is_spin_contended ;

  {
#line 720
  is_spin_contended = ldv_undef_int();
#line 723
  if (is_spin_contended) {
#line 726
    return (0);
  } else {
#line 731
    return (1);
  }
}
}
#line 736 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_i_lock_of_inode(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 741
  if (ldv_spin_i_lock_of_inode == 1) {

  } else {
#line 741
    ldv_error();
  }
#line 744
  atomic_value_after_dec = ldv_undef_int();
#line 747
  if (atomic_value_after_dec == 0) {
#line 750
    ldv_spin_i_lock_of_inode = 2;
#line 752
    return (1);
  } else {

  }
#line 756
  return (0);
}
}
#line 758 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_lock_of_NOT_ARG_SIGN  ;
#line 761 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
#line 764
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 764
    ldv_error();
  }
#line 766
  ldv_spin_lock_of_NOT_ARG_SIGN = 2;
#line 767
  return;
}
}
#line 770 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
#line 773
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 2) {

  } else {
#line 773
    ldv_error();
  }
#line 775
  ldv_spin_lock_of_NOT_ARG_SIGN = 1;
#line 776
  return;
}
}
#line 779 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 784
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 784
    ldv_error();
  }
#line 787
  is_spin_held_by_another_thread = ldv_undef_int();
#line 790
  if (is_spin_held_by_another_thread) {
#line 793
    return (0);
  } else {
#line 798
    ldv_spin_lock_of_NOT_ARG_SIGN = 2;
#line 800
    return (1);
  }
}
}
#line 805 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
#line 808
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 808
    ldv_error();
  }
#line 809
  return;
}
}
#line 812 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_lock_of_NOT_ARG_SIGN(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 817
  is_spin_held_by_another_thread = ldv_undef_int();
#line 820
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1 && ! is_spin_held_by_another_thread) {
#line 823
    return (0);
  } else {
#line 828
    return (1);
  }
}
}
#line 833 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 836
  tmp = ldv_spin_is_locked_lock_of_NOT_ARG_SIGN();
#line 836
  if (tmp) {
#line 836
    tmp___0 = 0;
  } else {
#line 836
    tmp___0 = 1;
  }
#line 836
  return (tmp___0);
}
}
#line 840 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_lock_of_NOT_ARG_SIGN(void) 
{ 
  int is_spin_contended ;

  {
#line 845
  is_spin_contended = ldv_undef_int();
#line 848
  if (is_spin_contended) {
#line 851
    return (0);
  } else {
#line 856
    return (1);
  }
}
}
#line 861 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 866
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 866
    ldv_error();
  }
#line 869
  atomic_value_after_dec = ldv_undef_int();
#line 872
  if (atomic_value_after_dec == 0) {
#line 875
    ldv_spin_lock_of_NOT_ARG_SIGN = 2;
#line 877
    return (1);
  } else {

  }
#line 881
  return (0);
}
}
#line 883 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_siglock_of_sighand_struct  ;
#line 886 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_siglock_of_sighand_struct(void) 
{ 


  {
#line 889
  if (ldv_spin_siglock_of_sighand_struct == 1) {

  } else {
#line 889
    ldv_error();
  }
#line 891
  ldv_spin_siglock_of_sighand_struct = 2;
#line 892
  return;
}
}
#line 895 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_siglock_of_sighand_struct(void) 
{ 


  {
#line 898
  if (ldv_spin_siglock_of_sighand_struct == 2) {

  } else {
#line 898
    ldv_error();
  }
#line 900
  ldv_spin_siglock_of_sighand_struct = 1;
#line 901
  return;
}
}
#line 904 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_siglock_of_sighand_struct(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 909
  if (ldv_spin_siglock_of_sighand_struct == 1) {

  } else {
#line 909
    ldv_error();
  }
#line 912
  is_spin_held_by_another_thread = ldv_undef_int();
#line 915
  if (is_spin_held_by_another_thread) {
#line 918
    return (0);
  } else {
#line 923
    ldv_spin_siglock_of_sighand_struct = 2;
#line 925
    return (1);
  }
}
}
#line 930 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_siglock_of_sighand_struct(void) 
{ 


  {
#line 933
  if (ldv_spin_siglock_of_sighand_struct == 1) {

  } else {
#line 933
    ldv_error();
  }
#line 934
  return;
}
}
#line 937 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_siglock_of_sighand_struct(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 942
  is_spin_held_by_another_thread = ldv_undef_int();
#line 945
  if (ldv_spin_siglock_of_sighand_struct == 1 && ! is_spin_held_by_another_thread) {
#line 948
    return (0);
  } else {
#line 953
    return (1);
  }
}
}
#line 958 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_siglock_of_sighand_struct(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 961
  tmp = ldv_spin_is_locked_siglock_of_sighand_struct();
#line 961
  if (tmp) {
#line 961
    tmp___0 = 0;
  } else {
#line 961
    tmp___0 = 1;
  }
#line 961
  return (tmp___0);
}
}
#line 965 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_siglock_of_sighand_struct(void) 
{ 
  int is_spin_contended ;

  {
#line 970
  is_spin_contended = ldv_undef_int();
#line 973
  if (is_spin_contended) {
#line 976
    return (0);
  } else {
#line 981
    return (1);
  }
}
}
#line 986 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_siglock_of_sighand_struct(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 991
  if (ldv_spin_siglock_of_sighand_struct == 1) {

  } else {
#line 991
    ldv_error();
  }
#line 994
  atomic_value_after_dec = ldv_undef_int();
#line 997
  if (atomic_value_after_dec == 0) {
#line 1000
    ldv_spin_siglock_of_sighand_struct = 2;
#line 1002
    return (1);
  } else {

  }
#line 1006
  return (0);
}
}
#line 1008 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_tx_global_lock_of_net_device  ;
#line 1011 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_tx_global_lock_of_net_device(void) 
{ 


  {
#line 1014
  if (ldv_spin_tx_global_lock_of_net_device == 1) {

  } else {
#line 1014
    ldv_error();
  }
#line 1016
  ldv_spin_tx_global_lock_of_net_device = 2;
#line 1017
  return;
}
}
#line 1020 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_tx_global_lock_of_net_device(void) 
{ 


  {
#line 1023
  if (ldv_spin_tx_global_lock_of_net_device == 2) {

  } else {
#line 1023
    ldv_error();
  }
#line 1025
  ldv_spin_tx_global_lock_of_net_device = 1;
#line 1026
  return;
}
}
#line 1029 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_tx_global_lock_of_net_device(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 1034
  if (ldv_spin_tx_global_lock_of_net_device == 1) {

  } else {
#line 1034
    ldv_error();
  }
#line 1037
  is_spin_held_by_another_thread = ldv_undef_int();
#line 1040
  if (is_spin_held_by_another_thread) {
#line 1043
    return (0);
  } else {
#line 1048
    ldv_spin_tx_global_lock_of_net_device = 2;
#line 1050
    return (1);
  }
}
}
#line 1055 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_tx_global_lock_of_net_device(void) 
{ 


  {
#line 1058
  if (ldv_spin_tx_global_lock_of_net_device == 1) {

  } else {
#line 1058
    ldv_error();
  }
#line 1059
  return;
}
}
#line 1062 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_tx_global_lock_of_net_device(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 1067
  is_spin_held_by_another_thread = ldv_undef_int();
#line 1070
  if (ldv_spin_tx_global_lock_of_net_device == 1 && ! is_spin_held_by_another_thread) {
#line 1073
    return (0);
  } else {
#line 1078
    return (1);
  }
}
}
#line 1083 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_tx_global_lock_of_net_device(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 1086
  tmp = ldv_spin_is_locked_tx_global_lock_of_net_device();
#line 1086
  if (tmp) {
#line 1086
    tmp___0 = 0;
  } else {
#line 1086
    tmp___0 = 1;
  }
#line 1086
  return (tmp___0);
}
}
#line 1090 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_tx_global_lock_of_net_device(void) 
{ 
  int is_spin_contended ;

  {
#line 1095
  is_spin_contended = ldv_undef_int();
#line 1098
  if (is_spin_contended) {
#line 1101
    return (0);
  } else {
#line 1106
    return (1);
  }
}
}
#line 1111 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_tx_global_lock_of_net_device(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 1116
  if (ldv_spin_tx_global_lock_of_net_device == 1) {

  } else {
#line 1116
    ldv_error();
  }
#line 1119
  atomic_value_after_dec = ldv_undef_int();
#line 1122
  if (atomic_value_after_dec == 0) {
#line 1125
    ldv_spin_tx_global_lock_of_net_device = 2;
#line 1127
    return (1);
  } else {

  }
#line 1131
  return (0);
}
}
#line 1135 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_initialize(void) 
{ 


  {
#line 1138
  ldv_spin__xmit_lock_of_netdev_queue = 1;
#line 1140
  ldv_spin_addr_list_lock_of_net_device = 1;
#line 1142
  ldv_spin_alloc_lock_of_task_struct = 1;
#line 1144
  ldv_spin_d_lock_of_dentry = 1;
#line 1146
  ldv_spin_dcache_lock = 1;
#line 1148
  ldv_spin_i_lock_of_inode = 1;
#line 1150
  ldv_spin_lock_of_NOT_ARG_SIGN = 1;
#line 1152
  ldv_spin_siglock_of_sighand_struct = 1;
#line 1154
  ldv_spin_tx_global_lock_of_net_device = 1;
#line 1155
  return;
}
}
#line 1158 "/work/ldvuser/novikov/work/current--X--drivers/media/dvb/dvb-usb/dvb-usb-vp7045.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/50/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_check_final_state(void) 
{ 


  {
#line 1161
  if (ldv_spin__xmit_lock_of_netdev_queue == 1) {

  } else {
#line 1161
    ldv_error();
  }
#line 1163
  if (ldv_spin_addr_list_lock_of_net_device == 1) {

  } else {
#line 1163
    ldv_error();
  }
#line 1165
  if (ldv_spin_alloc_lock_of_task_struct == 1) {

  } else {
#line 1165
    ldv_error();
  }
#line 1167
  if (ldv_spin_d_lock_of_dentry == 1) {

  } else {
#line 1167
    ldv_error();
  }
#line 1169
  if (ldv_spin_dcache_lock == 1) {

  } else {
#line 1169
    ldv_error();
  }
#line 1171
  if (ldv_spin_i_lock_of_inode == 1) {

  } else {
#line 1171
    ldv_error();
  }
#line 1173
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 1173
    ldv_error();
  }
#line 1175
  if (ldv_spin_siglock_of_sighand_struct == 1) {

  } else {
#line 1175
    ldv_error();
  }
#line 1177
  if (ldv_spin_tx_global_lock_of_net_device == 1) {

  } else {
#line 1177
    ldv_error();
  }
#line 1178
  return;
}
}
