/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 20 "include/asm-generic/int-ll64.h"
typedef unsigned char __u8;
#line 23 "include/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 26 "include/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "include/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 43 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 45 "include/asm-generic/int-ll64.h"
typedef short s16;
#line 46 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 49 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 52 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
typedef u64 dma_addr_t;
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_mode_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned long __kernel_size_t;
#line 19 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_ssize_t;
#line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_time_t;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_clockid_t;
#line 21 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 24 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 26 "include/linux/types.h"
typedef __kernel_mode_t mode_t;
#line 34 "include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 37 "include/linux/types.h"
typedef _Bool bool;
#line 62 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 67 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 114 "include/linux/types.h"
typedef __u8 uint8_t;
#line 182 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 195 "include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int counter ;
};
#line 195 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 200 "include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long counter ;
};
#line 200 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 201 "include/linux/types.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 58 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
struct module;
#line 44 "include/linux/dynamic_debug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 121 "include/linux/kernel.h"
struct completion;
#line 122
struct pt_regs;
#line 752
struct timespec;
#line 753
struct compat_timespec;
#line 754 "include/linux/kernel.h"
struct __anonstruct_ldv_1649_9 {
   unsigned long arg0 ;
   unsigned long arg1 ;
   unsigned long arg2 ;
   unsigned long arg3 ;
};
#line 754 "include/linux/kernel.h"
struct __anonstruct_futex_10 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 754 "include/linux/kernel.h"
struct __anonstruct_nanosleep_11 {
   clockid_t index ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};
#line 754
struct pollfd;
#line 754 "include/linux/kernel.h"
struct __anonstruct_poll_12 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 754 "include/linux/kernel.h"
union __anonunion_ldv_1672_8 {
   struct __anonstruct_ldv_1649_9 ldv_1649 ;
   struct __anonstruct_futex_10 futex ;
   struct __anonstruct_nanosleep_11 nanosleep ;
   struct __anonstruct_poll_12 poll ;
};
#line 754 "include/linux/kernel.h"
struct restart_block {
   long (*fn)(struct restart_block * ) ;
   union __anonunion_ldv_1672_8 ldv_1672 ;
};
#line 54 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
struct page;
#line 21 "include/asm-generic/getorder.h"
struct task_struct;
#line 22
struct exec_domain;
#line 213 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/segment.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 138 "include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 315 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
struct arch_spinlock;
#line 90 "include/linux/personality.h"
struct map_segment;
#line 90 "include/linux/personality.h"
struct exec_domain {
   char const   *name ;
   void (*handler)(int  , struct pt_regs * ) ;
   unsigned char pers_low ;
   unsigned char pers_high ;
   unsigned long *signal_map ;
   unsigned long *signal_invmap ;
   struct map_segment *err_map ;
   struct map_segment *socktype_map ;
   struct map_segment *sockopt_map ;
   struct map_segment *af_map ;
   struct module *module ;
   struct exec_domain *next ;
};
#line 424 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct kmem_cache;
#line 625 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_29 {
   unsigned long seg ;
};
#line 625 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_29 mm_segment_t;
#line 23 "include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 131 "include/asm-generic/atomic-long.h"
struct thread_info {
   struct task_struct *task ;
   struct exec_domain *exec_domain ;
   __u32 flags ;
   __u32 status ;
   __u32 cpu ;
   int preempt_count ;
   mm_segment_t addr_limit ;
   struct restart_block restart_block ;
   void *sysenter_return ;
   int uaccess_err ;
};
#line 8 "include/linux/bottom_half.h"
struct arch_spinlock {
   unsigned int slock ;
};
#line 10 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 17
struct lockdep_map;
#line 56 "include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 24 "include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
};
#line 42 "include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 48 "include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 133 "include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 551 "include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 33 "include/linux/spinlock_types.h"
struct __anonstruct_ldv_5746_32 {
   u8 __padding[1U] ;
   struct lockdep_map dep_map ;
};
#line 33 "include/linux/spinlock_types.h"
union __anonunion_ldv_5747_31 {
   struct raw_spinlock rlock ;
   struct __anonstruct_ldv_5746_32 ldv_5746 ;
};
#line 33 "include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_ldv_5747_31 ldv_5747 ;
};
#line 77 "include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 169 "include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 49 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 54 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 626 "include/linux/mmzone.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct thread_info *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 174 "include/linux/ioport.h"
struct device;
#line 96 "include/linux/debugobjects.h"
struct tvec_base;
#line 97 "include/linux/debugobjects.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   struct tvec_base *base ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   int slack ;
   void *start_site ;
   char start_comm[16U] ;
   int start_pid ;
   struct lockdep_map lockdep_map ;
};
#line 276 "include/linux/timer.h"
struct work_struct;
#line 43 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 406 "include/linux/workqueue.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 37 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 46 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 47 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 266
enum dpm_state {
    DPM_INVALID = 0,
    DPM_ON = 1,
    DPM_PREPARING = 2,
    DPM_RESUMING = 3,
    DPM_SUSPENDING = 4,
    DPM_OFF = 5,
    DPM_OFF_IRQ = 6
} ;
#line 276
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 283
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_RESUME = 3
} ;
#line 290 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned char can_wakeup : 1 ;
   unsigned char should_wakeup : 1 ;
   unsigned char async_suspend : 1 ;
   enum dpm_state status ;
   struct list_head entry ;
   struct completion completion ;
   unsigned long wakeup_count ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   spinlock_t lock ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned char disable_depth : 3 ;
   unsigned char ignore_children : 1 ;
   unsigned char idle_notification : 1 ;
   unsigned char request_pending : 1 ;
   unsigned char deferred_resume : 1 ;
   unsigned char run_wake : 1 ;
   unsigned char runtime_auto : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
   unsigned long active_jiffies ;
   unsigned long suspended_jiffies ;
   unsigned long accounting_timestamp ;
};
#line 27 "include/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 28 "include/linux/elf.h"
typedef __u16 Elf64_Half;
#line 32 "include/linux/elf.h"
typedef __u32 Elf64_Word;
#line 33 "include/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 202 "include/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 210 "include/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 443
struct sock;
#line 444
struct kobject;
#line 445
enum kobj_ns_type {
    KOBJ_NS_TYPE_NONE = 0,
    KOBJ_NS_TYPE_NET = 1,
    KOBJ_NS_TYPES = 2
} ;
#line 451 "include/linux/elf.h"
struct kobj_ns_type_operations {
   enum kobj_ns_type type ;
   void const   *(*current_ns)(void) ;
   void const   *(*netlink_ns)(struct sock * ) ;
   void const   *(*initial_ns)(void) ;
};
#line 55 "include/linux/kobject_ns.h"
struct attribute {
   char const   *name ;
   mode_t mode ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 33 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 98 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 116
struct sysfs_dirent;
#line 181 "include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 49 "include/linux/kobject.h"
struct kset;
#line 49
struct kobj_type;
#line 49 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned char state_initialized : 1 ;
   unsigned char state_in_sysfs : 1 ;
   unsigned char state_add_uevent_sent : 1 ;
   unsigned char state_remove_uevent_sent : 1 ;
   unsigned char uevent_suppress : 1 ;
};
#line 107 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
   struct kobj_ns_type_operations  const  *(*child_ns_type)(struct kobject * ) ;
   void const   *(*namespace)(struct kobject * ) ;
};
#line 115 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 122 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 139 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 215
struct kernel_param;
#line 216 "include/linux/kobject.h"
struct kernel_param_ops {
   int (*set)(char const   * , struct kernel_param  const  * ) ;
   int (*get)(char * , struct kernel_param  const  * ) ;
   void (*free)(void * ) ;
};
#line 42 "include/linux/moduleparam.h"
struct kparam_string;
#line 42
struct kparam_array;
#line 42 "include/linux/moduleparam.h"
union __anonunion_ldv_10994_110 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 42 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   struct kernel_param_ops  const  *ops ;
   u16 perm ;
   u16 flags ;
   union __anonunion_ldv_10994_110 ldv_10994 ;
};
#line 57 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 63 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int *num ;
   struct kernel_param_ops  const  *ops ;
   unsigned int elemsize ;
   void *elem ;
};
#line 567 "include/linux/rcupdate.h"
struct tracepoint;
#line 568 "include/linux/rcupdate.h"
struct tracepoint_func {
   void *func ;
   void *data ;
};
#line 28 "include/linux/tracepoint.h"
struct tracepoint {
   char const   *name ;
   int state ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   struct tracepoint_func *funcs ;
};
#line 87 "include/linux/tracepoint.h"
struct mod_arch_specific {

};
#line 117 "include/trace/events/module.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 48 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 60
struct module_param_attrs;
#line 60 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 72
struct exception_table_entry;
#line 190
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2
} ;
#line 196 "include/linux/module.h"
struct module_ref {
   unsigned int incs ;
   unsigned int decs ;
};
#line 383
struct module_sect_attrs;
#line 383
struct module_notes_attrs;
#line 383
struct ftrace_event_call;
#line 383 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   void *percpu ;
   unsigned int percpu_size ;
   char *args ;
   struct tracepoint *tracepoints ;
   unsigned int num_tracepoints ;
   char const   **trace_bprintk_fmt_start ;
   unsigned int num_trace_bprintk_fmt ;
   struct ftrace_event_call *trace_events ;
   unsigned int num_trace_events ;
   struct list_head source_list ;
   struct list_head target_list ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 692
struct klist_node;
#line 37 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 67
struct dma_map_ops;
#line 67 "include/linux/klist.h"
struct dev_archdata {
   void *acpi_handle ;
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct device_private;
#line 18
struct device_driver;
#line 19
struct driver_private;
#line 20
struct class;
#line 21
struct class_private;
#line 22
struct bus_type;
#line 23
struct bus_type_private;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 50 "include/linux/device.h"
struct device_attribute;
#line 50
struct driver_attribute;
#line 50 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct bus_type_private *p ;
};
#line 122 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 158 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 188
struct class_attribute;
#line 188 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , mode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct kobj_ns_type_operations  const  *ns_type ;
   void const   *(*namespace)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct class_private *p ;
};
#line 218
struct device_type;
#line 257 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
};
#line 308 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , mode_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 335 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 396 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 405
struct dma_coherent_mem;
#line 405 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type *type ;
   struct mutex mutex ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   dev_t devt ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
};
#line 12 "include/linux/mod_devicetable.h"
typedef unsigned long kernel_ulong_t;
#line 400 "include/linux/mod_devicetable.h"
struct spi_device_id {
   char name[32U] ;
   kernel_ulong_t driver_data ;
};
#line 328 "include/trace/events/kmem.h"
struct kmem_cache_cpu {
   void **freelist ;
   struct page *page ;
   int node ;
   unsigned int stat[18U] ;
};
#line 45 "include/linux/slub_def.h"
struct kmem_cache_node {
   spinlock_t list_lock ;
   unsigned long nr_partial ;
   struct list_head partial ;
   atomic_long_t nr_slabs ;
   atomic_long_t total_objects ;
   struct list_head full ;
};
#line 56 "include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 66 "include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   int size ;
   int objsize ;
   int offset ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   unsigned long min_partial ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 31 "include/linux/spi/spi.h"
struct spi_master;
#line 31 "include/linux/spi/spi.h"
struct spi_device {
   struct device dev ;
   struct spi_master *master ;
   u32 max_speed_hz ;
   u8 chip_select ;
   u8 mode ;
   u8 bits_per_word ;
   int irq ;
   void *controller_state ;
   void *controller_data ;
   char modalias[32U] ;
};
#line 143
struct spi_message;
#line 144 "include/linux/spi/spi.h"
struct spi_driver {
   struct spi_device_id  const  *id_table ;
   int (*probe)(struct spi_device * ) ;
   int (*remove)(struct spi_device * ) ;
   void (*shutdown)(struct spi_device * ) ;
   int (*suspend)(struct spi_device * , pm_message_t  ) ;
   int (*resume)(struct spi_device * ) ;
   struct device_driver driver ;
};
#line 202 "include/linux/spi/spi.h"
struct spi_master {
   struct device dev ;
   s16 bus_num ;
   u16 num_chipselect ;
   u16 dma_alignment ;
   u16 mode_bits ;
   u16 flags ;
   spinlock_t bus_lock_spinlock ;
   struct mutex bus_lock_mutex ;
   bool bus_lock_flag ;
   int (*setup)(struct spi_device * ) ;
   int (*transfer)(struct spi_device * , struct spi_message * ) ;
   void (*cleanup)(struct spi_device * ) ;
};
#line 341 "include/linux/spi/spi.h"
struct spi_transfer {
   void const   *tx_buf ;
   void *rx_buf ;
   unsigned int len ;
   dma_addr_t tx_dma ;
   dma_addr_t rx_dma ;
   unsigned char cs_change : 1 ;
   u8 bits_per_word ;
   u16 delay_usecs ;
   u32 speed_hz ;
   struct list_head transfer_list ;
};
#line 447 "include/linux/spi/spi.h"
struct spi_message {
   struct list_head transfers ;
   struct spi_device *spi ;
   unsigned char is_dma_mapped : 1 ;
   void (*complete)(void * ) ;
   void *context ;
   unsigned int actual_length ;
   int status ;
   struct list_head queue ;
   void *state ;
};
#line 33 "include/linux/hwmon.h"
struct sensor_device_attribute {
   struct device_attribute dev_attr ;
   int index ;
};
#line 43 "include/linux/hwmon-sysfs.h"
struct ads7871_data {
   struct device *hwmon_dev ;
   struct mutex update_lock ;
};
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 199 "include/linux/kernel.h"
extern int sprintf(char * , char const   *  , ...) ;
#line 9 "include/asm-generic/getorder.h"
__inline static int get_order(unsigned long size ) 
{ 
  int order ;

  {
#line 13
  size = (size - 1UL) >> 11;
#line 14
  order = -1;
  ldv_1722: 
#line 16
  size = size >> 1;
#line 17
  order = order + 1;
#line 18
  if (size != 0UL) {
#line 19
    goto ldv_1722;
  } else {

  }

#line 19
  return (order);
}
}
#line 55 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/string_64.h"
extern void *memset(void * , int  , size_t  ) ;
#line 27 "include/linux/err.h"
__inline static long PTR_ERR(void const   *ptr ) 
{ 


  {
#line 29
  return ((long )ptr);
}
}
#line 32 "include/linux/err.h"
__inline static long IS_ERR(void const   *ptr ) 
{ 
  long tmp ;

  {
#line 34
  tmp = __builtin_expect((unsigned long )ptr > 0xfffffffffffff000UL, 0L);
#line 34
  return (tmp);
}
}
#line 25 "include/linux/list.h"
__inline static void INIT_LIST_HEAD(struct list_head *list ) 
{ 


  {
#line 27
  list->next = list;
#line 28
  list->prev = list;
#line 29
  return;
}
}
#line 48
extern void __list_add(struct list_head * , struct list_head * , struct list_head * ) ;
#line 75 "include/linux/list.h"
__inline static void list_add_tail(struct list_head *new , struct list_head *head ) 
{ 


  {
#line 77
  __list_add(new, head->prev, head);
#line 78
  return;
}
}
#line 550 "include/linux/lockdep.h"
extern void lockdep_rcu_dereference(char const   * , int const    ) ;
#line 5 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
extern void __ldv_spin_lock(spinlock_t * ) ;
#line 8
void ldv___ldv_spin_lock_4(spinlock_t *ldv_func_arg1 ) ;
#line 24
void ldv_spin_lock_node_size_lock_of_pglist_data(void) ;
#line 47 "include/linux/delay.h"
extern unsigned long msleep_interruptible(unsigned int  ) ;
#line 316 "include/linux/gfp.h"
extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
#line 157 "include/linux/sysfs.h"
extern int sysfs_create_group(struct kobject * , struct attribute_group  const  * ) ;
#line 161
extern void sysfs_remove_group(struct kobject * , struct attribute_group  const  * ) ;
#line 120 "include/linux/rcupdate.h"
extern int debug_lockdep_rcu_enabled(void) ;
#line 171 "include/linux/rcupdate.h"
__inline static int rcu_read_lock_sched_held(void) 
{ 


  {
#line 173
  return (1);
}
}
#line 398 "include/linux/rcupdate.h"
__inline static void rcu_read_lock_sched_notrace(void) 
{ 


  {
#line 402
  return;
}
}
#line 90 "include/linux/module.h"
extern struct module __this_module ;
#line 150 "include/linux/device.h"
extern void driver_unregister(struct device_driver * ) ;
#line 560
extern void *dev_get_drvdata(struct device  const  * ) ;
#line 561
extern void dev_set_drvdata(struct device * , void * ) ;
#line 646
extern int dev_printk(char const   * , struct device  const  * , char const   *  , ...) ;
#line 144 "include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 62 "include/linux/kmemleak.h"
__inline static void kmemleak_alloc(void const   *ptr , size_t size , int min_count ,
                                    gfp_t gfp ) 
{ 


  {
#line 64
  return;
}
}
#line 51 "include/trace/events/kmem.h"
extern struct tracepoint __tracepoint_kmalloc ;
#line 51 "include/trace/events/kmem.h"
__inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
                                   size_t bytes_alloc , gfp_t gfp_flags ) 
{ 
  struct tracepoint_func *it_func_ptr ;
  void *it_func ;
  void *__data ;
  bool __warned ;
  int tmp ;
  int tmp___0 ;
  struct tracepoint_func *_________p1 ;
  long tmp___1 ;

  {
#line 45
  tmp___1 = __builtin_expect(__tracepoint_kmalloc.state != 0, 0L);
#line 45
  if (tmp___1 != 0L) {
#line 45
    rcu_read_lock_sched_notrace();
#line 45
    tmp = debug_lockdep_rcu_enabled();
#line 45
    if (tmp != 0 && ! __warned) {
#line 45
      tmp___0 = rcu_read_lock_sched_held();
#line 45
      if (tmp___0 == 0) {
#line 45
        __warned = 1;
#line 45
        lockdep_rcu_dereference("include/trace/events/kmem.h", 51);
      } else {

      }
    } else {

    }
#line 45
    _________p1 = *((struct tracepoint_func * volatile  *)(& __tracepoint_kmalloc.funcs));
#line 45
    it_func_ptr = _________p1;
#line 45
    if ((unsigned long )it_func_ptr != (unsigned long )((struct tracepoint_func *)0)) {
      ldv_12758: 
#line 45
      it_func = it_func_ptr->func;
#line 45
      __data = it_func_ptr->data;
#line 45
      (*((void (*)(void * , unsigned long  , void const   * , size_t  , size_t  ,
                   gfp_t  ))it_func))(__data, call_site, ptr, bytes_req, bytes_alloc,
                                      gfp_flags);
#line 45
      it_func_ptr = it_func_ptr + 1;
#line 45
      if ((unsigned long )it_func_ptr->func != (unsigned long )((void *)0)) {
#line 46
        goto ldv_12758;
      } else {

      }

    } else {

    }
#line 45
    rcu_read_lock_sched_notrace();
  } else {

  }
#line 47
  return;
}
}
#line 154 "include/linux/slub_def.h"
extern struct kmem_cache kmalloc_caches[28U] ;
#line 160 "include/linux/slub_def.h"
__inline static int kmalloc_index(size_t size ) 
{ 


  {
#line 162
  if (size == 0UL) {
#line 163
    return (0);
  } else {

  }
#line 165
  if (size <= 8UL) {
#line 166
    return (3);
  } else {

  }
#line 168
  if (size > 64UL && size <= 96UL) {
#line 169
    return (1);
  } else {

  }
#line 170
  if (size > 128UL && size <= 192UL) {
#line 171
    return (2);
  } else {

  }
#line 172
  if (size <= 8UL) {
#line 172
    return (3);
  } else {

  }
#line 173
  if (size <= 16UL) {
#line 173
    return (4);
  } else {

  }
#line 174
  if (size <= 32UL) {
#line 174
    return (5);
  } else {

  }
#line 175
  if (size <= 64UL) {
#line 175
    return (6);
  } else {

  }
#line 176
  if (size <= 128UL) {
#line 176
    return (7);
  } else {

  }
#line 177
  if (size <= 256UL) {
#line 177
    return (8);
  } else {

  }
#line 178
  if (size <= 512UL) {
#line 178
    return (9);
  } else {

  }
#line 179
  if (size <= 1024UL) {
#line 179
    return (10);
  } else {

  }
#line 180
  if (size <= 2048UL) {
#line 180
    return (11);
  } else {

  }
#line 181
  if (size <= 4096UL) {
#line 181
    return (12);
  } else {

  }
#line 186
  if (size <= 8192UL) {
#line 186
    return (13);
  } else {

  }
#line 187
  if (size <= 16384UL) {
#line 187
    return (14);
  } else {

  }
#line 188
  if (size <= 32768UL) {
#line 188
    return (15);
  } else {

  }
#line 189
  if (size <= 65536UL) {
#line 189
    return (16);
  } else {

  }
#line 190
  if (size <= 131072UL) {
#line 190
    return (17);
  } else {

  }
#line 191
  if (size <= 262144UL) {
#line 191
    return (18);
  } else {

  }
#line 192
  if (size <= 524288UL) {
#line 192
    return (19);
  } else {

  }
#line 193
  if (size <= 1048576UL) {
#line 193
    return (20);
  } else {

  }
#line 194
  if (size <= 2097152UL) {
#line 194
    return (21);
  } else {

  }
#line 195
  return (-1);
}
}
#line 212 "include/linux/slub_def.h"
__inline static struct kmem_cache *kmalloc_slab(size_t size ) 
{ 
  int index ;
  int tmp ;

  {
#line 214
  tmp = kmalloc_index(size);
#line 214
  index = tmp;
#line 216
  if (index == 0) {
#line 217
    return (0);
  } else {

  }
#line 219
  return ((struct kmem_cache *)(& kmalloc_caches) + (unsigned long )index);
}
}
#line 223
extern void *__kmalloc(size_t  , gfp_t  ) ;
#line 226
extern void *kmem_cache_alloc_notrace(struct kmem_cache * , gfp_t  ) ;
#line 235 "include/linux/slub_def.h"
__inline static void *kmalloc_large(size_t size , gfp_t flags ) 
{ 
  unsigned int order ;
  int tmp ;
  void *ret ;
  unsigned long tmp___0 ;

  {
#line 237
  tmp = get_order(size);
#line 237
  order = (unsigned int )tmp;
#line 238
  tmp___0 = __get_free_pages(flags | 16384U, order);
#line 238
  ret = (void *)tmp___0;
#line 240
  kmemleak_alloc((void const   *)ret, size, 1, flags);
#line 241
  trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, 4096UL << (int )order,
                flags);
#line 243
  return (ret);
}
}
#line 246 "include/linux/slub_def.h"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *ret ;
  void *tmp ;
  struct kmem_cache *s ;
  struct kmem_cache *tmp___0 ;
  void *tmp___1 ;

  {
#line 250
  if (0) {
#line 251
    if (size > 8192UL) {
#line 252
      tmp = kmalloc_large(size, flags);
#line 252
      return (tmp);
    } else {

    }
#line 254
    if ((flags & 1U) == 0U) {
#line 255
      tmp___0 = kmalloc_slab(size);
#line 255
      s = tmp___0;
#line 257
      if ((unsigned long )s == (unsigned long )((struct kmem_cache *)0)) {
#line 258
        return (16);
      } else {

      }
#line 260
      ret = kmem_cache_alloc_notrace(s, flags);
#line 262
      trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, (size_t )s->size,
                    flags);
#line 264
      return (ret);
    } else {

    }
  } else {

  }
#line 267
  tmp___1 = __kmalloc(size, flags);
#line 267
  return (tmp___1);
}
}
#line 321 "include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 323
  tmp = kmalloc(size, flags | 32768U);
#line 323
  return (tmp);
}
}
#line 30 "include/linux/spi/spi.h"
extern struct bus_type spi_bus_type ;
#line 104 "include/linux/spi/spi.h"
__inline static struct spi_device *to_spi_device(struct device *dev ) 
{ 
  struct device  const  *__mptr ;
  struct spi_device *tmp ;

  {
#line 106
  if ((unsigned long )dev != (unsigned long )((struct device *)0)) {
#line 106
    __mptr = (struct device  const  *)dev;
#line 106
    tmp = (struct spi_device *)__mptr;
  } else {
#line 106
    tmp = 0;
  }
#line 106
  return (tmp);
}
}
#line 134 "include/linux/spi/spi.h"
__inline static void spi_set_drvdata(struct spi_device *spi , void *data ) 
{ 


  {
#line 136
  dev_set_drvdata(& spi->dev, data);
#line 137
  return;
}
}
#line 139 "include/linux/spi/spi.h"
__inline static void *spi_get_drvdata(struct spi_device *spi ) 
{ 
  void *tmp ;

  {
#line 141
  tmp = dev_get_drvdata((struct device  const  *)(& spi->dev));
#line 141
  return (tmp);
}
}
#line 190
extern int spi_register_driver(struct spi_driver * ) ;
#line 197 "include/linux/spi/spi.h"
__inline static void spi_unregister_driver(struct spi_driver *sdrv ) 
{ 


  {
#line 199
  if ((unsigned long )sdrv != (unsigned long )((struct spi_driver *)0)) {
#line 200
    driver_unregister(& sdrv->driver);
  } else {

  }
#line 201
  return;
}
}
#line 508 "include/linux/spi/spi.h"
__inline static void spi_message_init(struct spi_message *m ) 
{ 


  {
#line 510
  memset((void *)m, 0, 80UL);
#line 511
  INIT_LIST_HEAD(& m->transfers);
#line 512
  return;
}
}
#line 515 "include/linux/spi/spi.h"
__inline static void spi_message_add_tail(struct spi_transfer *t , struct spi_message *m ) 
{ 


  {
#line 517
  list_add_tail(& t->transfer_list, & m->transfers);
#line 518
  return;
}
}
#line 553
extern int spi_setup(struct spi_device * ) ;
#line 565
extern int spi_sync(struct spi_device * , struct spi_message * ) ;
#line 581 "include/linux/spi/spi.h"
__inline static int spi_write(struct spi_device *spi , u8 const   *buf , size_t len ) 
{ 
  struct spi_transfer t ;
  struct spi_message m ;
  int tmp ;

  {
#line 583
  t.tx_buf = (void const   *)buf;
#line 583
  t.rx_buf = 0;
#line 583
  t.len = (unsigned int )len;
#line 583
  t.tx_dma = 0ULL;
#line 583
  t.rx_dma = 0ULL;
#line 583
  t.cs_change = (unsigned char)0;
#line 583
  t.bits_per_word = (unsigned char)0;
#line 583
  t.delay_usecs = (unsigned short)0;
#line 583
  t.speed_hz = 0U;
#line 583
  t.transfer_list.next = 0;
#line 583
  t.transfer_list.prev = 0;
#line 589
  spi_message_init(& m);
#line 590
  spi_message_add_tail(& t, & m);
#line 591
  tmp = spi_sync(spi, & m);
#line 591
  return (tmp);
}
}
#line 619
extern int spi_write_then_read(struct spi_device * , u8 const   * , unsigned int  ,
                               u8 * , unsigned int  ) ;
#line 633 "include/linux/spi/spi.h"
__inline static ssize_t spi_w8r8(struct spi_device *spi , u8 cmd ) 
{ 
  ssize_t status ;
  u8 result ;
  int tmp ;

  {
#line 638
  tmp = spi_write_then_read(spi, (u8 const   *)(& cmd), 1U, & result, 1U);
#line 638
  status = (ssize_t )tmp;
#line 641
  return (status >= 0L ? (ssize_t )result : status);
}
}
#line 657 "include/linux/spi/spi.h"
__inline static ssize_t spi_w8r16(struct spi_device *spi , u8 cmd ) 
{ 
  ssize_t status ;
  u16 result ;
  int tmp ;

  {
#line 662
  tmp = spi_write_then_read(spi, (u8 const   *)(& cmd), 1U, (u8 *)(& result), 2U);
#line 662
  status = (ssize_t )tmp;
#line 665
  return (status >= 0L ? (ssize_t )result : status);
}
}
#line 19 "include/linux/hwmon.h"
extern struct device *hwmon_device_register(struct device * ) ;
#line 21
extern void hwmon_device_unregister(struct device * ) ;
#line 105 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static int ads7871_read_reg8(struct spi_device *spi , int reg ) 
{ 
  int ret ;
  ssize_t tmp ;

  {
#line 108
  reg = reg | 64;
#line 109
  tmp = spi_w8r8(spi, (int )((u8 )reg));
#line 109
  ret = (int )tmp;
#line 110
  return (ret);
}
}
#line 113 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static int ads7871_read_reg16(struct spi_device *spi , int reg ) 
{ 
  int ret ;
  ssize_t tmp ;

  {
#line 116
  reg = reg | 96;
#line 117
  tmp = spi_w8r16(spi, (int )((u8 )reg));
#line 117
  ret = (int )tmp;
#line 118
  return (ret);
}
}
#line 121 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static int ads7871_write_reg8(struct spi_device *spi , int reg , u8 val ) 
{ 
  u8 tmp[2U] ;
  int tmp___0 ;

  {
#line 123
  tmp[0] = (unsigned char )reg;
#line 123
  tmp[1] = val;
#line 124
  tmp___0 = spi_write(spi, (u8 const   *)(& tmp), 2UL);
#line 124
  return (tmp___0);
}
}
#line 127 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static ssize_t show_voltage(struct device *dev , struct device_attribute *da , char *buf ) 
{ 
  struct spi_device *spi ;
  struct spi_device *tmp ;
  struct sensor_device_attribute *attr ;
  struct device_attribute  const  *__mptr ;
  int ret ;
  int val ;
  int i ;
  uint8_t channel ;
  uint8_t mux_cnv ;
  int tmp___0 ;

  {
#line 130
  tmp = to_spi_device(dev);
#line 130
  spi = tmp;
#line 131
  __mptr = (struct device_attribute  const  *)da;
#line 131
  attr = (struct sensor_device_attribute *)__mptr;
#line 132
  i = 0;
#line 135
  channel = (uint8_t )attr->index;
#line 140
  ads7871_write_reg8(spi, 4, (int )((unsigned int )channel | 136U));
#line 143
  ret = ads7871_read_reg8(spi, 4);
#line 144
  mux_cnv = (uint8_t )((ret & 128) >> 7);
#line 147
  goto ldv_13692;
  ldv_13691: 
#line 148
  i = i + 1;
#line 149
  ret = ads7871_read_reg8(spi, 4);
#line 150
  mux_cnv = (uint8_t )((ret & 128) >> 7);
#line 151
  msleep_interruptible(1U);
  ldv_13692: ;
#line 147
  if (i <= 1 && (unsigned int )mux_cnv != 0U) {
#line 148
    goto ldv_13691;
  } else {

  }

#line 154
  if ((unsigned int )mux_cnv == 0U) {
#line 155
    val = ads7871_read_reg16(spi, 0);
#line 157
    val = ((val >> 2) * 25000) / 8192;
#line 158
    tmp___0 = sprintf(buf, "%d\n", val);
#line 158
    return ((ssize_t )tmp___0);
  } else {
#line 160
    return (-1L);
  }
}
}
#line 164 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct sensor_device_attribute sensor_dev_attr_in0_input  =    {{{"in0_input", 292U, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                              {(char)0}, {(char)0}, {(char)0}}}}, & show_voltage,
     0}, 0};
#line 165 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct sensor_device_attribute sensor_dev_attr_in1_input  =    {{{"in1_input", 292U, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                              {(char)0}, {(char)0}, {(char)0}}}}, & show_voltage,
     0}, 1};
#line 166 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct sensor_device_attribute sensor_dev_attr_in2_input  =    {{{"in2_input", 292U, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                              {(char)0}, {(char)0}, {(char)0}}}}, & show_voltage,
     0}, 2};
#line 167 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct sensor_device_attribute sensor_dev_attr_in3_input  =    {{{"in3_input", 292U, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                              {(char)0}, {(char)0}, {(char)0}}}}, & show_voltage,
     0}, 3};
#line 168 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct sensor_device_attribute sensor_dev_attr_in4_input  =    {{{"in4_input", 292U, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                              {(char)0}, {(char)0}, {(char)0}}}}, & show_voltage,
     0}, 4};
#line 169 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct sensor_device_attribute sensor_dev_attr_in5_input  =    {{{"in5_input", 292U, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                              {(char)0}, {(char)0}, {(char)0}}}}, & show_voltage,
     0}, 5};
#line 170 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct sensor_device_attribute sensor_dev_attr_in6_input  =    {{{"in6_input", 292U, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                              {(char)0}, {(char)0}, {(char)0}}}}, & show_voltage,
     0}, 6};
#line 171 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct sensor_device_attribute sensor_dev_attr_in7_input  =    {{{"in7_input", 292U, 0, {{{(char)0}, {(char)0}, {(char)0}, {(char)0}, {(char)0},
                              {(char)0}, {(char)0}, {(char)0}}}}, & show_voltage,
     0}, 7};
#line 173 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct attribute *ads7871_attributes[9U]  = 
#line 173
  {      & sensor_dev_attr_in0_input.dev_attr.attr,      & sensor_dev_attr_in1_input.dev_attr.attr,      & sensor_dev_attr_in2_input.dev_attr.attr,      & sensor_dev_attr_in3_input.dev_attr.attr, 
        & sensor_dev_attr_in4_input.dev_attr.attr,      & sensor_dev_attr_in5_input.dev_attr.attr,      & sensor_dev_attr_in6_input.dev_attr.attr,      & sensor_dev_attr_in7_input.dev_attr.attr, 
        0};
#line 185 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct attribute_group  const  ads7871_group  =    {0, 0, (struct attribute **)(& ads7871_attributes)};
#line 189 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static int ads7871_probe(struct spi_device *spi ) 
{ 
  int ret ;
  int err ;
  uint8_t val ;
  struct ads7871_data *pdata ;
  void *tmp ;
  long tmp___0 ;
  long tmp___1 ;

  {
#line 195
  dev_printk("<7>", (struct device  const  *)(& spi->dev), "probe\n");
#line 198
  spi->mode = 0U;
#line 199
  spi->bits_per_word = 8U;
#line 200
  spi_setup(spi);
#line 202
  ads7871_write_reg8(spi, 24, 0);
#line 203
  ads7871_write_reg8(spi, 3, 0);
#line 205
  val = 60U;
#line 206
  ads7871_write_reg8(spi, 7, (int )val);
#line 207
  ret = ads7871_read_reg8(spi, 7);
#line 209
  dev_printk("<7>", (struct device  const  *)(& spi->dev), "REG_OSC_CONTROL write:%x, read:%x\n",
             (int )val, ret);
#line 212
  if ((int )val != ret) {
#line 213
    err = -19;
#line 214
    goto exit;
  } else {

  }
#line 217
  tmp = kzalloc(160UL, 208U);
#line 217
  pdata = (struct ads7871_data *)tmp;
#line 218
  if ((unsigned long )pdata == (unsigned long )((struct ads7871_data *)0)) {
#line 219
    err = -12;
#line 220
    goto exit;
  } else {

  }
#line 223
  err = sysfs_create_group(& spi->dev.kobj, & ads7871_group);
#line 224
  if (err < 0) {
#line 225
    goto error_free;
  } else {

  }
#line 227
  spi_set_drvdata(spi, (void *)pdata);
#line 229
  pdata->hwmon_dev = hwmon_device_register(& spi->dev);
#line 230
  tmp___1 = IS_ERR((void const   *)pdata->hwmon_dev);
#line 230
  if (tmp___1 != 0L) {
#line 231
    tmp___0 = PTR_ERR((void const   *)pdata->hwmon_dev);
#line 231
    err = (int )tmp___0;
#line 232
    goto error_remove;
  } else {

  }
#line 235
  return (0);
  error_remove: 
#line 238
  sysfs_remove_group(& spi->dev.kobj, & ads7871_group);
  error_free: 
#line 240
  kfree((void const   *)pdata);
  exit: ;
#line 242
  return (err);
}
}
#line 245 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static int ads7871_remove(struct spi_device *spi ) 
{ 
  struct ads7871_data *pdata ;
  void *tmp ;

  {
#line 247
  tmp = spi_get_drvdata(spi);
#line 247
  pdata = (struct ads7871_data *)tmp;
#line 249
  hwmon_device_unregister(pdata->hwmon_dev);
#line 250
  sysfs_remove_group(& spi->dev.kobj, & ads7871_group);
#line 251
  kfree((void const   *)pdata);
#line 252
  return (0);
}
}
#line 255 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static struct spi_driver ads7871_driver  =    {0, & ads7871_probe, & ads7871_remove, 0, 0, 0, {"ads7871", & spi_bus_type, & __this_module,
                                                    0, (_Bool)0, 0, 0, 0, 0, 0, 0,
                                                    0, 0}};
#line 266 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static int ads7871_init(void) 
{ 
  int tmp ;

  {
#line 268
  tmp = spi_register_driver(& ads7871_driver);
#line 268
  return (tmp);
}
}
#line 271 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
static void ads7871_exit(void) 
{ 


  {
#line 273
  spi_unregister_driver(& ads7871_driver);
#line 274
  return;
}
}
#line 299
void ldv_check_final_state(void) ;
#line 302
extern void ldv_check_return_value(int  ) ;
#line 305
extern void ldv_check_return_value_probe(int  ) ;
#line 308
void ldv_initialize(void) ;
#line 311
extern void ldv_handler_precall(void) ;
#line 314
extern int nondet_int(void) ;
#line 317 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
int LDV_IN_INTERRUPT  ;
#line 320 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
void main(void) 
{ 
  struct spi_device *var_group1 ;
  int res_ads7871_probe_4 ;
  int ldv_s_ads7871_driver_spi_driver ;
  int tmp ;
  int tmp___0 ;
  int tmp___1 ;

  {
#line 435
  ldv_s_ads7871_driver_spi_driver = 0;
#line 392
  LDV_IN_INTERRUPT = 1;
#line 401
  ldv_initialize();
#line 432
  ldv_handler_precall();
#line 433
  tmp = ads7871_init();
#line 433
  if (tmp != 0) {
#line 434
    goto ldv_final;
  } else {

  }
#line 438
  goto ldv_13764;
  ldv_13763: 
#line 442
  tmp___0 = nondet_int();
#line 442
  switch (tmp___0) {
  case 0: ;
#line 447
  if (ldv_s_ads7871_driver_spi_driver == 0) {
#line 477
    res_ads7871_probe_4 = ads7871_probe(var_group1);
#line 478
    ldv_check_return_value(res_ads7871_probe_4);
#line 479
    ldv_check_return_value_probe(res_ads7871_probe_4);
#line 480
    if (res_ads7871_probe_4 != 0) {
#line 481
      goto ldv_module_exit;
    } else {

    }
#line 482
    ldv_s_ads7871_driver_spi_driver = ldv_s_ads7871_driver_spi_driver + 1;
  } else {

  }
#line 488
  goto ldv_13760;
  case 1: ;
#line 492
  if (ldv_s_ads7871_driver_spi_driver == 1) {
#line 522
    ldv_handler_precall();
#line 523
    ads7871_remove(var_group1);
#line 524
    ldv_s_ads7871_driver_spi_driver = 0;
  } else {

  }
#line 530
  goto ldv_13760;
  default: ;
#line 531
  goto ldv_13760;
  }
  ldv_13760: ;
  ldv_13764: 
#line 438
  tmp___1 = nondet_int();
#line 438
  if (tmp___1 != 0 || ldv_s_ads7871_driver_spi_driver != 0) {
#line 440
    goto ldv_13763;
  } else {

  }

  ldv_module_exit: 
#line 568
  ldv_handler_precall();
#line 569
  ads7871_exit();
  ldv_final: 
#line 572
  ldv_check_final_state();
#line 575
  return;
}
}
#line 611 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/39_7a/drivers/hwmon/ads7871.c.prepared"
void ldv___ldv_spin_lock_4(spinlock_t *ldv_func_arg1 ) 
{ 


  {
#line 616
  ldv_spin_lock_node_size_lock_of_pglist_data();
#line 618
  __ldv_spin_lock(ldv_func_arg1);
#line 619
  return;
}
}
#line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
__inline static void ldv_error(void) 
{ 


  {
  LDV_ERROR: 
#line 12
  goto LDV_ERROR;
}
}
#line 25
extern int ldv_undef_int(void) ;
#line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 51
  return (exp);
}
}
#line 8 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_lock_of_NOT_ARG_SIGN  ;
#line 11 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
#line 14
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 14
    ldv_error();
  }
#line 16
  ldv_spin_lock_of_NOT_ARG_SIGN = 2;
#line 17
  return;
}
}
#line 20 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
#line 23
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 2) {

  } else {
#line 23
    ldv_error();
  }
#line 25
  ldv_spin_lock_of_NOT_ARG_SIGN = 1;
#line 26
  return;
}
}
#line 29 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 34
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 34
    ldv_error();
  }
#line 37
  is_spin_held_by_another_thread = ldv_undef_int();
#line 40
  if (is_spin_held_by_another_thread) {
#line 43
    return (0);
  } else {
#line 48
    ldv_spin_lock_of_NOT_ARG_SIGN = 2;
#line 50
    return (1);
  }
}
}
#line 55 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_lock_of_NOT_ARG_SIGN(void) 
{ 


  {
#line 58
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 58
    ldv_error();
  }
#line 59
  return;
}
}
#line 62 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_lock_of_NOT_ARG_SIGN(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 67
  is_spin_held_by_another_thread = ldv_undef_int();
#line 70
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1 && ! is_spin_held_by_another_thread) {
#line 73
    return (0);
  } else {
#line 78
    return (1);
  }
}
}
#line 83 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 86
  tmp = ldv_spin_is_locked_lock_of_NOT_ARG_SIGN();
#line 86
  if (tmp) {
#line 86
    tmp___0 = 0;
  } else {
#line 86
    tmp___0 = 1;
  }
#line 86
  return (tmp___0);
}
}
#line 90 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_lock_of_NOT_ARG_SIGN(void) 
{ 
  int is_spin_contended ;

  {
#line 95
  is_spin_contended = ldv_undef_int();
#line 98
  if (is_spin_contended) {
#line 101
    return (0);
  } else {
#line 106
    return (1);
  }
}
}
#line 111 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_lock_of_NOT_ARG_SIGN(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 116
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 116
    ldv_error();
  }
#line 119
  atomic_value_after_dec = ldv_undef_int();
#line 122
  if (atomic_value_after_dec == 0) {
#line 125
    ldv_spin_lock_of_NOT_ARG_SIGN = 2;
#line 127
    return (1);
  } else {

  }
#line 131
  return (0);
}
}
#line 133 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
static int ldv_spin_node_size_lock_of_pglist_data  ;
#line 136 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_lock_node_size_lock_of_pglist_data(void) 
{ 


  {
#line 139
  if (ldv_spin_node_size_lock_of_pglist_data == 1) {

  } else {
#line 139
    ldv_error();
  }
#line 141
  ldv_spin_node_size_lock_of_pglist_data = 2;
#line 142
  return;
}
}
#line 145 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_node_size_lock_of_pglist_data(void) 
{ 


  {
#line 148
  if (ldv_spin_node_size_lock_of_pglist_data == 2) {

  } else {
#line 148
    ldv_error();
  }
#line 150
  ldv_spin_node_size_lock_of_pglist_data = 1;
#line 151
  return;
}
}
#line 154 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_trylock_node_size_lock_of_pglist_data(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 159
  if (ldv_spin_node_size_lock_of_pglist_data == 1) {

  } else {
#line 159
    ldv_error();
  }
#line 162
  is_spin_held_by_another_thread = ldv_undef_int();
#line 165
  if (is_spin_held_by_another_thread) {
#line 168
    return (0);
  } else {
#line 173
    ldv_spin_node_size_lock_of_pglist_data = 2;
#line 175
    return (1);
  }
}
}
#line 180 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_spin_unlock_wait_node_size_lock_of_pglist_data(void) 
{ 


  {
#line 183
  if (ldv_spin_node_size_lock_of_pglist_data == 1) {

  } else {
#line 183
    ldv_error();
  }
#line 184
  return;
}
}
#line 187 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_locked_node_size_lock_of_pglist_data(void) 
{ 
  int is_spin_held_by_another_thread ;

  {
#line 192
  is_spin_held_by_another_thread = ldv_undef_int();
#line 195
  if (ldv_spin_node_size_lock_of_pglist_data == 1 && ! is_spin_held_by_another_thread) {
#line 198
    return (0);
  } else {
#line 203
    return (1);
  }
}
}
#line 208 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_can_lock_node_size_lock_of_pglist_data(void) 
{ 
  int tmp ;
  int tmp___0 ;

  {
#line 211
  tmp = ldv_spin_is_locked_node_size_lock_of_pglist_data();
#line 211
  if (tmp) {
#line 211
    tmp___0 = 0;
  } else {
#line 211
    tmp___0 = 1;
  }
#line 211
  return (tmp___0);
}
}
#line 215 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_spin_is_contended_node_size_lock_of_pglist_data(void) 
{ 
  int is_spin_contended ;

  {
#line 220
  is_spin_contended = ldv_undef_int();
#line 223
  if (is_spin_contended) {
#line 226
    return (0);
  } else {
#line 231
    return (1);
  }
}
}
#line 236 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_lock_node_size_lock_of_pglist_data(void) 
{ 
  int atomic_value_after_dec ;

  {
#line 241
  if (ldv_spin_node_size_lock_of_pglist_data == 1) {

  } else {
#line 241
    ldv_error();
  }
#line 244
  atomic_value_after_dec = ldv_undef_int();
#line 247
  if (atomic_value_after_dec == 0) {
#line 250
    ldv_spin_node_size_lock_of_pglist_data = 2;
#line 252
    return (1);
  } else {

  }
#line 256
  return (0);
}
}
#line 260 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_initialize(void) 
{ 


  {
#line 263
  ldv_spin_lock_of_NOT_ARG_SIGN = 1;
#line 265
  ldv_spin_node_size_lock_of_pglist_data = 1;
#line 266
  return;
}
}
#line 269 "/work/ldvuser/novikov/work/current--X--drivers/hwmon/ads7871.ko--X--defaultlinux--X--39_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/39_7a/common-model/ldv_common_model.c"
void ldv_check_final_state(void) 
{ 


  {
#line 272
  if (ldv_spin_lock_of_NOT_ARG_SIGN == 1) {

  } else {
#line 272
    ldv_error();
  }
#line 274
  if (ldv_spin_node_size_lock_of_pglist_data == 1) {

  } else {
#line 274
    ldv_error();
  }
#line 275
  return;
}
}
