/* Generated by CIL v. 1.5.1 */
/* print_CIL_Input is false */

#line 19 "include/asm-generic/int-ll64.h"
typedef signed char __s8;
#line 22 "include/asm-generic/int-ll64.h"
typedef short __s16;
#line 23 "include/asm-generic/int-ll64.h"
typedef unsigned short __u16;
#line 25 "include/asm-generic/int-ll64.h"
typedef int __s32;
#line 26 "include/asm-generic/int-ll64.h"
typedef unsigned int __u32;
#line 30 "include/asm-generic/int-ll64.h"
typedef unsigned long long __u64;
#line 43 "include/asm-generic/int-ll64.h"
typedef unsigned char u8;
#line 46 "include/asm-generic/int-ll64.h"
typedef unsigned short u16;
#line 49 "include/asm-generic/int-ll64.h"
typedef unsigned int u32;
#line 52 "include/asm-generic/int-ll64.h"
typedef unsigned long long u64;
#line 11 "include/asm-generic/types.h"
typedef unsigned short umode_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/types.h"
typedef u64 dma_addr_t;
#line 11 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_mode_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_uid_t;
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned int __kernel_gid_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef unsigned long __kernel_size_t;
#line 19 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_ssize_t;
#line 21 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_time_t;
#line 22 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long __kernel_suseconds_t;
#line 25 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef int __kernel_clockid_t;
#line 32 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef long long __kernel_loff_t;
#line 41 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_uid_t __kernel_uid32_t;
#line 42 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/posix_types_64.h"
typedef __kernel_gid_t __kernel_gid32_t;
#line 18 "include/linux/types.h"
typedef __u32 __kernel_dev_t;
#line 21 "include/linux/types.h"
typedef __kernel_dev_t dev_t;
#line 23 "include/linux/types.h"
typedef __kernel_mode_t mode_t;
#line 31 "include/linux/types.h"
typedef __kernel_clockid_t clockid_t;
#line 34 "include/linux/types.h"
typedef _Bool bool;
#line 36 "include/linux/types.h"
typedef __kernel_uid32_t uid_t;
#line 37 "include/linux/types.h"
typedef __kernel_gid32_t gid_t;
#line 50 "include/linux/types.h"
typedef __kernel_loff_t loff_t;
#line 59 "include/linux/types.h"
typedef __kernel_size_t size_t;
#line 64 "include/linux/types.h"
typedef __kernel_ssize_t ssize_t;
#line 74 "include/linux/types.h"
typedef __kernel_time_t time_t;
#line 138 "include/linux/types.h"
typedef unsigned long sector_t;
#line 139 "include/linux/types.h"
typedef unsigned long blkcnt_t;
#line 179 "include/linux/types.h"
typedef unsigned int gfp_t;
#line 180 "include/linux/types.h"
typedef unsigned int fmode_t;
#line 192 "include/linux/types.h"
struct __anonstruct_atomic_t_6 {
   int volatile   counter ;
};
#line 192 "include/linux/types.h"
typedef struct __anonstruct_atomic_t_6 atomic_t;
#line 197 "include/linux/types.h"
struct __anonstruct_atomic64_t_7 {
   long volatile   counter ;
};
#line 197 "include/linux/types.h"
typedef struct __anonstruct_atomic64_t_7 atomic64_t;
#line 59 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/alternative.h"
struct module;
#line 44 "include/linux/dynamic_debug.h"
struct bug_entry {
   int bug_addr_disp ;
   int file_disp ;
   unsigned short line ;
   unsigned short flags ;
};
#line 119 "include/linux/kernel.h"
struct completion;
#line 120
struct pt_regs;
#line 220
struct pid;
#line 741
struct task_struct;
#line 742
struct mm_struct;
#line 54 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/page_types.h"
struct pt_regs {
   unsigned long r15 ;
   unsigned long r14 ;
   unsigned long r13 ;
   unsigned long r12 ;
   unsigned long bp ;
   unsigned long bx ;
   unsigned long r11 ;
   unsigned long r10 ;
   unsigned long r9 ;
   unsigned long r8 ;
   unsigned long ax ;
   unsigned long cx ;
   unsigned long dx ;
   unsigned long si ;
   unsigned long di ;
   unsigned long orig_ax ;
   unsigned long ip ;
   unsigned long cs ;
   unsigned long flags ;
   unsigned long sp ;
   unsigned long ss ;
};
#line 138 "include/linux/init.h"
typedef void (*ctor_fn_t)(void);
#line 13 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgdval_t;
#line 14 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
typedef unsigned long pgprotval_t;
#line 18 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_64_types.h"
struct pgprot {
   pgprotval_t pgprot ;
};
#line 187 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct pgprot pgprot_t;
#line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
struct __anonstruct_pgd_t_11 {
   pgdval_t pgd ;
};
#line 189 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/pgtable_types.h"
typedef struct __anonstruct_pgd_t_11 pgd_t;
#line 277
struct page;
#line 285
struct file;
#line 298
struct seq_file;
#line 123 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/desc_defs.h"
struct cpumask;
#line 315 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/paravirt_types.h"
struct arch_spinlock;
#line 301 "include/linux/bitmap.h"
struct cpumask {
   unsigned long bits[64U] ;
};
#line 13 "include/linux/cpumask.h"
typedef struct cpumask cpumask_t;
#line 301 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/ds.h"
struct exec_domain;
#line 90 "include/linux/personality.h"
struct map_segment;
#line 90 "include/linux/personality.h"
struct exec_domain {
   char const   *name ;
   void (*handler)(int  , struct pt_regs * ) ;
   unsigned char pers_low ;
   unsigned char pers_high ;
   unsigned long *signal_map ;
   unsigned long *signal_invmap ;
   struct map_segment *err_map ;
   struct map_segment *socktype_map ;
   struct map_segment *sockopt_map ;
   struct map_segment *af_map ;
   struct module *module ;
   struct exec_domain *next ;
};
#line 424 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct kmem_cache;
#line 629 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
struct __anonstruct_mm_segment_t_24 {
   unsigned long seg ;
};
#line 629 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/processor.h"
typedef struct __anonstruct_mm_segment_t_24 mm_segment_t;
#line 56 "include/linux/prefetch.h"
struct list_head {
   struct list_head *next ;
   struct list_head *prev ;
};
#line 341 "include/linux/list.h"
struct hlist_node;
#line 341 "include/linux/list.h"
struct hlist_head {
   struct hlist_node *first ;
};
#line 557 "include/linux/list.h"
struct hlist_node {
   struct hlist_node *next ;
   struct hlist_node **pprev ;
};
#line 648 "include/linux/list.h"
struct arch_spinlock {
   unsigned int slock ;
};
#line 10 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct arch_spinlock arch_spinlock_t;
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
struct __anonstruct_arch_rwlock_t_25 {
   unsigned int lock ;
};
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/spinlock_types.h"
typedef struct __anonstruct_arch_rwlock_t_25 arch_rwlock_t;
#line 17
struct lockdep_map;
#line 23 "include/asm-generic/atomic-long.h"
typedef atomic64_t atomic_long_t;
#line 56 "include/linux/debug_locks.h"
struct stack_trace {
   unsigned int nr_entries ;
   unsigned int max_entries ;
   unsigned long *entries ;
   int skip ;
};
#line 24 "include/linux/stacktrace.h"
struct lockdep_subclass_key {
   char __one_byte ;
} __attribute__((__packed__)) ;
#line 42 "include/linux/lockdep.h"
struct lock_class_key {
   struct lockdep_subclass_key subkeys[8U] ;
};
#line 46 "include/linux/lockdep.h"
struct lock_class {
   struct list_head hash_entry ;
   struct list_head lock_entry ;
   struct lockdep_subclass_key *key ;
   unsigned int subclass ;
   unsigned int dep_gen_id ;
   unsigned long usage_mask ;
   struct stack_trace usage_traces[13U] ;
   struct list_head locks_after ;
   struct list_head locks_before ;
   unsigned int version ;
   unsigned long ops ;
   char const   *name ;
   int name_version ;
   unsigned long contention_point[4U] ;
   unsigned long contending_point[4U] ;
};
#line 131 "include/linux/lockdep.h"
struct lockdep_map {
   struct lock_class_key *key ;
   struct lock_class *class_cache ;
   char const   *name ;
   int cpu ;
   unsigned long ip ;
};
#line 543 "include/linux/lockdep.h"
struct raw_spinlock {
   arch_spinlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 33 "include/linux/spinlock_types.h"
struct __anonstruct_ldv_5574_27 {
   u8 __padding[1U] ;
   struct lockdep_map dep_map ;
};
#line 33 "include/linux/spinlock_types.h"
union __anonunion_ldv_5575_26 {
   struct raw_spinlock rlock ;
   struct __anonstruct_ldv_5574_27 ldv_5574 ;
};
#line 33 "include/linux/spinlock_types.h"
struct spinlock {
   union __anonunion_ldv_5575_26 ldv_5575 ;
};
#line 77 "include/linux/spinlock_types.h"
typedef struct spinlock spinlock_t;
#line 23 "include/linux/rwlock_types.h"
struct __anonstruct_rwlock_t_28 {
   arch_rwlock_t raw_lock ;
   unsigned int magic ;
   unsigned int owner_cpu ;
   void *owner ;
   struct lockdep_map dep_map ;
};
#line 23 "include/linux/rwlock_types.h"
typedef struct __anonstruct_rwlock_t_28 rwlock_t;
#line 23
struct thread_info;
#line 23 "include/linux/rwlock_types.h"
struct mutex {
   atomic_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct thread_info *owner ;
   char const   *name ;
   void *magic ;
   struct lockdep_map dep_map ;
};
#line 112 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
struct timespec;
#line 113
struct compat_timespec;
#line 114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
struct __anonstruct_ldv_5696_30 {
   unsigned long arg0 ;
   unsigned long arg1 ;
   unsigned long arg2 ;
   unsigned long arg3 ;
};
#line 114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
struct __anonstruct_futex_31 {
   u32 *uaddr ;
   u32 val ;
   u32 flags ;
   u32 bitset ;
   u64 time ;
   u32 *uaddr2 ;
};
#line 114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
struct __anonstruct_nanosleep_32 {
   clockid_t index ;
   struct timespec *rmtp ;
   struct compat_timespec *compat_rmtp ;
   u64 expires ;
};
#line 114
struct pollfd;
#line 114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
struct __anonstruct_poll_33 {
   struct pollfd *ufds ;
   int nfds ;
   int has_timeout ;
   unsigned long tv_sec ;
   unsigned long tv_nsec ;
};
#line 114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
union __anonunion_ldv_5719_29 {
   struct __anonstruct_ldv_5696_30 ldv_5696 ;
   struct __anonstruct_futex_31 futex ;
   struct __anonstruct_nanosleep_32 nanosleep ;
   struct __anonstruct_poll_33 poll ;
};
#line 114 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/stat.h"
struct restart_block {
   long (*fn)(struct restart_block * ) ;
   union __anonunion_ldv_5719_29 ldv_5719 ;
};
#line 54 "include/linux/thread_info.h"
struct thread_info {
   struct task_struct *task ;
   struct exec_domain *exec_domain ;
   __u32 flags ;
   __u32 status ;
   __u32 cpu ;
   int preempt_count ;
   mm_segment_t addr_limit ;
   struct restart_block restart_block ;
   void *sysenter_return ;
   int uaccess_err ;
};
#line 169 "include/linux/seqlock.h"
struct timespec {
   __kernel_time_t tv_sec ;
   long tv_nsec ;
};
#line 18 "include/linux/time.h"
struct timeval {
   __kernel_time_t tv_sec ;
   __kernel_suseconds_t tv_usec ;
};
#line 268 "include/linux/time.h"
struct kstat {
   u64 ino ;
   dev_t dev ;
   umode_t mode ;
   unsigned int nlink ;
   uid_t uid ;
   gid_t gid ;
   dev_t rdev ;
   loff_t size ;
   struct timespec atime ;
   struct timespec mtime ;
   struct timespec ctime ;
   unsigned long blksize ;
   unsigned long long blocks ;
};
#line 49 "include/linux/wait.h"
struct __wait_queue_head {
   spinlock_t lock ;
   struct list_head task_list ;
};
#line 54 "include/linux/wait.h"
typedef struct __wait_queue_head wait_queue_head_t;
#line 96 "include/linux/nodemask.h"
struct __anonstruct_nodemask_t_35 {
   unsigned long bits[16U] ;
};
#line 96 "include/linux/nodemask.h"
typedef struct __anonstruct_nodemask_t_35 nodemask_t;
#line 632 "include/linux/mmzone.h"
struct rw_semaphore;
#line 77 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwsem.h"
typedef long rwsem_count_t;
#line 78 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/rwsem.h"
struct rw_semaphore {
   rwsem_count_t count ;
   spinlock_t wait_lock ;
   struct list_head wait_list ;
   struct lockdep_map dep_map ;
};
#line 172 "include/linux/ioport.h"
struct device;
#line 85 "include/linux/debugobjects.h"
struct tvec_base;
#line 86 "include/linux/debugobjects.h"
struct timer_list {
   struct list_head entry ;
   unsigned long expires ;
   void (*function)(unsigned long  ) ;
   unsigned long data ;
   struct tvec_base *base ;
   void *start_site ;
   char start_comm[16U] ;
   int start_pid ;
   struct lockdep_map lockdep_map ;
};
#line 253 "include/linux/timer.h"
struct work_struct;
#line 18 "include/linux/workqueue.h"
struct work_struct {
   atomic_long_t data ;
   struct list_head entry ;
   void (*func)(struct work_struct * ) ;
   struct lockdep_map lockdep_map ;
};
#line 299 "include/linux/workqueue.h"
struct completion {
   unsigned int done ;
   wait_queue_head_t wait ;
};
#line 37 "include/linux/pm.h"
struct pm_message {
   int event ;
};
#line 46 "include/linux/pm.h"
typedef struct pm_message pm_message_t;
#line 47 "include/linux/pm.h"
struct dev_pm_ops {
   int (*prepare)(struct device * ) ;
   void (*complete)(struct device * ) ;
   int (*suspend)(struct device * ) ;
   int (*resume)(struct device * ) ;
   int (*freeze)(struct device * ) ;
   int (*thaw)(struct device * ) ;
   int (*poweroff)(struct device * ) ;
   int (*restore)(struct device * ) ;
   int (*suspend_noirq)(struct device * ) ;
   int (*resume_noirq)(struct device * ) ;
   int (*freeze_noirq)(struct device * ) ;
   int (*thaw_noirq)(struct device * ) ;
   int (*poweroff_noirq)(struct device * ) ;
   int (*restore_noirq)(struct device * ) ;
   int (*runtime_suspend)(struct device * ) ;
   int (*runtime_resume)(struct device * ) ;
   int (*runtime_idle)(struct device * ) ;
};
#line 266
enum dpm_state {
    DPM_INVALID = 0,
    DPM_ON = 1,
    DPM_PREPARING = 2,
    DPM_RESUMING = 3,
    DPM_SUSPENDING = 4,
    DPM_OFF = 5,
    DPM_OFF_IRQ = 6
} ;
#line 276
enum rpm_status {
    RPM_ACTIVE = 0,
    RPM_RESUMING = 1,
    RPM_SUSPENDED = 2,
    RPM_SUSPENDING = 3
} ;
#line 283
enum rpm_request {
    RPM_REQ_NONE = 0,
    RPM_REQ_IDLE = 1,
    RPM_REQ_SUSPEND = 2,
    RPM_REQ_RESUME = 3
} ;
#line 290 "include/linux/pm.h"
struct dev_pm_info {
   pm_message_t power_state ;
   unsigned char can_wakeup : 1 ;
   unsigned char should_wakeup : 1 ;
   unsigned char async_suspend : 1 ;
   enum dpm_state status ;
   struct list_head entry ;
   struct completion completion ;
   struct timer_list suspend_timer ;
   unsigned long timer_expires ;
   struct work_struct work ;
   wait_queue_head_t wait_queue ;
   spinlock_t lock ;
   atomic_t usage_count ;
   atomic_t child_count ;
   unsigned char disable_depth : 3 ;
   unsigned char ignore_children : 1 ;
   unsigned char idle_notification : 1 ;
   unsigned char request_pending : 1 ;
   unsigned char deferred_resume : 1 ;
   unsigned char run_wake : 1 ;
   unsigned char runtime_auto : 1 ;
   enum rpm_request request ;
   enum rpm_status runtime_status ;
   int runtime_error ;
};
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
struct __anonstruct_mm_context_t_100 {
   void *ldt ;
   int size ;
   struct mutex lock ;
   void *vdso ;
};
#line 16 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/mmu.h"
typedef struct __anonstruct_mm_context_t_100 mm_context_t;
#line 49 "include/linux/topology.h"
struct vm_area_struct;
#line 27 "include/linux/elf.h"
typedef __u64 Elf64_Addr;
#line 28 "include/linux/elf.h"
typedef __u16 Elf64_Half;
#line 32 "include/linux/elf.h"
typedef __u32 Elf64_Word;
#line 33 "include/linux/elf.h"
typedef __u64 Elf64_Xword;
#line 202 "include/linux/elf.h"
struct elf64_sym {
   Elf64_Word st_name ;
   unsigned char st_info ;
   unsigned char st_other ;
   Elf64_Half st_shndx ;
   Elf64_Addr st_value ;
   Elf64_Xword st_size ;
};
#line 210 "include/linux/elf.h"
typedef struct elf64_sym Elf64_Sym;
#line 442
struct kobject;
#line 443 "include/linux/elf.h"
struct attribute {
   char const   *name ;
   struct module *owner ;
   mode_t mode ;
   struct lock_class_key *key ;
   struct lock_class_key skey ;
};
#line 37 "include/linux/sysfs.h"
struct attribute_group {
   char const   *name ;
   mode_t (*is_visible)(struct kobject * , struct attribute * , int  ) ;
   struct attribute **attrs ;
};
#line 101 "include/linux/sysfs.h"
struct sysfs_ops {
   ssize_t (*show)(struct kobject * , struct attribute * , char * ) ;
   ssize_t (*store)(struct kobject * , struct attribute * , char const   * , size_t  ) ;
};
#line 119
struct sysfs_dirent;
#line 176 "include/linux/sysfs.h"
struct kref {
   atomic_t refcount ;
};
#line 48 "include/linux/kobject.h"
struct kset;
#line 48
struct kobj_type;
#line 48 "include/linux/kobject.h"
struct kobject {
   char const   *name ;
   struct list_head entry ;
   struct kobject *parent ;
   struct kset *kset ;
   struct kobj_type *ktype ;
   struct sysfs_dirent *sd ;
   struct kref kref ;
   unsigned char state_initialized : 1 ;
   unsigned char state_in_sysfs : 1 ;
   unsigned char state_add_uevent_sent : 1 ;
   unsigned char state_remove_uevent_sent : 1 ;
   unsigned char uevent_suppress : 1 ;
};
#line 106 "include/linux/kobject.h"
struct kobj_type {
   void (*release)(struct kobject * ) ;
   struct sysfs_ops  const  *sysfs_ops ;
   struct attribute **default_attrs ;
};
#line 112 "include/linux/kobject.h"
struct kobj_uevent_env {
   char *envp[32U] ;
   int envp_idx ;
   char buf[2048U] ;
   int buflen ;
};
#line 119 "include/linux/kobject.h"
struct kset_uevent_ops {
   int (* const  filter)(struct kset * , struct kobject * ) ;
   char const   *(* const  name)(struct kset * , struct kobject * ) ;
   int (* const  uevent)(struct kset * , struct kobject * , struct kobj_uevent_env * ) ;
};
#line 136 "include/linux/kobject.h"
struct kset {
   struct list_head list ;
   spinlock_t list_lock ;
   struct kobject kobj ;
   struct kset_uevent_ops  const  *uevent_ops ;
};
#line 210
struct kernel_param;
#line 38 "include/linux/moduleparam.h"
struct kparam_string;
#line 38
struct kparam_array;
#line 38 "include/linux/moduleparam.h"
union __anonunion_ldv_10626_110 {
   void *arg ;
   struct kparam_string  const  *str ;
   struct kparam_array  const  *arr ;
};
#line 38 "include/linux/moduleparam.h"
struct kernel_param {
   char const   *name ;
   u16 perm ;
   u16 flags ;
   int (*set)(char const   * , struct kernel_param * ) ;
   int (*get)(char * , struct kernel_param * ) ;
   union __anonunion_ldv_10626_110 ldv_10626 ;
};
#line 54 "include/linux/moduleparam.h"
struct kparam_string {
   unsigned int maxlen ;
   char *string ;
};
#line 60 "include/linux/moduleparam.h"
struct kparam_array {
   unsigned int max ;
   unsigned int *num ;
   int (*set)(char const   * , struct kernel_param * ) ;
   int (*get)(char * , struct kernel_param * ) ;
   unsigned int elemsize ;
   void *elem ;
};
#line 242 "include/linux/moduleparam.h"
struct rcu_head {
   struct rcu_head *next ;
   void (*func)(struct rcu_head * ) ;
};
#line 504 "include/linux/rcupdate.h"
struct tracepoint;
#line 505 "include/linux/rcupdate.h"
struct tracepoint {
   char const   *name ;
   int state ;
   void (*regfunc)(void) ;
   void (*unregfunc)(void) ;
   void **funcs ;
};
#line 230 "include/linux/percpu.h"
struct mod_arch_specific {

};
#line 92 "include/trace/events/module.h"
struct kernel_symbol {
   unsigned long value ;
   char const   *name ;
};
#line 48 "include/linux/module.h"
struct module_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct module_attribute * , struct module * , char * ) ;
   ssize_t (*store)(struct module_attribute * , struct module * , char const   * ,
                    size_t  ) ;
   void (*setup)(struct module * , char const   * ) ;
   int (*test)(struct module * ) ;
   void (*free)(struct module * ) ;
};
#line 60
struct module_param_attrs;
#line 60 "include/linux/module.h"
struct module_kobject {
   struct kobject kobj ;
   struct module *mod ;
   struct kobject *drivers_dir ;
   struct module_param_attrs *mp ;
};
#line 72
struct exception_table_entry;
#line 182
enum module_state {
    MODULE_STATE_LIVE = 0,
    MODULE_STATE_COMING = 1,
    MODULE_STATE_GOING = 2
} ;
#line 188 "include/linux/module.h"
struct module_ref {
   unsigned int incs ;
   unsigned int decs ;
};
#line 374
struct module_sect_attrs;
#line 374
struct module_notes_attrs;
#line 374
struct ftrace_event_call;
#line 374 "include/linux/module.h"
struct module {
   enum module_state state ;
   struct list_head list ;
   char name[56U] ;
   struct module_kobject mkobj ;
   struct module_attribute *modinfo_attrs ;
   char const   *version ;
   char const   *srcversion ;
   struct kobject *holders_dir ;
   struct kernel_symbol  const  *syms ;
   unsigned long const   *crcs ;
   unsigned int num_syms ;
   struct kernel_param *kp ;
   unsigned int num_kp ;
   unsigned int num_gpl_syms ;
   struct kernel_symbol  const  *gpl_syms ;
   unsigned long const   *gpl_crcs ;
   struct kernel_symbol  const  *unused_syms ;
   unsigned long const   *unused_crcs ;
   unsigned int num_unused_syms ;
   unsigned int num_unused_gpl_syms ;
   struct kernel_symbol  const  *unused_gpl_syms ;
   unsigned long const   *unused_gpl_crcs ;
   struct kernel_symbol  const  *gpl_future_syms ;
   unsigned long const   *gpl_future_crcs ;
   unsigned int num_gpl_future_syms ;
   unsigned int num_exentries ;
   struct exception_table_entry *extable ;
   int (*init)(void) ;
   void *module_init ;
   void *module_core ;
   unsigned int init_size ;
   unsigned int core_size ;
   unsigned int init_text_size ;
   unsigned int core_text_size ;
   struct mod_arch_specific arch ;
   unsigned int taints ;
   unsigned int num_bugs ;
   struct list_head bug_list ;
   struct bug_entry *bug_table ;
   Elf64_Sym *symtab ;
   Elf64_Sym *core_symtab ;
   unsigned int num_symtab ;
   unsigned int core_num_syms ;
   char *strtab ;
   char *core_strtab ;
   struct module_sect_attrs *sect_attrs ;
   struct module_notes_attrs *notes_attrs ;
   void *percpu ;
   unsigned int percpu_size ;
   char *args ;
   struct tracepoint *tracepoints ;
   unsigned int num_tracepoints ;
   char const   **trace_bprintk_fmt_start ;
   unsigned int num_trace_bprintk_fmt ;
   struct ftrace_event_call *trace_events ;
   unsigned int num_trace_events ;
   struct list_head modules_which_use_me ;
   struct task_struct *waiter ;
   void (*exit)(void) ;
   struct module_ref *refptr ;
   ctor_fn_t (**ctors)(void) ;
   unsigned int num_ctors ;
};
#line 540
struct device_driver;
#line 117 "include/linux/kmemleak.h"
struct kmem_cache_cpu {
   void **freelist ;
   struct page *page ;
   int node ;
   unsigned int stat[18U] ;
};
#line 44 "include/linux/slub_def.h"
struct kmem_cache_node {
   spinlock_t list_lock ;
   unsigned long nr_partial ;
   struct list_head partial ;
   atomic_long_t nr_slabs ;
   atomic_long_t total_objects ;
   struct list_head full ;
};
#line 55 "include/linux/slub_def.h"
struct kmem_cache_order_objects {
   unsigned long x ;
};
#line 65 "include/linux/slub_def.h"
struct kmem_cache {
   struct kmem_cache_cpu *cpu_slab ;
   unsigned long flags ;
   int size ;
   int objsize ;
   int offset ;
   struct kmem_cache_order_objects oo ;
   struct kmem_cache_node local_node ;
   struct kmem_cache_order_objects max ;
   struct kmem_cache_order_objects min ;
   gfp_t allocflags ;
   int refcount ;
   void (*ctor)(void * ) ;
   int inuse ;
   int align ;
   unsigned long min_partial ;
   char const   *name ;
   struct list_head list ;
   struct kobject kobj ;
   int remote_node_defrag_ratio ;
   struct kmem_cache_node *node[1024U] ;
};
#line 40 "include/asm-generic/sections.h"
struct exception_table_entry {
   unsigned long insn ;
   unsigned long fixup ;
};
#line 209 "include/linux/hardirq.h"
struct rb_node {
   unsigned long rb_parent_color ;
   struct rb_node *rb_right ;
   struct rb_node *rb_left ;
};
#line 108 "include/linux/rbtree.h"
struct rb_root {
   struct rb_node *rb_node ;
};
#line 475 "include/linux/mod_devicetable.h"
struct klist_node;
#line 37 "include/linux/klist.h"
struct klist_node {
   void *n_klist ;
   struct list_head n_node ;
   struct kref n_ref ;
};
#line 67 "include/linux/klist.h"
struct semaphore {
   spinlock_t lock ;
   unsigned int count ;
   struct list_head wait_list ;
};
#line 48 "include/linux/semaphore.h"
struct dma_map_ops;
#line 48 "include/linux/semaphore.h"
struct dev_archdata {
   void *acpi_handle ;
   struct dma_map_ops *dma_ops ;
   void *iommu ;
};
#line 17 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct device_private;
#line 18
struct driver_private;
#line 19
struct class;
#line 20
struct class_private;
#line 21
struct bus_type;
#line 22
struct bus_type_private;
#line 23 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/device.h"
struct bus_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct bus_type * , char * ) ;
   ssize_t (*store)(struct bus_type * , char const   * , size_t  ) ;
};
#line 50 "include/linux/device.h"
struct device_attribute;
#line 50
struct driver_attribute;
#line 50 "include/linux/device.h"
struct bus_type {
   char const   *name ;
   struct bus_attribute *bus_attrs ;
   struct device_attribute *dev_attrs ;
   struct driver_attribute *drv_attrs ;
   int (*match)(struct device * , struct device_driver * ) ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct bus_type_private *p ;
};
#line 121 "include/linux/device.h"
struct device_driver {
   char const   *name ;
   struct bus_type *bus ;
   struct module *owner ;
   char const   *mod_name ;
   bool suppress_bind_attrs ;
   int (*probe)(struct device * ) ;
   int (*remove)(struct device * ) ;
   void (*shutdown)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct attribute_group  const  **groups ;
   struct dev_pm_ops  const  *pm ;
   struct driver_private *p ;
};
#line 153 "include/linux/device.h"
struct driver_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device_driver * , char * ) ;
   ssize_t (*store)(struct device_driver * , char const   * , size_t  ) ;
};
#line 183
struct class_attribute;
#line 183 "include/linux/device.h"
struct class {
   char const   *name ;
   struct module *owner ;
   struct class_attribute *class_attrs ;
   struct device_attribute *dev_attrs ;
   struct kobject *dev_kobj ;
   int (*dev_uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , mode_t * ) ;
   void (*class_release)(struct class * ) ;
   void (*dev_release)(struct device * ) ;
   int (*suspend)(struct device * , pm_message_t  ) ;
   int (*resume)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
   struct class_private *p ;
};
#line 210
struct device_type;
#line 249 "include/linux/device.h"
struct class_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct class * , struct class_attribute * , char * ) ;
   ssize_t (*store)(struct class * , struct class_attribute * , char const   * , size_t  ) ;
};
#line 300 "include/linux/device.h"
struct device_type {
   char const   *name ;
   struct attribute_group  const  **groups ;
   int (*uevent)(struct device * , struct kobj_uevent_env * ) ;
   char *(*devnode)(struct device * , mode_t * ) ;
   void (*release)(struct device * ) ;
   struct dev_pm_ops  const  *pm ;
};
#line 327 "include/linux/device.h"
struct device_attribute {
   struct attribute attr ;
   ssize_t (*show)(struct device * , struct device_attribute * , char * ) ;
   ssize_t (*store)(struct device * , struct device_attribute * , char const   * ,
                    size_t  ) ;
};
#line 388 "include/linux/device.h"
struct device_dma_parameters {
   unsigned int max_segment_size ;
   unsigned long segment_boundary_mask ;
};
#line 397
struct dma_coherent_mem;
#line 397 "include/linux/device.h"
struct device {
   struct device *parent ;
   struct device_private *p ;
   struct kobject kobj ;
   char const   *init_name ;
   struct device_type *type ;
   struct semaphore sem ;
   struct bus_type *bus ;
   struct device_driver *driver ;
   void *platform_data ;
   struct dev_pm_info power ;
   int numa_node ;
   u64 *dma_mask ;
   u64 coherent_dma_mask ;
   struct device_dma_parameters *dma_parms ;
   struct list_head dma_pools ;
   struct dma_coherent_mem *dma_mem ;
   struct dev_archdata archdata ;
   dev_t devt ;
   spinlock_t devres_lock ;
   struct list_head devres_head ;
   struct klist_node knode_class ;
   struct class *class ;
   struct attribute_group  const  **groups ;
   void (*release)(struct device * ) ;
};
#line 902 "include/linux/pci.h"
struct scatterlist {
   unsigned long sg_magic ;
   unsigned long page_link ;
   unsigned int offset ;
   unsigned int length ;
   dma_addr_t dma_address ;
   unsigned int dma_length ;
};
#line 1034
struct prio_tree_node;
#line 1034 "include/linux/pci.h"
struct raw_prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
};
#line 19 "include/linux/prio_tree.h"
struct prio_tree_node {
   struct prio_tree_node *left ;
   struct prio_tree_node *right ;
   struct prio_tree_node *parent ;
   unsigned long start ;
   unsigned long last ;
};
#line 27 "include/linux/prio_tree.h"
struct prio_tree_root {
   struct prio_tree_node *prio_tree_node ;
   unsigned short index_bits ;
   unsigned short raw ;
};
#line 115
struct address_space;
#line 116 "include/linux/prio_tree.h"
struct __anonstruct_ldv_15461_115 {
   u16 inuse ;
   u16 objects ;
};
#line 116 "include/linux/prio_tree.h"
union __anonunion_ldv_15462_114 {
   atomic_t _mapcount ;
   struct __anonstruct_ldv_15461_115 ldv_15461 ;
};
#line 116 "include/linux/prio_tree.h"
struct __anonstruct_ldv_15467_117 {
   unsigned long private ;
   struct address_space *mapping ;
};
#line 116 "include/linux/prio_tree.h"
union __anonunion_ldv_15470_116 {
   struct __anonstruct_ldv_15467_117 ldv_15467 ;
   struct kmem_cache *slab ;
   struct page *first_page ;
};
#line 116 "include/linux/prio_tree.h"
union __anonunion_ldv_15474_118 {
   unsigned long index ;
   void *freelist ;
};
#line 116 "include/linux/prio_tree.h"
struct page {
   unsigned long flags ;
   atomic_t _count ;
   union __anonunion_ldv_15462_114 ldv_15462 ;
   union __anonunion_ldv_15470_116 ldv_15470 ;
   union __anonunion_ldv_15474_118 ldv_15474 ;
   struct list_head lru ;
};
#line 122 "include/linux/mm_types.h"
struct __anonstruct_vm_set_120 {
   struct list_head list ;
   void *parent ;
   struct vm_area_struct *head ;
};
#line 122 "include/linux/mm_types.h"
union __anonunion_shared_119 {
   struct __anonstruct_vm_set_120 vm_set ;
   struct raw_prio_tree_node prio_tree_node ;
};
#line 122
struct anon_vma;
#line 122
struct vm_operations_struct;
#line 122
struct mempolicy;
#line 122 "include/linux/mm_types.h"
struct vm_area_struct {
   struct mm_struct *vm_mm ;
   unsigned long vm_start ;
   unsigned long vm_end ;
   struct vm_area_struct *vm_next ;
   pgprot_t vm_page_prot ;
   unsigned long vm_flags ;
   struct rb_node vm_rb ;
   union __anonunion_shared_119 shared ;
   struct list_head anon_vma_chain ;
   struct anon_vma *anon_vma ;
   struct vm_operations_struct  const  *vm_ops ;
   unsigned long vm_pgoff ;
   struct file *vm_file ;
   void *vm_private_data ;
   unsigned long vm_truncate_count ;
   struct mempolicy *vm_policy ;
};
#line 186 "include/linux/mm_types.h"
struct core_thread {
   struct task_struct *task ;
   struct core_thread *next ;
};
#line 192 "include/linux/mm_types.h"
struct core_state {
   atomic_t nr_threads ;
   struct core_thread dumper ;
   struct completion startup ;
};
#line 205 "include/linux/mm_types.h"
struct mm_rss_stat {
   unsigned long count[3U] ;
};
#line 220
struct linux_binfmt;
#line 220
struct mmu_notifier_mm;
#line 220 "include/linux/mm_types.h"
struct mm_struct {
   struct vm_area_struct *mmap ;
   struct rb_root mm_rb ;
   struct vm_area_struct *mmap_cache ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   void (*unmap_area)(struct mm_struct * , unsigned long  ) ;
   unsigned long mmap_base ;
   unsigned long task_size ;
   unsigned long cached_hole_size ;
   unsigned long free_area_cache ;
   pgd_t *pgd ;
   atomic_t mm_users ;
   atomic_t mm_count ;
   int map_count ;
   struct rw_semaphore mmap_sem ;
   spinlock_t page_table_lock ;
   struct list_head mmlist ;
   unsigned long hiwater_rss ;
   unsigned long hiwater_vm ;
   unsigned long total_vm ;
   unsigned long locked_vm ;
   unsigned long shared_vm ;
   unsigned long exec_vm ;
   unsigned long stack_vm ;
   unsigned long reserved_vm ;
   unsigned long def_flags ;
   unsigned long nr_ptes ;
   unsigned long start_code ;
   unsigned long end_code ;
   unsigned long start_data ;
   unsigned long end_data ;
   unsigned long start_brk ;
   unsigned long brk ;
   unsigned long start_stack ;
   unsigned long arg_start ;
   unsigned long arg_end ;
   unsigned long env_start ;
   unsigned long env_end ;
   unsigned long saved_auxv[44U] ;
   struct mm_rss_stat rss_stat ;
   struct linux_binfmt *binfmt ;
   cpumask_t cpu_vm_mask ;
   mm_context_t context ;
   unsigned int faultstamp ;
   unsigned int token_priority ;
   unsigned int last_interval ;
   unsigned long flags ;
   struct core_state *core_state ;
   spinlock_t ioctx_lock ;
   struct hlist_head ioctx_list ;
   struct task_struct *owner ;
   struct file *exe_file ;
   unsigned long num_exe_file_vmas ;
   struct mmu_notifier_mm *mmu_notifier_mm ;
};
#line 313
struct file_ra_state;
#line 315
struct writeback_control;
#line 158 "include/linux/mm.h"
struct vm_fault {
   unsigned int flags ;
   unsigned long pgoff ;
   void *virtual_address ;
   struct page *page ;
};
#line 175 "include/linux/mm.h"
struct vm_operations_struct {
   void (*open)(struct vm_area_struct * ) ;
   void (*close)(struct vm_area_struct * ) ;
   int (*fault)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*page_mkwrite)(struct vm_area_struct * , struct vm_fault * ) ;
   int (*access)(struct vm_area_struct * , unsigned long  , void * , int  , int  ) ;
   int (*set_policy)(struct vm_area_struct * , struct mempolicy * ) ;
   struct mempolicy *(*get_policy)(struct vm_area_struct * , unsigned long  ) ;
   int (*migrate)(struct vm_area_struct * , nodemask_t const   * , nodemask_t const   * ,
                  unsigned long  ) ;
};
#line 224
struct inode;
#line 34 "include/linux/bug.h"
struct dma_attrs {
   unsigned long flags[1U] ;
};
#line 266 "include/linux/scatterlist.h"
enum dma_data_direction {
    DMA_BIDIRECTIONAL = 0,
    DMA_TO_DEVICE = 1,
    DMA_FROM_DEVICE = 2,
    DMA_NONE = 3
} ;
#line 273 "include/linux/scatterlist.h"
struct dma_map_ops {
   void *(*alloc_coherent)(struct device * , size_t  , dma_addr_t * , gfp_t  ) ;
   void (*free_coherent)(struct device * , size_t  , void * , dma_addr_t  ) ;
   dma_addr_t (*map_page)(struct device * , struct page * , unsigned long  , size_t  ,
                          enum dma_data_direction  , struct dma_attrs * ) ;
   void (*unmap_page)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ,
                      struct dma_attrs * ) ;
   int (*map_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                 struct dma_attrs * ) ;
   void (*unmap_sg)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ,
                    struct dma_attrs * ) ;
   void (*sync_single_for_cpu)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_single_for_device)(struct device * , dma_addr_t  , size_t  , enum dma_data_direction  ) ;
   void (*sync_single_range_for_cpu)(struct device * , dma_addr_t  , unsigned long  ,
                                     size_t  , enum dma_data_direction  ) ;
   void (*sync_single_range_for_device)(struct device * , dma_addr_t  , unsigned long  ,
                                        size_t  , enum dma_data_direction  ) ;
   void (*sync_sg_for_cpu)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   void (*sync_sg_for_device)(struct device * , struct scatterlist * , int  , enum dma_data_direction  ) ;
   int (*mapping_error)(struct device * , dma_addr_t  ) ;
   int (*dma_supported)(struct device * , u64  ) ;
   int (*set_dma_mask)(struct device * , u64  ) ;
   int is_phys ;
};
#line 408 "include/linux/rculist.h"
struct nameidata;
#line 409
struct path;
#line 410
struct vfsmount;
#line 411 "include/linux/rculist.h"
struct qstr {
   unsigned int hash ;
   unsigned int len ;
   unsigned char const   *name ;
};
#line 77 "include/linux/dcache.h"
union __anonunion_d_u_121 {
   struct list_head d_child ;
   struct rcu_head d_rcu ;
};
#line 77
struct dentry_operations;
#line 77
struct super_block;
#line 77 "include/linux/dcache.h"
struct dentry {
   atomic_t d_count ;
   unsigned int d_flags ;
   spinlock_t d_lock ;
   int d_mounted ;
   struct inode *d_inode ;
   struct hlist_node d_hash ;
   struct dentry *d_parent ;
   struct qstr d_name ;
   struct list_head d_lru ;
   union __anonunion_d_u_121 d_u ;
   struct list_head d_subdirs ;
   struct list_head d_alias ;
   unsigned long d_time ;
   struct dentry_operations  const  *d_op ;
   struct super_block *d_sb ;
   void *d_fsdata ;
   unsigned char d_iname[32U] ;
};
#line 126 "include/linux/dcache.h"
struct dentry_operations {
   int (*d_revalidate)(struct dentry * , struct nameidata * ) ;
   int (*d_hash)(struct dentry * , struct qstr * ) ;
   int (*d_compare)(struct dentry * , struct qstr * , struct qstr * ) ;
   int (*d_delete)(struct dentry * ) ;
   void (*d_release)(struct dentry * ) ;
   void (*d_iput)(struct dentry * , struct inode * ) ;
   char *(*d_dname)(struct dentry * , char * , int  ) ;
};
#line 396 "include/linux/dcache.h"
struct path {
   struct vfsmount *mnt ;
   struct dentry *dentry ;
};
#line 55 "include/linux/radix-tree.h"
struct radix_tree_node;
#line 55 "include/linux/radix-tree.h"
struct radix_tree_root {
   unsigned int height ;
   gfp_t gfp_mask ;
   struct radix_tree_node *rnode ;
};
#line 200
enum pid_type {
    PIDTYPE_PID = 0,
    PIDTYPE_PGID = 1,
    PIDTYPE_SID = 2,
    PIDTYPE_MAX = 3
} ;
#line 207
struct pid_namespace;
#line 207 "include/linux/radix-tree.h"
struct upid {
   int nr ;
   struct pid_namespace *ns ;
   struct hlist_node pid_chain ;
};
#line 56 "include/linux/pid.h"
struct pid {
   atomic_t count ;
   unsigned int level ;
   struct hlist_head tasks[3U] ;
   struct rcu_head rcu ;
   struct upid numbers[1U] ;
};
#line 568 "include/linux/capability.h"
struct fiemap_extent {
   __u64 fe_logical ;
   __u64 fe_physical ;
   __u64 fe_length ;
   __u64 fe_reserved64[2U] ;
   __u32 fe_flags ;
   __u32 fe_reserved[3U] ;
};
#line 38 "include/linux/fiemap.h"
struct export_operations;
#line 40
struct iovec;
#line 41
struct kiocb;
#line 42
struct pipe_inode_info;
#line 43
struct poll_table_struct;
#line 44
struct kstatfs;
#line 45
struct cred;
#line 418 "include/linux/fs.h"
struct iattr {
   unsigned int ia_valid ;
   umode_t ia_mode ;
   uid_t ia_uid ;
   gid_t ia_gid ;
   loff_t ia_size ;
   struct timespec ia_atime ;
   struct timespec ia_mtime ;
   struct timespec ia_ctime ;
   struct file *ia_file ;
};
#line 477 "include/linux/fs.h"
struct if_dqblk {
   __u64 dqb_bhardlimit ;
   __u64 dqb_bsoftlimit ;
   __u64 dqb_curspace ;
   __u64 dqb_ihardlimit ;
   __u64 dqb_isoftlimit ;
   __u64 dqb_curinodes ;
   __u64 dqb_btime ;
   __u64 dqb_itime ;
   __u32 dqb_valid ;
};
#line 119 "include/linux/quota.h"
struct if_dqinfo {
   __u64 dqi_bgrace ;
   __u64 dqi_igrace ;
   __u32 dqi_flags ;
   __u32 dqi_valid ;
};
#line 152 "include/linux/quota.h"
struct fs_disk_quota {
   __s8 d_version ;
   __s8 d_flags ;
   __u16 d_fieldmask ;
   __u32 d_id ;
   __u64 d_blk_hardlimit ;
   __u64 d_blk_softlimit ;
   __u64 d_ino_hardlimit ;
   __u64 d_ino_softlimit ;
   __u64 d_bcount ;
   __u64 d_icount ;
   __s32 d_itimer ;
   __s32 d_btimer ;
   __u16 d_iwarns ;
   __u16 d_bwarns ;
   __s32 d_padding2 ;
   __u64 d_rtb_hardlimit ;
   __u64 d_rtb_softlimit ;
   __u64 d_rtbcount ;
   __s32 d_rtbtimer ;
   __u16 d_rtbwarns ;
   __s16 d_padding3 ;
   char d_padding4[8U] ;
};
#line 75 "include/linux/dqblk_xfs.h"
struct fs_qfilestat {
   __u64 qfs_ino ;
   __u64 qfs_nblks ;
   __u32 qfs_nextents ;
};
#line 141 "include/linux/dqblk_xfs.h"
typedef struct fs_qfilestat fs_qfilestat_t;
#line 142 "include/linux/dqblk_xfs.h"
struct fs_quota_stat {
   __s8 qs_version ;
   __u16 qs_flags ;
   __s8 qs_pad ;
   fs_qfilestat_t qs_uquota ;
   fs_qfilestat_t qs_gquota ;
   __u32 qs_incoredqs ;
   __s32 qs_btimelimit ;
   __s32 qs_itimelimit ;
   __s32 qs_rtbtimelimit ;
   __u16 qs_bwarnlimit ;
   __u16 qs_iwarnlimit ;
};
#line 156
struct dquot;
#line 184 "include/linux/quota.h"
typedef __kernel_uid32_t qid_t;
#line 185 "include/linux/quota.h"
typedef long long qsize_t;
#line 188 "include/linux/quota.h"
struct mem_dqblk {
   qsize_t dqb_bhardlimit ;
   qsize_t dqb_bsoftlimit ;
   qsize_t dqb_curspace ;
   qsize_t dqb_rsvspace ;
   qsize_t dqb_ihardlimit ;
   qsize_t dqb_isoftlimit ;
   qsize_t dqb_curinodes ;
   time_t dqb_btime ;
   time_t dqb_itime ;
};
#line 210
struct quota_format_type;
#line 211 "include/linux/quota.h"
struct mem_dqinfo {
   struct quota_format_type *dqi_format ;
   int dqi_fmt_id ;
   struct list_head dqi_dirty_list ;
   unsigned long dqi_flags ;
   unsigned int dqi_bgrace ;
   unsigned int dqi_igrace ;
   qsize_t dqi_maxblimit ;
   qsize_t dqi_maxilimit ;
   void *dqi_priv ;
};
#line 253 "include/linux/quota.h"
struct dquot {
   struct hlist_node dq_hash ;
   struct list_head dq_inuse ;
   struct list_head dq_free ;
   struct list_head dq_dirty ;
   struct mutex dq_lock ;
   atomic_t dq_count ;
   wait_queue_head_t dq_wait_unused ;
   struct super_block *dq_sb ;
   unsigned int dq_id ;
   loff_t dq_off ;
   unsigned long dq_flags ;
   short dq_type ;
   struct mem_dqblk dq_dqb ;
};
#line 281 "include/linux/quota.h"
struct quota_format_ops {
   int (*check_quota_file)(struct super_block * , int  ) ;
   int (*read_file_info)(struct super_block * , int  ) ;
   int (*write_file_info)(struct super_block * , int  ) ;
   int (*free_file_info)(struct super_block * , int  ) ;
   int (*read_dqblk)(struct dquot * ) ;
   int (*commit_dqblk)(struct dquot * ) ;
   int (*release_dqblk)(struct dquot * ) ;
};
#line 292 "include/linux/quota.h"
struct dquot_operations {
   int (*write_dquot)(struct dquot * ) ;
   struct dquot *(*alloc_dquot)(struct super_block * , int  ) ;
   void (*destroy_dquot)(struct dquot * ) ;
   int (*acquire_dquot)(struct dquot * ) ;
   int (*release_dquot)(struct dquot * ) ;
   int (*mark_dirty)(struct dquot * ) ;
   int (*write_info)(struct super_block * , int  ) ;
   qsize_t *(*get_reserved_space)(struct inode * ) ;
};
#line 306 "include/linux/quota.h"
struct quotactl_ops {
   int (*quota_on)(struct super_block * , int  , int  , char * , int  ) ;
   int (*quota_off)(struct super_block * , int  , int  ) ;
   int (*quota_sync)(struct super_block * , int  , int  ) ;
   int (*get_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*set_info)(struct super_block * , int  , struct if_dqinfo * ) ;
   int (*get_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
   int (*set_dqblk)(struct super_block * , int  , qid_t  , struct if_dqblk * ) ;
   int (*get_xstate)(struct super_block * , struct fs_quota_stat * ) ;
   int (*set_xstate)(struct super_block * , unsigned int  , int  ) ;
   int (*get_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
   int (*set_xquota)(struct super_block * , int  , qid_t  , struct fs_disk_quota * ) ;
};
#line 321 "include/linux/quota.h"
struct quota_format_type {
   int qf_fmt_id ;
   struct quota_format_ops  const  *qf_ops ;
   struct module *qf_owner ;
   struct quota_format_type *qf_next ;
};
#line 367 "include/linux/quota.h"
struct quota_info {
   unsigned int flags ;
   struct mutex dqio_mutex ;
   struct mutex dqonoff_mutex ;
   struct rw_semaphore dqptr_sem ;
   struct inode *files[2U] ;
   struct mem_dqinfo info[2U] ;
   struct quota_format_ops  const  *ops[2U] ;
};
#line 567 "include/linux/fs.h"
union __anonunion_arg_124 {
   char *buf ;
   void *data ;
};
#line 567 "include/linux/fs.h"
struct __anonstruct_read_descriptor_t_123 {
   size_t written ;
   size_t count ;
   union __anonunion_arg_124 arg ;
   int error ;
};
#line 567 "include/linux/fs.h"
typedef struct __anonstruct_read_descriptor_t_123 read_descriptor_t;
#line 570 "include/linux/fs.h"
struct address_space_operations {
   int (*writepage)(struct page * , struct writeback_control * ) ;
   int (*readpage)(struct file * , struct page * ) ;
   void (*sync_page)(struct page * ) ;
   int (*writepages)(struct address_space * , struct writeback_control * ) ;
   int (*set_page_dirty)(struct page * ) ;
   int (*readpages)(struct file * , struct address_space * , struct list_head * ,
                    unsigned int  ) ;
   int (*write_begin)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                      unsigned int  , struct page ** , void ** ) ;
   int (*write_end)(struct file * , struct address_space * , loff_t  , unsigned int  ,
                    unsigned int  , struct page * , void * ) ;
   sector_t (*bmap)(struct address_space * , sector_t  ) ;
   void (*invalidatepage)(struct page * , unsigned long  ) ;
   int (*releasepage)(struct page * , gfp_t  ) ;
   ssize_t (*direct_IO)(int  , struct kiocb * , struct iovec  const  * , loff_t  ,
                        unsigned long  ) ;
   int (*get_xip_mem)(struct address_space * , unsigned long  , int  , void ** , unsigned long * ) ;
   int (*migratepage)(struct address_space * , struct page * , struct page * ) ;
   int (*launder_page)(struct page * ) ;
   int (*is_partially_uptodate)(struct page * , read_descriptor_t * , unsigned long  ) ;
   int (*error_remove_page)(struct address_space * , struct page * ) ;
};
#line 619
struct backing_dev_info;
#line 620 "include/linux/fs.h"
struct address_space {
   struct inode *host ;
   struct radix_tree_root page_tree ;
   spinlock_t tree_lock ;
   unsigned int i_mmap_writable ;
   struct prio_tree_root i_mmap ;
   struct list_head i_mmap_nonlinear ;
   spinlock_t i_mmap_lock ;
   unsigned int truncate_count ;
   unsigned long nrpages ;
   unsigned long writeback_index ;
   struct address_space_operations  const  *a_ops ;
   unsigned long flags ;
   struct backing_dev_info *backing_dev_info ;
   spinlock_t private_lock ;
   struct list_head private_list ;
   struct address_space *assoc_mapping ;
};
#line 641
struct hd_struct;
#line 641
struct gendisk;
#line 641 "include/linux/fs.h"
struct block_device {
   dev_t bd_dev ;
   struct inode *bd_inode ;
   struct super_block *bd_super ;
   int bd_openers ;
   struct mutex bd_mutex ;
   struct list_head bd_inodes ;
   void *bd_holder ;
   int bd_holders ;
   struct list_head bd_holder_list ;
   struct block_device *bd_contains ;
   unsigned int bd_block_size ;
   struct hd_struct *bd_part ;
   unsigned int bd_part_count ;
   int bd_invalidated ;
   struct gendisk *bd_disk ;
   struct list_head bd_list ;
   unsigned long bd_private ;
   int bd_fsfreeze_count ;
   struct mutex bd_fsfreeze_mutex ;
};
#line 709
struct posix_acl;
#line 710
struct inode_operations;
#line 710
struct file_operations;
#line 710
struct file_lock;
#line 710
struct cdev;
#line 710 "include/linux/fs.h"
union __anonunion_ldv_19788_125 {
   struct pipe_inode_info *i_pipe ;
   struct block_device *i_bdev ;
   struct cdev *i_cdev ;
};
#line 710 "include/linux/fs.h"
struct inode {
   struct hlist_node i_hash ;
   struct list_head i_list ;
   struct list_head i_sb_list ;
   struct list_head i_dentry ;
   unsigned long i_ino ;
   atomic_t i_count ;
   unsigned int i_nlink ;
   uid_t i_uid ;
   gid_t i_gid ;
   dev_t i_rdev ;
   unsigned int i_blkbits ;
   u64 i_version ;
   loff_t i_size ;
   struct timespec i_atime ;
   struct timespec i_mtime ;
   struct timespec i_ctime ;
   blkcnt_t i_blocks ;
   unsigned short i_bytes ;
   umode_t i_mode ;
   spinlock_t i_lock ;
   struct mutex i_mutex ;
   struct rw_semaphore i_alloc_sem ;
   struct inode_operations  const  *i_op ;
   struct file_operations  const  *i_fop ;
   struct super_block *i_sb ;
   struct file_lock *i_flock ;
   struct address_space *i_mapping ;
   struct address_space i_data ;
   struct dquot *i_dquot[2U] ;
   struct list_head i_devices ;
   union __anonunion_ldv_19788_125 ldv_19788 ;
   __u32 i_generation ;
   __u32 i_fsnotify_mask ;
   struct hlist_head i_fsnotify_mark_entries ;
   struct list_head inotify_watches ;
   struct mutex inotify_mutex ;
   unsigned long i_state ;
   unsigned long dirtied_when ;
   unsigned int i_flags ;
   atomic_t i_writecount ;
   void *i_security ;
   struct posix_acl *i_acl ;
   struct posix_acl *i_default_acl ;
   void *i_private ;
};
#line 878 "include/linux/fs.h"
struct fown_struct {
   rwlock_t lock ;
   struct pid *pid ;
   enum pid_type pid_type ;
   uid_t uid ;
   uid_t euid ;
   int signum ;
};
#line 886 "include/linux/fs.h"
struct file_ra_state {
   unsigned long start ;
   unsigned int size ;
   unsigned int async_size ;
   unsigned int ra_pages ;
   unsigned int mmap_miss ;
   loff_t prev_pos ;
};
#line 909 "include/linux/fs.h"
union __anonunion_f_u_126 {
   struct list_head fu_list ;
   struct rcu_head fu_rcuhead ;
};
#line 909 "include/linux/fs.h"
struct file {
   union __anonunion_f_u_126 f_u ;
   struct path f_path ;
   struct file_operations  const  *f_op ;
   spinlock_t f_lock ;
   atomic_long_t f_count ;
   unsigned int f_flags ;
   fmode_t f_mode ;
   loff_t f_pos ;
   struct fown_struct f_owner ;
   struct cred  const  *f_cred ;
   struct file_ra_state f_ra ;
   u64 f_version ;
   void *f_security ;
   void *private_data ;
   struct list_head f_ep_links ;
   struct address_space *f_mapping ;
   unsigned long f_mnt_write_state ;
};
#line 1032
struct files_struct;
#line 1032 "include/linux/fs.h"
typedef struct files_struct *fl_owner_t;
#line 1033 "include/linux/fs.h"
struct file_lock_operations {
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
};
#line 1038 "include/linux/fs.h"
struct lock_manager_operations {
   int (*fl_compare_owner)(struct file_lock * , struct file_lock * ) ;
   void (*fl_notify)(struct file_lock * ) ;
   int (*fl_grant)(struct file_lock * , struct file_lock * , int  ) ;
   void (*fl_copy_lock)(struct file_lock * , struct file_lock * ) ;
   void (*fl_release_private)(struct file_lock * ) ;
   void (*fl_break)(struct file_lock * ) ;
   int (*fl_mylease)(struct file_lock * , struct file_lock * ) ;
   int (*fl_change)(struct file_lock ** , int  ) ;
};
#line 163 "include/linux/nfs.h"
struct nlm_lockowner;
#line 164 "include/linux/nfs.h"
struct nfs_lock_info {
   u32 state ;
   struct nlm_lockowner *owner ;
   struct list_head list ;
};
#line 18 "include/linux/nfs_fs_i.h"
struct nfs4_lock_state;
#line 19 "include/linux/nfs_fs_i.h"
struct nfs4_lock_info {
   struct nfs4_lock_state *owner ;
};
#line 23
struct fasync_struct;
#line 23 "include/linux/nfs_fs_i.h"
struct __anonstruct_afs_128 {
   struct list_head link ;
   int state ;
};
#line 23 "include/linux/nfs_fs_i.h"
union __anonunion_fl_u_127 {
   struct nfs_lock_info nfs_fl ;
   struct nfs4_lock_info nfs4_fl ;
   struct __anonstruct_afs_128 afs ;
};
#line 23 "include/linux/nfs_fs_i.h"
struct file_lock {
   struct file_lock *fl_next ;
   struct list_head fl_link ;
   struct list_head fl_block ;
   fl_owner_t fl_owner ;
   unsigned char fl_flags ;
   unsigned char fl_type ;
   unsigned int fl_pid ;
   struct pid *fl_nspid ;
   wait_queue_head_t fl_wait ;
   struct file *fl_file ;
   loff_t fl_start ;
   loff_t fl_end ;
   struct fasync_struct *fl_fasync ;
   unsigned long fl_break_time ;
   struct file_lock_operations  const  *fl_ops ;
   struct lock_manager_operations  const  *fl_lmops ;
   union __anonunion_fl_u_127 fl_u ;
};
#line 1137 "include/linux/fs.h"
struct fasync_struct {
   int magic ;
   int fa_fd ;
   struct fasync_struct *fa_next ;
   struct file *fa_file ;
};
#line 1316
struct file_system_type;
#line 1316
struct super_operations;
#line 1316
struct xattr_handler;
#line 1316
struct mtd_info;
#line 1316 "include/linux/fs.h"
struct super_block {
   struct list_head s_list ;
   dev_t s_dev ;
   unsigned char s_dirt ;
   unsigned char s_blocksize_bits ;
   unsigned long s_blocksize ;
   loff_t s_maxbytes ;
   struct file_system_type *s_type ;
   struct super_operations  const  *s_op ;
   struct dquot_operations  const  *dq_op ;
   struct quotactl_ops  const  *s_qcop ;
   struct export_operations  const  *s_export_op ;
   unsigned long s_flags ;
   unsigned long s_magic ;
   struct dentry *s_root ;
   struct rw_semaphore s_umount ;
   struct mutex s_lock ;
   int s_count ;
   int s_need_sync ;
   atomic_t s_active ;
   void *s_security ;
   struct xattr_handler **s_xattr ;
   struct list_head s_inodes ;
   struct hlist_head s_anon ;
   struct list_head s_files ;
   struct list_head s_dentry_lru ;
   int s_nr_dentry_unused ;
   struct block_device *s_bdev ;
   struct backing_dev_info *s_bdi ;
   struct mtd_info *s_mtd ;
   struct list_head s_instances ;
   struct quota_info s_dquot ;
   int s_frozen ;
   wait_queue_head_t s_wait_unfrozen ;
   char s_id[32U] ;
   void *s_fs_info ;
   fmode_t s_mode ;
   u32 s_time_gran ;
   struct mutex s_vfs_rename_mutex ;
   char *s_subtype ;
   char *s_options ;
};
#line 1434 "include/linux/fs.h"
struct fiemap_extent_info {
   unsigned int fi_flags ;
   unsigned int fi_extents_mapped ;
   unsigned int fi_extents_max ;
   struct fiemap_extent *fi_extents_start ;
};
#line 1473 "include/linux/fs.h"
struct file_operations {
   struct module *owner ;
   loff_t (*llseek)(struct file * , loff_t  , int  ) ;
   ssize_t (*read)(struct file * , char * , size_t  , loff_t * ) ;
   ssize_t (*write)(struct file * , char const   * , size_t  , loff_t * ) ;
   ssize_t (*aio_read)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                       loff_t  ) ;
   ssize_t (*aio_write)(struct kiocb * , struct iovec  const  * , unsigned long  ,
                        loff_t  ) ;
   int (*readdir)(struct file * , void * , int (*)(void * , char const   * , int  ,
                                                   loff_t  , u64  , unsigned int  ) ) ;
   unsigned int (*poll)(struct file * , struct poll_table_struct * ) ;
   int (*ioctl)(struct inode * , struct file * , unsigned int  , unsigned long  ) ;
   long (*unlocked_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   long (*compat_ioctl)(struct file * , unsigned int  , unsigned long  ) ;
   int (*mmap)(struct file * , struct vm_area_struct * ) ;
   int (*open)(struct inode * , struct file * ) ;
   int (*flush)(struct file * , fl_owner_t  ) ;
   int (*release)(struct inode * , struct file * ) ;
   int (*fsync)(struct file * , struct dentry * , int  ) ;
   int (*aio_fsync)(struct kiocb * , int  ) ;
   int (*fasync)(int  , struct file * , int  ) ;
   int (*lock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*sendpage)(struct file * , struct page * , int  , size_t  , loff_t * ,
                       int  ) ;
   unsigned long (*get_unmapped_area)(struct file * , unsigned long  , unsigned long  ,
                                      unsigned long  , unsigned long  ) ;
   int (*check_flags)(int  ) ;
   int (*flock)(struct file * , int  , struct file_lock * ) ;
   ssize_t (*splice_write)(struct pipe_inode_info * , struct file * , loff_t * , size_t  ,
                           unsigned int  ) ;
   ssize_t (*splice_read)(struct file * , loff_t * , struct pipe_inode_info * , size_t  ,
                          unsigned int  ) ;
   int (*setlease)(struct file * , long  , struct file_lock ** ) ;
};
#line 1513 "include/linux/fs.h"
struct inode_operations {
   int (*create)(struct inode * , struct dentry * , int  , struct nameidata * ) ;
   struct dentry *(*lookup)(struct inode * , struct dentry * , struct nameidata * ) ;
   int (*link)(struct dentry * , struct inode * , struct dentry * ) ;
   int (*unlink)(struct inode * , struct dentry * ) ;
   int (*symlink)(struct inode * , struct dentry * , char const   * ) ;
   int (*mkdir)(struct inode * , struct dentry * , int  ) ;
   int (*rmdir)(struct inode * , struct dentry * ) ;
   int (*mknod)(struct inode * , struct dentry * , int  , dev_t  ) ;
   int (*rename)(struct inode * , struct dentry * , struct inode * , struct dentry * ) ;
   int (*readlink)(struct dentry * , char * , int  ) ;
   void *(*follow_link)(struct dentry * , struct nameidata * ) ;
   void (*put_link)(struct dentry * , struct nameidata * , void * ) ;
   void (*truncate)(struct inode * ) ;
   int (*permission)(struct inode * , int  ) ;
   int (*check_acl)(struct inode * , int  ) ;
   int (*setattr)(struct dentry * , struct iattr * ) ;
   int (*getattr)(struct vfsmount * , struct dentry * , struct kstat * ) ;
   int (*setxattr)(struct dentry * , char const   * , void const   * , size_t  , int  ) ;
   ssize_t (*getxattr)(struct dentry * , char const   * , void * , size_t  ) ;
   ssize_t (*listxattr)(struct dentry * , char * , size_t  ) ;
   int (*removexattr)(struct dentry * , char const   * ) ;
   void (*truncate_range)(struct inode * , loff_t  , loff_t  ) ;
   long (*fallocate)(struct inode * , int  , loff_t  , loff_t  ) ;
   int (*fiemap)(struct inode * , struct fiemap_extent_info * , u64  , u64  ) ;
};
#line 1556 "include/linux/fs.h"
struct super_operations {
   struct inode *(*alloc_inode)(struct super_block * ) ;
   void (*destroy_inode)(struct inode * ) ;
   void (*dirty_inode)(struct inode * ) ;
   int (*write_inode)(struct inode * , struct writeback_control * ) ;
   void (*drop_inode)(struct inode * ) ;
   void (*delete_inode)(struct inode * ) ;
   void (*put_super)(struct super_block * ) ;
   void (*write_super)(struct super_block * ) ;
   int (*sync_fs)(struct super_block * , int  ) ;
   int (*freeze_fs)(struct super_block * ) ;
   int (*unfreeze_fs)(struct super_block * ) ;
   int (*statfs)(struct dentry * , struct kstatfs * ) ;
   int (*remount_fs)(struct super_block * , int * , char * ) ;
   void (*clear_inode)(struct inode * ) ;
   void (*umount_begin)(struct super_block * ) ;
   int (*show_options)(struct seq_file * , struct vfsmount * ) ;
   int (*show_stats)(struct seq_file * , struct vfsmount * ) ;
   ssize_t (*quota_read)(struct super_block * , int  , char * , size_t  , loff_t  ) ;
   ssize_t (*quota_write)(struct super_block * , int  , char const   * , size_t  ,
                          loff_t  ) ;
   int (*bdev_try_to_free_page)(struct super_block * , struct page * , gfp_t  ) ;
};
#line 1734 "include/linux/fs.h"
struct file_system_type {
   char const   *name ;
   int fs_flags ;
   int (*get_sb)(struct file_system_type * , int  , char const   * , void * , struct vfsmount * ) ;
   void (*kill_sb)(struct super_block * ) ;
   struct module *owner ;
   struct file_system_type *next ;
   struct list_head fs_supers ;
   struct lock_class_key s_lock_key ;
   struct lock_class_key s_umount_key ;
   struct lock_class_key i_lock_key ;
   struct lock_class_key i_mutex_key ;
   struct lock_class_key i_mutex_dir_key ;
   struct lock_class_key i_alloc_sem_key ;
};
#line 454 "include/linux/pagemap.h"
struct pollfd {
   int fd ;
   short events ;
   short revents ;
};
#line 34 "include/linux/poll.h"
struct poll_table_struct {
   void (*qproc)(struct file * , wait_queue_head_t * , struct poll_table_struct * ) ;
   unsigned long key ;
};
#line 138
enum v4l2_field {
    V4L2_FIELD_ANY = 0,
    V4L2_FIELD_NONE = 1,
    V4L2_FIELD_TOP = 2,
    V4L2_FIELD_BOTTOM = 3,
    V4L2_FIELD_INTERLACED = 4,
    V4L2_FIELD_SEQ_TB = 5,
    V4L2_FIELD_SEQ_BT = 6,
    V4L2_FIELD_ALTERNATE = 7,
    V4L2_FIELD_INTERLACED_TB = 8,
    V4L2_FIELD_INTERLACED_BT = 9
} ;
#line 151
enum v4l2_buf_type {
    V4L2_BUF_TYPE_VIDEO_CAPTURE = 1,
    V4L2_BUF_TYPE_VIDEO_OUTPUT = 2,
    V4L2_BUF_TYPE_VIDEO_OVERLAY = 3,
    V4L2_BUF_TYPE_VBI_CAPTURE = 4,
    V4L2_BUF_TYPE_VBI_OUTPUT = 5,
    V4L2_BUF_TYPE_SLICED_VBI_CAPTURE = 6,
    V4L2_BUF_TYPE_SLICED_VBI_OUTPUT = 7,
    V4L2_BUF_TYPE_VIDEO_OUTPUT_OVERLAY = 8,
    V4L2_BUF_TYPE_PRIVATE = 128
} ;
#line 169
enum v4l2_memory {
    V4L2_MEMORY_MMAP = 1,
    V4L2_MEMORY_USERPTR = 2,
    V4L2_MEMORY_OVERLAY = 3
} ;
#line 175
enum v4l2_colorspace {
    V4L2_COLORSPACE_SMPTE170M = 1,
    V4L2_COLORSPACE_SMPTE240M = 2,
    V4L2_COLORSPACE_REC709 = 3,
    V4L2_COLORSPACE_BT878 = 4,
    V4L2_COLORSPACE_470_SYSTEM_M = 5,
    V4L2_COLORSPACE_470_SYSTEM_BG = 6,
    V4L2_COLORSPACE_JPEG = 7,
    V4L2_COLORSPACE_SRGB = 8
} ;
#line 234 "include/linux/videodev2.h"
struct v4l2_pix_format {
   __u32 width ;
   __u32 height ;
   __u32 pixelformat ;
   enum v4l2_field field ;
   __u32 bytesperline ;
   __u32 sizeimage ;
   enum v4l2_colorspace colorspace ;
   __u32 priv ;
};
#line 537 "include/linux/videodev2.h"
struct v4l2_framebuffer {
   __u32 capability ;
   __u32 flags ;
   void *base ;
   struct v4l2_pix_format fmt ;
};
#line 32 "include/linux/videodev.h"
struct videobuf_buffer;
#line 33
struct videobuf_queue;
#line 34 "include/linux/videodev.h"
struct videobuf_mapping {
   unsigned int count ;
   unsigned long start ;
   unsigned long end ;
   struct videobuf_queue *q ;
};
#line 61 "include/media/videobuf-core.h"
enum videobuf_state {
    VIDEOBUF_NEEDS_INIT = 0,
    VIDEOBUF_PREPARED = 1,
    VIDEOBUF_QUEUED = 2,
    VIDEOBUF_ACTIVE = 3,
    VIDEOBUF_DONE = 4,
    VIDEOBUF_ERROR = 5,
    VIDEOBUF_IDLE = 6
} ;
#line 71 "include/media/videobuf-core.h"
struct videobuf_buffer {
   unsigned int i ;
   u32 magic ;
   unsigned int width ;
   unsigned int height ;
   unsigned int bytesperline ;
   unsigned long size ;
   unsigned int input ;
   enum v4l2_field field ;
   enum videobuf_state state ;
   struct list_head stream ;
   struct list_head queue ;
   wait_queue_head_t done ;
   unsigned int field_count ;
   struct timeval ts ;
   enum v4l2_memory memory ;
   size_t bsize ;
   size_t boff ;
   unsigned long baddr ;
   struct videobuf_mapping *map ;
   int privsize ;
   void *priv ;
};
#line 111 "include/media/videobuf-core.h"
struct videobuf_queue_ops {
   int (*buf_setup)(struct videobuf_queue * , unsigned int * , unsigned int * ) ;
   int (*buf_prepare)(struct videobuf_queue * , struct videobuf_buffer * , enum v4l2_field  ) ;
   void (*buf_queue)(struct videobuf_queue * , struct videobuf_buffer * ) ;
   void (*buf_release)(struct videobuf_queue * , struct videobuf_buffer * ) ;
};
#line 122 "include/media/videobuf-core.h"
struct videobuf_qtype_ops {
   u32 magic ;
   struct videobuf_buffer *(*alloc)(size_t  ) ;
   void *(*vaddr)(struct videobuf_buffer * ) ;
   int (*iolock)(struct videobuf_queue * , struct videobuf_buffer * , struct v4l2_framebuffer * ) ;
   int (*sync)(struct videobuf_queue * , struct videobuf_buffer * ) ;
   int (*video_copy_to_user)(struct videobuf_queue * , char * , size_t  , int  ) ;
   int (*copy_stream)(struct videobuf_queue * , char * , size_t  , size_t  , int  ,
                      int  ) ;
   int (*mmap_mapper)(struct videobuf_queue * , struct vm_area_struct * ) ;
};
#line 149 "include/media/videobuf-core.h"
struct videobuf_queue {
   struct mutex vb_lock ;
   spinlock_t *irqlock ;
   struct device *dev ;
   wait_queue_head_t wait ;
   enum v4l2_buf_type type ;
   unsigned int inputs ;
   unsigned int msize ;
   enum v4l2_field field ;
   enum v4l2_field last ;
   struct videobuf_buffer *bufs[32U] ;
   struct videobuf_queue_ops  const  *ops ;
   struct videobuf_qtype_ops *int_ops ;
   unsigned char streaming : 1 ;
   unsigned char reading : 1 ;
   struct list_head stream ;
   unsigned int read_off ;
   struct videobuf_buffer *read_buf ;
   void *priv_data ;
};
#line 240 "include/media/videobuf-core.h"
struct videobuf_vmalloc_memory {
   u32 magic ;
   void *vmalloc ;
   struct vm_area_struct *vma ;
};
#line 1 "<compiler builtins>"
long __builtin_expect(long exp , long c ) ;
#line 164 "include/linux/kernel.h"
extern void might_fault(void) ;
#line 251
extern int printk(char const   *  , ...) ;
#line 9 "include/asm-generic/getorder.h"
__inline static int get_order(unsigned long size ) 
{ 
  int order ;

  {
#line 13
  size = (size - 1UL) >> 11;
#line 14
  order = -1;
  ldv_4325: 
#line 16
  size = size >> 1;
#line 17
  order = order + 1;
#line 18
  if (size != 0UL) {
#line 19
    goto ldv_4325;
  } else {

  }

#line 19
  return (order);
}
}
#line 542 "include/linux/lockdep.h"
extern void lockdep_rcu_dereference(char const   * , int const    ) ;
#line 152 "include/linux/mutex.h"
extern void mutex_unlock(struct mutex * ) ;
#line 155
void ldv_mutex_unlock_2(struct mutex *ldv_func_arg1 ) ;
#line 7 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
extern void mutex_lock(struct mutex * ) ;
#line 10
void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) ;
#line 15
void ldv_mutex_lock_vb_lock_of_videobuf_queue(struct mutex *lock ) ;
#line 19
void ldv_mutex_unlock_vb_lock_of_videobuf_queue(struct mutex *lock ) ;
#line 316 "include/linux/gfp.h"
extern unsigned long __get_free_pages(gfp_t  , unsigned int  ) ;
#line 104 "include/linux/rcupdate.h"
extern int debug_lockdep_rcu_enabled(void) ;
#line 152 "include/linux/rcupdate.h"
__inline static int rcu_read_lock_sched_held(void) 
{ 


  {
#line 154
  return (1);
}
}
#line 372 "include/linux/rcupdate.h"
__inline static void rcu_read_lock_sched_notrace(void) 
{ 


  {
#line 376
  return;
}
}
#line 144 "include/linux/slab.h"
extern void kfree(void const   * ) ;
#line 87 "include/trace/events/kmem.h"
extern struct tracepoint __tracepoint_kmalloc ;
#line 87 "include/trace/events/kmem.h"
__inline static void trace_kmalloc(unsigned long call_site , void const   *ptr , size_t bytes_req ,
                                   size_t bytes_alloc , gfp_t gfp_flags ) 
{ 
  void **it_func ;
  int tmp ;
  int tmp___0 ;
  void **_________p1 ;
  long tmp___1 ;

  {
#line 81
  tmp___1 = __builtin_expect(__tracepoint_kmalloc.state != 0, 0L);
#line 81
  if (tmp___1 != 0L) {
#line 81
    rcu_read_lock_sched_notrace();
#line 81
    tmp = debug_lockdep_rcu_enabled();
#line 81
    if (tmp != 0) {
#line 81
      tmp___0 = rcu_read_lock_sched_held();
#line 81
      if (tmp___0 == 0) {
#line 81
        lockdep_rcu_dereference("include/trace/events/kmem.h", 87);
      } else {

      }
    } else {

    }
#line 81
    _________p1 = *((void ** volatile  *)(& __tracepoint_kmalloc.funcs));
#line 81
    it_func = _________p1;
#line 81
    if ((unsigned long )it_func != (unsigned long )((void **)0)) {
      ldv_11595: 
#line 81
      (*((void (*)(unsigned long  , void const   * , size_t  , size_t  , gfp_t  ))*it_func))(call_site,
                                                                                             ptr,
                                                                                             bytes_req,
                                                                                             bytes_alloc,
                                                                                             gfp_flags);
#line 81
      it_func = it_func + 1;
#line 81
      if ((unsigned long )*it_func != (unsigned long )((void *)0)) {
#line 82
        goto ldv_11595;
      } else {

      }

    } else {

    }
#line 81
    rcu_read_lock_sched_notrace();
  } else {

  }
#line 83
  return;
}
}
#line 62 "include/linux/kmemleak.h"
__inline static void kmemleak_alloc(void const   *ptr , size_t size , int min_count ,
                                    gfp_t gfp ) 
{ 


  {
#line 64
  return;
}
}
#line 146 "include/linux/slub_def.h"
extern struct kmem_cache kmalloc_caches[22U] ;
#line 152 "include/linux/slub_def.h"
__inline static int kmalloc_index(size_t size ) 
{ 


  {
#line 154
  if (size == 0UL) {
#line 155
    return (0);
  } else {

  }
#line 157
  if (size <= 8UL) {
#line 158
    return (3);
  } else {

  }
#line 160
  if (size > 64UL && size <= 96UL) {
#line 161
    return (1);
  } else {

  }
#line 162
  if (size > 128UL && size <= 192UL) {
#line 163
    return (2);
  } else {

  }
#line 164
  if (size <= 8UL) {
#line 164
    return (3);
  } else {

  }
#line 165
  if (size <= 16UL) {
#line 165
    return (4);
  } else {

  }
#line 166
  if (size <= 32UL) {
#line 166
    return (5);
  } else {

  }
#line 167
  if (size <= 64UL) {
#line 167
    return (6);
  } else {

  }
#line 168
  if (size <= 128UL) {
#line 168
    return (7);
  } else {

  }
#line 169
  if (size <= 256UL) {
#line 169
    return (8);
  } else {

  }
#line 170
  if (size <= 512UL) {
#line 170
    return (9);
  } else {

  }
#line 171
  if (size <= 1024UL) {
#line 171
    return (10);
  } else {

  }
#line 172
  if (size <= 2048UL) {
#line 172
    return (11);
  } else {

  }
#line 173
  if (size <= 4096UL) {
#line 173
    return (12);
  } else {

  }
#line 178
  if (size <= 8192UL) {
#line 178
    return (13);
  } else {

  }
#line 179
  if (size <= 16384UL) {
#line 179
    return (14);
  } else {

  }
#line 180
  if (size <= 32768UL) {
#line 180
    return (15);
  } else {

  }
#line 181
  if (size <= 65536UL) {
#line 181
    return (16);
  } else {

  }
#line 182
  if (size <= 131072UL) {
#line 182
    return (17);
  } else {

  }
#line 183
  if (size <= 262144UL) {
#line 183
    return (18);
  } else {

  }
#line 184
  if (size <= 524288UL) {
#line 184
    return (19);
  } else {

  }
#line 185
  if (size <= 1048576UL) {
#line 185
    return (20);
  } else {

  }
#line 186
  if (size <= 2097152UL) {
#line 186
    return (21);
  } else {

  }
#line 187
  return (-1);
}
}
#line 204 "include/linux/slub_def.h"
__inline static struct kmem_cache *kmalloc_slab(size_t size ) 
{ 
  int index ;
  int tmp ;

  {
#line 206
  tmp = kmalloc_index(size);
#line 206
  index = tmp;
#line 208
  if (index == 0) {
#line 209
    return (0);
  } else {

  }
#line 211
  return ((struct kmem_cache *)(& kmalloc_caches) + (unsigned long )index);
}
}
#line 215
extern void *__kmalloc(size_t  , gfp_t  ) ;
#line 218
extern void *kmem_cache_alloc_notrace(struct kmem_cache * , gfp_t  ) ;
#line 227 "include/linux/slub_def.h"
__inline static void *kmalloc_large(size_t size , gfp_t flags ) 
{ 
  unsigned int order ;
  int tmp ;
  void *ret ;
  unsigned long tmp___0 ;

  {
#line 229
  tmp = get_order(size);
#line 229
  order = (unsigned int )tmp;
#line 230
  tmp___0 = __get_free_pages(flags | 16384U, order);
#line 230
  ret = (void *)tmp___0;
#line 232
  kmemleak_alloc((void const   *)ret, size, 1, flags);
#line 233
  trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, 4096UL << (int )order,
                flags);
#line 235
  return (ret);
}
}
#line 238 "include/linux/slub_def.h"
__inline static void *kmalloc(size_t size , gfp_t flags ) 
{ 
  void *ret ;
  void *tmp ;
  struct kmem_cache *s ;
  struct kmem_cache *tmp___0 ;
  void *tmp___1 ;

  {
#line 242
  if (0) {
#line 243
    if (size > 8192UL) {
#line 244
      tmp = kmalloc_large(size, flags);
#line 244
      return (tmp);
    } else {

    }
#line 246
    if ((flags & 1U) == 0U) {
#line 247
      tmp___0 = kmalloc_slab(size);
#line 247
      s = tmp___0;
#line 249
      if ((unsigned long )s == (unsigned long )((struct kmem_cache *)0)) {
#line 250
        return (16);
      } else {

      }
#line 252
      ret = kmem_cache_alloc_notrace(s, flags);
#line 254
      trace_kmalloc((unsigned long )((void *)0), (void const   *)ret, size, (size_t )s->size,
                    flags);
#line 256
      return (ret);
    } else {

    }
  } else {

  }
#line 259
  tmp___1 = __kmalloc(size, flags);
#line 259
  return (tmp___1);
}
}
#line 319 "include/linux/slab.h"
__inline static void *kzalloc(size_t size , gfp_t flags ) 
{ 
  void *tmp ;

  {
#line 321
  tmp = kmalloc(size, flags | 32768U);
#line 321
  return (tmp);
}
}
#line 41 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/uaccess_64.h"
extern unsigned long _copy_to_user(void * , void const   * , unsigned int  ) ;
#line 64 "/work/ldvuser/novikov/inst/current/envs/linux/linux/arch/x86/include/asm/uaccess_64.h"
__inline static int copy_to_user(void *dst , void const   *src , unsigned int size ) 
{ 
  unsigned long tmp ;

  {
#line 66
  might_fault();
#line 68
  tmp = _copy_to_user(dst, src, size);
#line 68
  return ((int )tmp);
}
}
#line 54 "include/linux/vmalloc.h"
extern void *vmalloc_user(unsigned long  ) ;
#line 62
extern void vfree(void const   * ) ;
#line 68
extern int remap_vmalloc_range(struct vm_area_struct * , void * , unsigned long  ) ;
#line 191 "include/media/videobuf-core.h"
extern void videobuf_queue_core_init(struct videobuf_queue * , struct videobuf_queue_ops  const  * ,
                                     struct device * , spinlock_t * , enum v4l2_buf_type  ,
                                     enum v4l2_field  , unsigned int  , void * , struct videobuf_qtype_ops * ) ;
#line 201
extern void videobuf_queue_cancel(struct videobuf_queue * ) ;
#line 32 "include/media/videobuf-vmalloc.h"
void videobuf_queue_vmalloc_init(struct videobuf_queue *q , struct videobuf_queue_ops  const  *ops ,
                                 struct device *dev , spinlock_t *irqlock , enum v4l2_buf_type type ,
                                 enum v4l2_field field , unsigned int msize , void *priv ) ;
#line 41
void *videobuf_to_vmalloc(struct videobuf_buffer *buf ) ;
#line 43
void videobuf_vmalloc_free(struct videobuf_buffer *buf ) ;
#line 56 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static int debug  ;
#line 70 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static void videobuf_vm_open(struct vm_area_struct *vma ) 
{ 
  struct videobuf_mapping *map ;

  {
#line 72
  map = (struct videobuf_mapping *)vma->vm_private_data;
#line 74
  if (debug > 1) {
#line 74
    printk("<7>vbuf-vmalloc: vm_open %p [count=%u,vma=%08lx-%08lx]\n", map, map->count,
           vma->vm_start, vma->vm_end);
  } else {

  }
#line 77
  map->count = map->count + 1U;
#line 78
  return;
}
}
#line 80 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static void videobuf_vm_close(struct vm_area_struct *vma ) 
{ 
  struct videobuf_mapping *map ;
  struct videobuf_queue *q ;
  int i ;
  struct videobuf_vmalloc_memory *mem ;
  long tmp ;

  {
#line 82
  map = (struct videobuf_mapping *)vma->vm_private_data;
#line 83
  q = map->q;
#line 86
  if (debug > 1) {
#line 86
    printk("<7>vbuf-vmalloc: vm_close %p [count=%u,vma=%08lx-%08lx]\n", map, map->count,
           vma->vm_start, vma->vm_end);
  } else {

  }
#line 89
  map->count = map->count - 1U;
#line 90
  if (map->count == 0U) {
#line 93
    if (debug > 0) {
#line 93
      printk("<7>vbuf-vmalloc: munmap %p q=%p\n", map, q);
    } else {

    }
#line 94
    ldv_mutex_lock_1(& q->vb_lock);
#line 97
    if ((unsigned int )*((unsigned char *)q + 544UL) != 0U) {
#line 98
      videobuf_queue_cancel(q);
    } else {

    }
#line 100
    i = 0;
#line 100
    goto ldv_23977;
    ldv_23976: ;
#line 101
    if ((unsigned long )q->bufs[i] == (unsigned long )((struct videobuf_buffer *)0)) {
#line 102
      goto ldv_23973;
    } else {

    }
#line 104
    if ((unsigned long )(q->bufs[i])->map != (unsigned long )map) {
#line 105
      goto ldv_23973;
    } else {

    }
#line 107
    mem = (struct videobuf_vmalloc_memory *)(q->bufs[i])->priv;
#line 108
    if ((unsigned long )mem != (unsigned long )((struct videobuf_vmalloc_memory *)0)) {
#line 115
      tmp = __builtin_expect(mem->magic != 404886051U, 0L);
#line 115
      if (tmp != 0L) {
#line 115
        printk("<3>magic mismatch: %x (expected %x)\n", mem->magic, 404886051);
#line 115
        __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                             "i" (115), "i" (12UL));
        ldv_23974: ;
#line 115
        goto ldv_23974;
      } else {

      }
#line 120
      if (debug > 0) {
#line 120
        printk("<7>vbuf-vmalloc: %s: buf[%d] freeing (%p)\n", "videobuf_vm_close",
               i, mem->vmalloc);
      } else {

      }
#line 123
      vfree((void const   *)mem->vmalloc);
#line 124
      mem->vmalloc = 0;
    } else {

    }
#line 127
    (q->bufs[i])->map = 0;
#line 128
    (q->bufs[i])->baddr = 0UL;
    ldv_23973: 
#line 100
    i = i + 1;
    ldv_23977: ;
#line 100
    if (i <= 31) {
#line 101
      goto ldv_23976;
    } else {

    }
#line 131
    kfree((void const   *)map);
#line 133
    ldv_mutex_unlock_2(& q->vb_lock);
  } else {

  }
#line 136
  return;
}
}
#line 139 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static struct vm_operations_struct  const  videobuf_vm_ops  = 
#line 139
     {& videobuf_vm_open, & videobuf_vm_close, 0, 0, 0, 0, 0, 0};
#line 154 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static struct videobuf_buffer *__videobuf_alloc(size_t size ) 
{ 
  struct videobuf_vmalloc_memory *mem ;
  struct videobuf_buffer *vb ;
  void *tmp ;
  void *tmp___0 ;

  {
#line 159
  tmp = kzalloc(size + 24UL, 208U);
#line 159
  vb = (struct videobuf_buffer *)tmp;
#line 160
  if ((unsigned long )vb == (unsigned long )((struct videobuf_buffer *)0)) {
#line 161
    return (vb);
  } else {

  }
#line 163
  tmp___0 = (void *)vb + size;
#line 163
  vb->priv = tmp___0;
#line 163
  mem = (struct videobuf_vmalloc_memory *)tmp___0;
#line 164
  mem->magic = 404886051U;
#line 166
  if (debug > 0) {
#line 166
    printk("<7>vbuf-vmalloc: %s: allocated at %p(%ld+%ld) & %p(%ld)\n", "__videobuf_alloc",
           vb, 240L, size - 240UL, mem, 24L);
  } else {

  }
#line 170
  return (vb);
}
}
#line 173 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static int __videobuf_iolock(struct videobuf_queue *q , struct videobuf_buffer *vb ,
                             struct v4l2_framebuffer *fbuf ) 
{ 
  struct videobuf_vmalloc_memory *mem ;
  int pages ;
  long tmp ;
  long tmp___0 ;

  {
#line 177
  mem = (struct videobuf_vmalloc_memory *)vb->priv;
#line 180
  tmp = __builtin_expect((unsigned long )mem == (unsigned long )((struct videobuf_vmalloc_memory *)0),
                         0L);
#line 180
  if (tmp != 0L) {
#line 180
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (180), "i" (12UL));
    ldv_23993: ;
#line 180
    goto ldv_23993;
  } else {

  }
#line 182
  tmp___0 = __builtin_expect(mem->magic != 404886051U, 0L);
#line 182
  if (tmp___0 != 0L) {
#line 182
    printk("<3>magic mismatch: %x (expected %x)\n", mem->magic, 404886051);
#line 182
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (182), "i" (12UL));
    ldv_23994: ;
#line 182
    goto ldv_23994;
  } else {

  }
#line 184
  switch ((unsigned int )vb->memory) {
  case 1U: ;
#line 186
  if (debug > 0) {
#line 186
    printk("<7>vbuf-vmalloc: %s memory method MMAP\n", "__videobuf_iolock");
  } else {

  }
#line 189
  if ((unsigned long )mem->vmalloc == (unsigned long )((void *)0)) {
#line 190
    printk("<3>memory is not alloced/mmapped.\n");
#line 191
    return (-22);
  } else {

  }
#line 193
  goto ldv_23997;
  case 2U: 
#line 195
  pages = (int )((unsigned int )vb->size + 4095U) & -4096;
#line 197
  if (debug > 0) {
#line 197
    printk("<7>vbuf-vmalloc: %s memory method USERPTR\n", "__videobuf_iolock");
  } else {

  }
#line 199
  if (vb->baddr != 0UL) {
#line 200
    printk("<3>USERPTR is currently not supported\n");
#line 201
    return (-22);
  } else {

  }
#line 208
  mem->vmalloc = vmalloc_user((unsigned long )pages);
#line 209
  if ((unsigned long )mem->vmalloc == (unsigned long )((void *)0)) {
#line 210
    printk("<3>vmalloc (%d pages) failed\n", pages);
#line 211
    return (-12);
  } else {

  }
#line 213
  if (debug > 0) {
#line 213
    printk("<7>vbuf-vmalloc: vmalloc is at addr %p (%d pages)\n", mem->vmalloc, pages);
  } else {

  }
#line 235
  goto ldv_23997;
  case 3U: ;
  default: ;
#line 238
  if (debug > 0) {
#line 238
    printk("<7>vbuf-vmalloc: %s memory method OVERLAY/unknown\n", "__videobuf_iolock");
  } else {

  }
#line 241
  printk("<3>Memory method currently unsupported.\n");
#line 242
  return (-22);
  }
  ldv_23997: ;
#line 245
  return (0);
}
}
#line 248 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static int __videobuf_sync(struct videobuf_queue *q , struct videobuf_buffer *buf ) 
{ 


  {
#line 251
  return (0);
}
}
#line 254 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static int __videobuf_mmap_mapper(struct videobuf_queue *q , struct vm_area_struct *vma ) 
{ 
  struct videobuf_vmalloc_memory *mem ;
  struct videobuf_mapping *map ;
  unsigned int first ;
  int retval ;
  int pages ;
  unsigned long offset ;
  void *tmp ;
  long tmp___0 ;
  long tmp___1 ;

  {
#line 261
  offset = vma->vm_pgoff << 12;
#line 263
  if (debug > 0) {
#line 263
    printk("<7>vbuf-vmalloc: %s\n", "__videobuf_mmap_mapper");
  } else {

  }
#line 264
  if ((vma->vm_flags & 2UL) == 0UL || (vma->vm_flags & 8UL) == 0UL) {
#line 265
    return (-22);
  } else {

  }
#line 268
  first = 0U;
#line 268
  goto ldv_24019;
  ldv_24018: ;
#line 269
  if ((unsigned long )q->bufs[first] == (unsigned long )((struct videobuf_buffer *)0)) {
#line 270
    goto ldv_24016;
  } else {

  }
#line 272
  if ((unsigned int )(q->bufs[first])->memory != 1U) {
#line 273
    goto ldv_24016;
  } else {

  }
#line 274
  if ((q->bufs[first])->boff == offset) {
#line 275
    goto ldv_24017;
  } else {

  }
  ldv_24016: 
#line 268
  first = first + 1U;
  ldv_24019: ;
#line 268
  if (first <= 31U) {
#line 269
    goto ldv_24018;
  } else {

  }
  ldv_24017: ;
#line 277
  if (first == 32U) {
#line 278
    if (debug > 0) {
#line 278
      printk("<7>vbuf-vmalloc: mmap app bug: offset invalid [offset=0x%lx]\n", vma->vm_pgoff << 12);
    } else {

    }
#line 280
    return (-22);
  } else {

  }
#line 284
  tmp = kzalloc(32UL, 208U);
#line 284
  map = (struct videobuf_mapping *)tmp;
#line 285
  if ((unsigned long )map == (unsigned long )((struct videobuf_mapping *)0)) {
#line 286
    return (-12);
  } else {

  }
#line 288
  (q->bufs[first])->map = map;
#line 289
  map->start = vma->vm_start;
#line 290
  map->end = vma->vm_end;
#line 291
  map->q = q;
#line 293
  (q->bufs[first])->baddr = vma->vm_start;
#line 295
  mem = (struct videobuf_vmalloc_memory *)(q->bufs[first])->priv;
#line 296
  tmp___0 = __builtin_expect((unsigned long )mem == (unsigned long )((struct videobuf_vmalloc_memory *)0),
                             0L);
#line 296
  if (tmp___0 != 0L) {
#line 296
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (296), "i" (12UL));
    ldv_24020: ;
#line 296
    goto ldv_24020;
  } else {

  }
#line 297
  tmp___1 = __builtin_expect(mem->magic != 404886051U, 0L);
#line 297
  if (tmp___1 != 0L) {
#line 297
    printk("<3>magic mismatch: %x (expected %x)\n", mem->magic, 404886051);
#line 297
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (297), "i" (12UL));
    ldv_24021: ;
#line 297
    goto ldv_24021;
  } else {

  }
#line 299
  pages = (int )(((unsigned int )vma->vm_end - (unsigned int )vma->vm_start) + 4095U) & -4096;
#line 300
  mem->vmalloc = vmalloc_user((unsigned long )pages);
#line 301
  if ((unsigned long )mem->vmalloc == (unsigned long )((void *)0)) {
#line 302
    printk("<3>vmalloc (%d pages) failed\n", pages);
#line 303
    goto error;
  } else {

  }
#line 305
  if (debug > 0) {
#line 305
    printk("<7>vbuf-vmalloc: vmalloc is at addr %p (%d pages)\n", mem->vmalloc, pages);
  } else {

  }
#line 308
  retval = remap_vmalloc_range(vma, mem->vmalloc, 0UL);
#line 309
  if (retval < 0) {
#line 310
    printk("<3>mmap: remap failed with error %d. ", retval);
#line 311
    vfree((void const   *)mem->vmalloc);
#line 312
    goto error;
  } else {

  }
#line 315
  vma->vm_ops = & videobuf_vm_ops;
#line 316
  vma->vm_flags = vma->vm_flags | 786432UL;
#line 317
  vma->vm_private_data = (void *)map;
#line 319
  if (debug > 0) {
#line 319
    printk("<7>vbuf-vmalloc: mmap %p: q=%p %08lx-%08lx (%lx) pgoff %08lx buf %d\n",
           map, q, vma->vm_start, vma->vm_end, (long )(q->bufs[first])->bsize, vma->vm_pgoff,
           first);
  } else {

  }
#line 324
  videobuf_vm_open(vma);
#line 326
  return (0);
  error: 
#line 329
  mem = 0;
#line 330
  kfree((void const   *)map);
#line 331
  return (-12);
}
}
#line 334 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static int __videobuf_copy_to_user(struct videobuf_queue *q , char *data , size_t count ,
                                   int nonblocking ) 
{ 
  struct videobuf_vmalloc_memory *mem ;
  long tmp ;
  long tmp___0 ;
  long tmp___1 ;
  int tmp___2 ;

  {
#line 338
  mem = (struct videobuf_vmalloc_memory *)(q->read_buf)->priv;
#line 339
  tmp = __builtin_expect((unsigned long )mem == (unsigned long )((struct videobuf_vmalloc_memory *)0),
                         0L);
#line 339
  if (tmp != 0L) {
#line 339
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (339), "i" (12UL));
    ldv_24030: ;
#line 339
    goto ldv_24030;
  } else {

  }
#line 340
  tmp___0 = __builtin_expect(mem->magic != 404886051U, 0L);
#line 340
  if (tmp___0 != 0L) {
#line 340
    printk("<3>magic mismatch: %x (expected %x)\n", mem->magic, 404886051);
#line 340
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (340), "i" (12UL));
    ldv_24031: ;
#line 340
    goto ldv_24031;
  } else {

  }
#line 342
  tmp___1 = __builtin_expect((unsigned long )mem->vmalloc == (unsigned long )((void *)0),
                             0L);
#line 342
  if (tmp___1 != 0L) {
#line 342
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (342), "i" (12UL));
    ldv_24032: ;
#line 342
    goto ldv_24032;
  } else {

  }
#line 345
  if ((q->read_buf)->size - (unsigned long )q->read_off < count) {
#line 346
    count = (q->read_buf)->size - (unsigned long )q->read_off;
  } else {

  }
#line 348
  tmp___2 = copy_to_user((void *)data, (void const   *)mem->vmalloc + (unsigned long )q->read_off,
                         (unsigned int )count);
#line 348
  if (tmp___2 != 0) {
#line 349
    return (-14);
  } else {

  }
#line 351
  return ((int )count);
}
}
#line 354 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static int __videobuf_copy_stream(struct videobuf_queue *q , char *data , size_t count ,
                                  size_t pos , int vbihack , int nonblocking ) 
{ 
  unsigned int *fc ;
  struct videobuf_vmalloc_memory *mem ;
  long tmp ;
  long tmp___0 ;
  int tmp___1 ;

  {
#line 359
  mem = (struct videobuf_vmalloc_memory *)(q->read_buf)->priv;
#line 360
  tmp = __builtin_expect((unsigned long )mem == (unsigned long )((struct videobuf_vmalloc_memory *)0),
                         0L);
#line 360
  if (tmp != 0L) {
#line 360
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (360), "i" (12UL));
    ldv_24043: ;
#line 360
    goto ldv_24043;
  } else {

  }
#line 361
  tmp___0 = __builtin_expect(mem->magic != 404886051U, 0L);
#line 361
  if (tmp___0 != 0L) {
#line 361
    printk("<3>magic mismatch: %x (expected %x)\n", mem->magic, 404886051);
#line 361
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (361), "i" (12UL));
    ldv_24044: ;
#line 361
    goto ldv_24044;
  } else {

  }
#line 363
  if (vbihack != 0) {
#line 368
    fc = (unsigned int *)mem->vmalloc;
#line 369
    fc = fc + (((q->read_buf)->size >> 2) + 0xffffffffffffffffUL);
#line 370
    *fc = (q->read_buf)->field_count >> 1;
#line 371
    if (debug > 0) {
#line 371
      printk("<7>vbuf-vmalloc: vbihack: %d\n", *fc);
    } else {

    }
  } else {

  }
#line 375
  tmp___1 = __videobuf_copy_to_user(q, data, count, nonblocking);
#line 375
  count = (size_t )tmp___1;
#line 377
  if (count == 0xfffffffffffffff2UL && pos == 0UL) {
#line 378
    return (-14);
  } else {

  }
#line 380
  return ((int )count);
}
}
#line 383 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
static struct videobuf_qtype_ops qops  = 
#line 383
     {304484355U, & __videobuf_alloc, & videobuf_to_vmalloc, & __videobuf_iolock, & __videobuf_sync,
    & __videobuf_copy_to_user, & __videobuf_copy_stream, & __videobuf_mmap_mapper};
#line 395 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
void videobuf_queue_vmalloc_init(struct videobuf_queue *q , struct videobuf_queue_ops  const  *ops ,
                                 struct device *dev , spinlock_t *irqlock , enum v4l2_buf_type type ,
                                 enum v4l2_field field , unsigned int msize , void *priv ) 
{ 


  {
#line 404
  videobuf_queue_core_init(q, ops, dev, irqlock, type, field, msize, priv, & qops);
#line 406
  return;
}
}
#line 409 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
void *videobuf_to_vmalloc(struct videobuf_buffer *buf ) 
{ 
  struct videobuf_vmalloc_memory *mem ;
  long tmp ;
  long tmp___0 ;

  {
#line 411
  mem = (struct videobuf_vmalloc_memory *)buf->priv;
#line 412
  tmp = __builtin_expect((unsigned long )mem == (unsigned long )((struct videobuf_vmalloc_memory *)0),
                         0L);
#line 412
  if (tmp != 0L) {
#line 412
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (412), "i" (12UL));
    ldv_24073: ;
#line 412
    goto ldv_24073;
  } else {

  }
#line 413
  tmp___0 = __builtin_expect(mem->magic != 404886051U, 0L);
#line 413
  if (tmp___0 != 0L) {
#line 413
    printk("<3>magic mismatch: %x (expected %x)\n", mem->magic, 404886051);
#line 413
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (413), "i" (12UL));
    ldv_24074: ;
#line 413
    goto ldv_24074;
  } else {

  }
#line 415
  return (mem->vmalloc);
}
}
#line 419 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
void videobuf_vmalloc_free(struct videobuf_buffer *buf ) 
{ 
  struct videobuf_vmalloc_memory *mem ;
  long tmp ;

  {
#line 421
  mem = (struct videobuf_vmalloc_memory *)buf->priv;
#line 429
  if ((unsigned int )buf->memory != 2U || buf->baddr != 0UL) {
#line 430
    return;
  } else {

  }
#line 432
  if ((unsigned long )mem == (unsigned long )((struct videobuf_vmalloc_memory *)0)) {
#line 433
    return;
  } else {

  }
#line 435
  tmp = __builtin_expect(mem->magic != 404886051U, 0L);
#line 435
  if (tmp != 0L) {
#line 435
    printk("<3>magic mismatch: %x (expected %x)\n", mem->magic, 404886051);
#line 435
    __asm__  volatile   ("1:\tud2\n.pushsection __bug_table,\"a\"\n2:\t.long 1b - 2b, %c0 - 2b\n\t.word %c1, 0\n\t.org 2b+%c2\n.popsection": : "i" ((char *)"/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"),
                         "i" (435), "i" (12UL));
    ldv_24085: ;
#line 435
    goto ldv_24085;
  } else {

  }
#line 437
  vfree((void const   *)mem->vmalloc);
#line 438
  mem->vmalloc = 0;
#line 440
  return;
}
}
#line 461
void ldv_check_final_state(void) ;
#line 470
void ldv_initialize(void) ;
#line 473
extern void ldv_handler_precall(void) ;
#line 476
extern int nondet_int(void) ;
#line 479 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
int LDV_IN_INTERRUPT  ;
#line 482 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
void ldv_main0_sequence_infinite_withcheck_stateful(void) 
{ 
  struct vm_area_struct *var_group1 ;
  size_t var___videobuf_alloc_2_p0 ;
  struct videobuf_queue *var_group2 ;
  struct videobuf_buffer *var_group3 ;
  struct v4l2_framebuffer *var___videobuf_iolock_3_p2 ;
  char *var___videobuf_copy_to_user_6_p1 ;
  size_t var___videobuf_copy_to_user_6_p2 ;
  int var___videobuf_copy_to_user_6_p3 ;
  char *var___videobuf_copy_stream_7_p1 ;
  size_t var___videobuf_copy_stream_7_p2 ;
  size_t var___videobuf_copy_stream_7_p3 ;
  int var___videobuf_copy_stream_7_p4 ;
  int var___videobuf_copy_stream_7_p5 ;
  int ldv_s_videobuf_vm_ops_vm_operations_struct ;
  int tmp ;
  int tmp___0 ;

  {
#line 682
  ldv_s_videobuf_vm_ops_vm_operations_struct = 0;
#line 672
  LDV_IN_INTERRUPT = 1;
#line 681
  ldv_initialize();
#line 687
  goto ldv_24134;
  ldv_24133: 
#line 691
  tmp = nondet_int();
#line 691
  switch (tmp) {
  case 0: ;
#line 696
  if (ldv_s_videobuf_vm_ops_vm_operations_struct == 0) {
#line 713
    ldv_handler_precall();
#line 714
    videobuf_vm_open(var_group1);
#line 719
    ldv_s_videobuf_vm_ops_vm_operations_struct = ldv_s_videobuf_vm_ops_vm_operations_struct + 1;
  } else {

  }
#line 725
  goto ldv_24123;
  case 1: ;
#line 729
  if (ldv_s_videobuf_vm_ops_vm_operations_struct == 1) {
#line 746
    ldv_handler_precall();
#line 747
    videobuf_vm_close(var_group1);
#line 752
    ldv_s_videobuf_vm_ops_vm_operations_struct = 0;
  } else {

  }
#line 758
  goto ldv_24123;
  case 2: 
#line 779
  ldv_handler_precall();
#line 780
  __videobuf_alloc(var___videobuf_alloc_2_p0);
#line 791
  goto ldv_24123;
  case 3: 
#line 812
  ldv_handler_precall();
#line 813
  __videobuf_iolock(var_group2, var_group3, var___videobuf_iolock_3_p2);
#line 820
  goto ldv_24123;
  case 4: 
#line 843
  ldv_handler_precall();
#line 844
  __videobuf_sync(var_group2, var_group3);
#line 851
  goto ldv_24123;
  case 5: 
#line 874
  ldv_handler_precall();
#line 875
  __videobuf_mmap_mapper(var_group2, var_group1);
#line 882
  goto ldv_24123;
  case 6: 
#line 905
  ldv_handler_precall();
#line 906
  __videobuf_copy_to_user(var_group2, var___videobuf_copy_to_user_6_p1, var___videobuf_copy_to_user_6_p2,
                          var___videobuf_copy_to_user_6_p3);
#line 913
  goto ldv_24123;
  case 7: 
#line 936
  ldv_handler_precall();
#line 937
  __videobuf_copy_stream(var_group2, var___videobuf_copy_stream_7_p1, var___videobuf_copy_stream_7_p2,
                         var___videobuf_copy_stream_7_p3, var___videobuf_copy_stream_7_p4,
                         var___videobuf_copy_stream_7_p5);
#line 944
  goto ldv_24123;
  case 8: 
#line 967
  ldv_handler_precall();
#line 968
  videobuf_to_vmalloc(var_group3);
#line 975
  goto ldv_24123;
  default: ;
#line 976
  goto ldv_24123;
  }
  ldv_24123: ;
  ldv_24134: 
#line 687
  tmp___0 = nondet_int();
#line 687
  if (tmp___0 != 0 || ldv_s_videobuf_vm_ops_vm_operations_struct != 0) {
#line 689
    goto ldv_24133;
  } else {

  }


#line 985
  ldv_check_final_state();
#line 988
  return;
}
}
#line 992 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
void ldv_mutex_lock_1(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 997
  ldv_mutex_lock_vb_lock_of_videobuf_queue(ldv_func_arg1);
#line 999
  mutex_lock(ldv_func_arg1);
#line 1000
  return;
}
}
#line 1002 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/dscv/ri/32_7a/drivers/media/video/videobuf-vmalloc.c.prepared"
void ldv_mutex_unlock_2(struct mutex *ldv_func_arg1 ) 
{ 


  {
#line 1007
  ldv_mutex_unlock_vb_lock_of_videobuf_queue(ldv_func_arg1);
#line 1009
  mutex_unlock(ldv_func_arg1);
#line 1010
  return;
}
}
#line 10 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
__inline static void ldv_error(void) 
{ 


  {
  LDV_ERROR: 
#line 12
  goto LDV_ERROR;
}
}
#line 25
extern int ldv_undef_int(void) ;
#line 49 "/home/ldvuser/ldv/inst/kernel-rules/verifier/rcv.h"
long __builtin_expect(long exp , long c ) 
{ 


  {
#line 51
  return (exp);
}
}
#line 8 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
static int ldv_mutex_vb_lock_of_videobuf_queue  ;
#line 11 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_mutex_lock_interruptible_vb_lock_of_videobuf_queue(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 16
  if (ldv_mutex_vb_lock_of_videobuf_queue == 1) {

  } else {
#line 16
    ldv_error();
  }
#line 19
  nondetermined = ldv_undef_int();
#line 22
  if (nondetermined) {
#line 25
    ldv_mutex_vb_lock_of_videobuf_queue = 2;
#line 27
    return (0);
  } else {
#line 32
    return (-4);
  }
}
}
#line 37 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_mutex_lock_killable_vb_lock_of_videobuf_queue(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 42
  if (ldv_mutex_vb_lock_of_videobuf_queue == 1) {

  } else {
#line 42
    ldv_error();
  }
#line 45
  nondetermined = ldv_undef_int();
#line 48
  if (nondetermined) {
#line 51
    ldv_mutex_vb_lock_of_videobuf_queue = 2;
#line 53
    return (0);
  } else {
#line 58
    return (-4);
  }
}
}
#line 63 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
void ldv_mutex_lock_vb_lock_of_videobuf_queue(struct mutex *lock ) 
{ 


  {
#line 66
  if (ldv_mutex_vb_lock_of_videobuf_queue == 1) {

  } else {
#line 66
    ldv_error();
  }
#line 68
  ldv_mutex_vb_lock_of_videobuf_queue = 2;
#line 69
  return;
}
}
#line 72 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_mutex_trylock_vb_lock_of_videobuf_queue(struct mutex *lock ) 
{ 
  int is_mutex_held_by_another_thread ;

  {
#line 77
  if (ldv_mutex_vb_lock_of_videobuf_queue == 1) {

  } else {
#line 77
    ldv_error();
  }
#line 80
  is_mutex_held_by_another_thread = ldv_undef_int();
#line 83
  if (is_mutex_held_by_another_thread) {
#line 86
    return (0);
  } else {
#line 91
    ldv_mutex_vb_lock_of_videobuf_queue = 2;
#line 93
    return (1);
  }
}
}
#line 98 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_atomic_dec_and_mutex_lock_vb_lock_of_videobuf_queue(atomic_t *cnt , struct mutex *lock ) 
{ 
  int atomic_value_after_dec ;

  {
#line 103
  if (ldv_mutex_vb_lock_of_videobuf_queue == 1) {

  } else {
#line 103
    ldv_error();
  }
#line 106
  atomic_value_after_dec = ldv_undef_int();
#line 109
  if (atomic_value_after_dec == 0) {
#line 112
    ldv_mutex_vb_lock_of_videobuf_queue = 2;
#line 114
    return (1);
  } else {

  }
#line 118
  return (0);
}
}
#line 123 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
int ldv_mutex_is_locked_vb_lock_of_videobuf_queue(struct mutex *lock ) 
{ 
  int nondetermined ;

  {
#line 127
  if (ldv_mutex_vb_lock_of_videobuf_queue == 1) {
#line 130
    nondetermined = ldv_undef_int();
#line 133
    if (nondetermined) {
#line 136
      return (0);
    } else {
#line 141
      return (1);
    }
  } else {
#line 147
    return (1);
  }
}
}
#line 152 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
void ldv_mutex_unlock_vb_lock_of_videobuf_queue(struct mutex *lock ) 
{ 


  {
#line 155
  if (ldv_mutex_vb_lock_of_videobuf_queue == 2) {

  } else {
#line 155
    ldv_error();
  }
#line 157
  ldv_mutex_vb_lock_of_videobuf_queue = 1;
#line 158
  return;
}
}
#line 162 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
void ldv_initialize(void) 
{ 


  {
#line 165
  ldv_mutex_vb_lock_of_videobuf_queue = 1;
#line 166
  return;
}
}
#line 169 "/work/ldvuser/novikov/work/current--X--drivers/media/video/videobuf-vmalloc.ko--X--defaultlinux--X--32_7a--X--cpachecker/linux/csd_deg_dscv/11/dscv_tempdir/rule-instrumentor/32_7a/common-model/ldv_common_model.c"
void ldv_check_final_state(void) 
{ 


  {
#line 172
  if (ldv_mutex_vb_lock_of_videobuf_queue == 1) {

  } else {
#line 172
    ldv_error();
  }
#line 173
  return;
}
}
